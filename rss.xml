<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>mitsukuchiph.</title>
        <link>https://linooohon.com/blog/</link>
        <description>MemE 是一個強大且可高度定製的 GoHugo 部落格主題，專為個人部落格設計。</description>
        <generator>Hugo 0.83.1 https://gohugo.io/</generator>
        
            <language>zh-TW</language>
        
        
            <managingEditor>linooohon@gmail.com (mitsukuchiph.)</managingEditor>
        
        
            <webMaster>linooohon@gmail.com (mitsukuchiph.)</webMaster>
        
        
        <lastBuildDate>Fri, 29 Oct 2021 16:40:39 &#43;0800</lastBuildDate>
        
            <atom:link rel="self" type="application/rss&#43;xml" href="https://linooohon.com/blog/rss.xml" />
        
        
            <item>
                <title>關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄，不同瀏覽器的差異..</title>
                <link>https://linooohon.com/blog/posts/11/211011/Nuxtjs_Note/</link>
                <guid isPermaLink="true">https://linooohon.com/blog/posts/11/211011/Nuxtjs_Note/</guid>
                <pubDate>Mon, 11 Oct 2021 18:36:14 &#43;0800</pubDate>
                
                    <author>linooohon@gmail.com (mitsukuchiph.)</author>
                
                
                
                    <description>&lt;h1 style=&#34;text-align:center&#34;&gt;
今年 PyCon2021 也圓滿落幕了，小弟第一次參加，非常感謝組員的指導和幫忙，繼續加油，希望自己也能夠成長變成分享的那個人。
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在 PyConTW2021 Dev Team 開發紀錄，關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- ![在 PyConTW2021 Dev Team 開發紀錄，關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄](/blog/images/11_211011/11_211011_PyCon_Nuxt_01.png) --&gt;
&lt;h2 id=&#34;-bug-&#34;&gt;&lt;strong&gt;&amp;lt; Bug &amp;gt;:&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;今年在 PyConTW 開發組幫忙開發 2021 Conference 時，發生了一個小Bug。&lt;/p&gt;
&lt;p&gt;「也就是每一頁的 &lt;code&gt;&amp;lt;h1&amp;gt;title&amp;lt;/h1&amp;gt;&lt;/code&gt; 在 &amp;quot;iOS 與 Safari&amp;quot; 都會自動產生換行!」&lt;/p&gt;
&lt;p&gt;但在 html 裡面始終找不到出錯點在哪，因為看起來都非常正常。
且如果從 Chrome 以及其他瀏覽器瀏覽器也不會有問題，所以可以肯定的是，
不同瀏覽器解釋間的差異，造成 iOS 和 Safari 會有換行問題。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那為什麼會換行，是什麼造成的，後來發現與 tag 中夾帶的 text 中的空格有關。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;後來實際去查看渲染過後的 html code 發現 tag 裡的 text 渲染出來會夾帶空格，至於為什麼會有什麼空格，與渲染時 template 的 format 有關係。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/11_211011/11_211011_PyCon_Nuxt_01.png&#34; alt=&#34;在 PyConTW2021 Dev Team 開發紀錄，關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;當 template 是如下的格式時，選染出來的 tag 裡的 text 會夾帶空格(如上)。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/11_211011/11_211011_PyCon_Nuxt_02.png&#34; alt=&#34;在 PyConTW2021 Dev Team 開發紀錄，關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-解決-&#34;&gt;&lt;strong&gt;&amp;lt; 解決 &amp;gt;:&lt;/strong&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;發現問題後，想到的第一個解決方式是:
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;solve1&#34;&gt;solve.1&lt;/h3&gt;
&lt;p&gt;&amp;lt;solve.1&amp;gt; 當我們可以把格式調整成與 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;/&amp;gt;&lt;/code&gt; 相連，如此渲染時， 就不會產生空格。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/11_211011/11_211011_PyCon_Nuxt_03.png&#34; alt=&#34;在 PyConTW2021 Dev Team 開發紀錄，關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄&#34;&gt;&lt;/p&gt;
&lt;p&gt;接著因為我們開發有固定的 format 格式，所以 &lt;code&gt;solve.1&lt;/code&gt; 的解法，兩個 approach&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以破壞 formatter 規則解決&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;或是&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;縮減 html 字量，直到連在一起的程度&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;solve2&#34;&gt;solve.2&lt;/h3&gt;
&lt;p&gt;&amp;lt;solve.2&amp;gt; 解法是使用 &lt;code&gt;white-space: nowrap&lt;/code&gt;
但這個比較偏硬幹，只能適應特定情況。(ex: title 字數夠少)&lt;/p&gt;
&lt;h2 id=&#34;-後記-&#34;&gt;&lt;strong&gt;&amp;lt; 後記 &amp;gt;:&lt;/strong&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;最後我們選擇了 &lt;code&gt;solve.1&lt;/code&gt; 的縮減 html 字量，也是這個情況想到的最好解法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一開始還真沒想到可以縮減，我竟然沒想到，經過組長 Matt 修了之後，才恍然大悟這件事應該早就要想到...不然我一開始是用 &lt;code&gt;solve.2&lt;/code&gt; 去硬修..&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;從發現問題，到找到關鍵點，這之中的搜索常常是大海撈針，不過也挺酷的，訓練自己搜索資料的能力。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;self-checklist&#34;&gt;Self Checklist:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is &lt;code&gt;white-space&lt;/code&gt; in CSS properties&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand different browser will have different behavior.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Format somehow is possible to cause render problem sometimes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;references&#34;&gt;References:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pycontw/pycontw-2021/pull/123&#34;&gt;PyConTW2021. PR#123&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3.org/TR/css-text-3/#soft-wrap-opportunity&#34;&gt;www.w3.org - Line Breaking and Soft wrap 調查&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3.org/TR/css-text-3/#propdef-white-space&#34;&gt;www.w3.org - White Space and Wrapping 調查&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;!-- &lt;a href=&#34;https://linooohon.com/blog/blog/posts/08/210805/python的yield和scrapy的yield&#34;&gt;Python 觀念(2) yield 是什麼?，那Scrapy 裡的 yield?&lt;/a&gt; --&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/categories/202110/">202110</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/pycon/">PyCon</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/nuxt/">Nuxt</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/vue/">Vue</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>關於 Python 的幾種安裝與路徑(Python Install &amp; PATH)</title>
                <link>https://linooohon.com/blog/posts/10/210915/%E9%97%9C%E6%96%BCPython%E7%9A%84%E5%B9%BE%E7%A8%AE%E5%AE%89%E8%A3%9D%E8%88%87%E8%B7%AF%E5%BE%91%28Python%20Install%20&amp;%20PATH%29/</link>
                <guid isPermaLink="true">https://linooohon.com/blog/posts/10/210915/%E9%97%9C%E6%96%BCPython%E7%9A%84%E5%B9%BE%E7%A8%AE%E5%AE%89%E8%A3%9D%E8%88%87%E8%B7%AF%E5%BE%91%28Python%20Install%20&amp;%20PATH%29/</guid>
                <pubDate>Wed, 15 Sep 2021 18:36:14 &#43;0800</pubDate>
                
                    <author>linooohon@gmail.com (mitsukuchiph.)</author>
                
                
                
                    <description>&lt;h1 style=&#34;text-align:center&#34;&gt;
關於 Python 的幾種安裝與路徑(Python Install &amp; PATH)
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在幫助公司建立 data monorepo 的過程，決定把 Python 的一些相關安裝和路徑筆記起來。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/10_210915/10_210915_pythoninstallandpath.png&#34; alt=&#34;關於 Python 的幾種安裝與路徑(Python Install &amp; PATH)&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-一-python-on-macos-docs-&#34;&gt;&lt;strong&gt;&amp;lt; 一. Python on MacOS Docs &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;p&gt;Using Python on a Mac &lt;a href=&#34;https://docs.python.org/3/using/mac.html&#34;&gt;Python Docs&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-二-安裝及路徑-&#34;&gt;&lt;strong&gt;&amp;lt; 二. 安裝及路徑 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;--作業系統本身就有的-pythonapple-provided-build-of-python一種&#34;&gt;- 作業系統本身就有的 Python(Apple-provided build of Python):一種&lt;/h3&gt;
&lt;h4 id=&#34;1-apple-provided-build-of-python&#34;&gt;1. Apple-provided build of Python&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Python.framework&lt;/code&gt; folder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Path:&lt;code&gt;/System/Library/Frameworks/Python.framework&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一些 Symlink file 和 一個 Regular file &lt;code&gt;python3&lt;/code&gt; (就我的查看結果)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Path: &lt;code&gt;/usr/bin/python&lt;/code&gt;
&lt;img src=&#34;https://i.imgur.com/ZZRI4Ju.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;By Default, 一般會是 Python 2.7 已經被 Apple 先安裝了，所以上面的檔案才會看起來都是 2 的東西&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;根據 &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;python.org&lt;/a&gt;
&lt;img src=&#34;https://i.imgur.com/9DLDTFE.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但目前開發大都是用 Python3 了, Python2 也不再被 Support，Python3.6 也只 Support 到 2021 年底，所以底下分別歸類一些 Python developer 大多會使用的安裝方式。&lt;/p&gt;
&lt;p style=&#34;color:#fc3503&#34;&gt;注意:&lt;/p&gt;
&lt;p&gt;根據 Python 官方說法，Apple-provided build of Python 是內建 Python 不該去移動修改它，因為它有可能被 MacOS 系統及其他 3 party 所需要。&lt;/p&gt;
&lt;h3 id=&#34;--user-自行安裝user-build-of-python好幾種&#34;&gt;- User 自行安裝(User build of Python):好幾種&lt;/h3&gt;
&lt;h4 id=&#34;1-python-官網下載universal-binary-build-of-pythonpythonorghttpswwwpythonorgdownloads&#34;&gt;1. Python 官網下載(Universal Binary build of Python)&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;python.org&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;下載之後會有的東西:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Python 3.9&lt;/code&gt; folder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Path: &lt;code&gt;/Applications/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;裡面有:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IDLE(Integrated Development and Learning Environment): Python 的整合開發與學習環境，簡單來說就是撰寫 Python 程式的工具，打開後可以在 shell window 寫 Python code&lt;/li&gt;
&lt;li&gt;Python Launcher: 處理執行 python script 的作業&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/using/mac.html#how-to-run-a-python-script&#34;&gt;Refer to 5.1.1: How to run a Python script&lt;/a&gt;&lt;/p&gt;
  &lt;p style=&#34;color: #4455dd&#34;&gt;
  &gt; To run your script from the Finder you have two options:
  &lt;/p&gt;
  &lt;p style=&#34;color: #dd3ddd&#34;&gt;
      1. Drag it to PythonLauncher&lt;br&gt;
      2. Select PythonLauncher as the default application to open your script (or any .py script) through the finder Info window and double-click it. PythonLauncher has various preferences to control how your script is launched. Option-dragging allows you to change these for one invocation, or use its Preferences menu to change things globally.
  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Python.framework&lt;/code&gt; folder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Path: &lt;code&gt;/Library/Frameworks/Python.framework&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;裡面有:
&lt;ul&gt;
&lt;li&gt;Python executable code 和 libraries.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Symlink file:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Path: 在 &lt;code&gt;/usr/local/bin/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;指向 &lt;code&gt;/Library/Frameworks/Python.framework&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;裡面有(假設install 的是 python3.9):
&lt;ul&gt;
&lt;li&gt;2to3:&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/2to3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;2to3-3.9:&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/2to3-3.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;idle3:&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/idle3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;idle3.9:&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/idle3.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pip3:&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/pip3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pip3.9: &lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/pip3.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pydoc3: &lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/pydoc3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pydoc3.9:
&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/pydoc3.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;python3:
&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/python3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;python3-config:
&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/python3-config&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;python3.9:
&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/python3.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;python3.9-config:
&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/python3.9-config&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;確認版本:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只要去&lt;code&gt;Python 3.9&lt;/code&gt;folder 打開 IDLE 就可以看出來是 3.x.x。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;移除官方下載的 Python:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同理，移除三樣東西就行，
&lt;ul&gt;
&lt;li&gt;移除 folder &lt;code&gt;/Applications/Python 3.9/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;移除 folder &lt;code&gt;/Library/Frameworks/Python.framework/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;移除 &lt;code&gt;/usr/local/bin/&lt;/code&gt; 底下的所有 Symlink (數個)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-homebrew-安裝&#34;&gt;2. Homebrew 安裝&lt;/h4&gt;
&lt;p&gt;ex: 試著安裝最近 release 的 python3.10:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;brew install python@3.10
&lt;span class=&#34;c1&#34;&gt;# Homebrew 會安裝需要的所有 dependencies&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Homebrew 會裝在 &lt;code&gt;/usr/local/Cellar&lt;/code&gt; 底下，經過查看發現多了很多東西🥲:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ca-certificates&lt;/li&gt;
&lt;li&gt;gdbm&lt;/li&gt;
&lt;li&gt;libnghttp2&lt;/li&gt;
&lt;li&gt;mpdecimal&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:python@3.10&#34;&gt;python@3.10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:python@3.9&#34;&gt;python@3.9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;sqlite&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同時也會在 &lt;code&gt;/usr/local/bin&lt;/code&gt; 建立一些 symlink&lt;/p&gt;
&lt;h4 id=&#34;3-pyenv-安裝&#34;&gt;3. Pyenv 安裝&lt;/h4&gt;
&lt;p&gt;如果使用 Homebrew 安裝 Pyenv 的話，本身 Pyenv 的 source code 也是在 &lt;code&gt;usr/local/Cellar/pyenv/&lt;/code&gt; &lt;a href=&#34;https://github.com/pyenv/pyenv&#34;&gt;source code&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;一開始先-init-source-codehttpsgithubcompyenvpyenvblobmasterlibexecpyenv-init&#34;&gt;一開始先 init &lt;a href=&#34;https://github.com/pyenv/pyenv/blob/master/libexec/pyenv-init&#34;&gt;source code&lt;/a&gt;:&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 放到 ~/.zshrc 或是 ~/.bash_profile&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PYENV_ROOT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/.pyenv&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PYENV_ROOT&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/bin:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;pyenv init -&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;這裡會修改 PATH 環境變數，加入 ${PYENV_ROOT}/shims/，使得之後指令會先選擇 shims 裡的指令執行，其他詳細的再研讀原始碼。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;重新啟動-shell&#34;&gt;重新啟動 shell:&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;exec &amp;quot;$SHELL&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;pyenv install -v &amp;lt;想要的版本&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;至於使用 Pyenv 安裝 Python 的話，會是在:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~/.pyenv/ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;底下生出來。&lt;/p&gt;
&lt;h5 id=&#34;pyenv-切換-python-版本方式&#34;&gt;pyenv 切換 python 版本方式:&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pyenv global &amp;lt;版本&amp;gt; &lt;span class=&#34;c1&#34;&gt;##全域&lt;/span&gt;
pyenv &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &amp;lt;版本&amp;gt; &lt;span class=&#34;c1&#34;&gt;##此資料夾&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;查看-pyenv-切換有無成功&#34;&gt;查看 pyenv 切換有無成功:&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;pyenv versions
python --version
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;查看-python-路徑&#34;&gt;查看 python 路徑:&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;pyenv which python
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果單純使用 &lt;code&gt;which python&lt;/code&gt; 是看不出來的。會得到 ~/.pyenv/shims，那 shims 裡面的內容其實就是一個接收的人，負責轉換。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shims&lt;/code&gt; folder 主要就是負責接收輸入 pyenv command 時的參數，所以在一開始 init 的時候就有 config 了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pyenv exec&lt;/code&gt;: &lt;code&gt;shims&lt;/code&gt; 會把該帶的參數丟給 &lt;code&gt;pyenv exec&lt;/code&gt; 執行。&lt;a href=&#34;https://github.com/pyenv/pyenv/blob/master/libexec/pyenv-exec&#34;&gt;source code&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; PYENV_VERSION
&lt;span class=&#34;nv&#34;&gt;PYENV_COMMAND_PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;pyenv-which &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PYENV_COMMAND&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;PYENV_BIN_PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PYENV_COMMAND_PATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;%/*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;OLDIFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$IFS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;$&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;scripts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;pyenv-hooks &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$OLDIFS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; script in &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;scripts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[@]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
  &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$script&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;4-conda&#34;&gt;4. Conda&lt;/h4&gt;
&lt;p&gt;可以透過 Anaconda 或是 Miniconda
，我自己是使用 Miniconda&lt;/p&gt;
&lt;h5 id=&#34;第一種-default-path-安裝&#34;&gt;第一種. Default PATH 安裝:&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;conda create --name &amp;lt;環境名&amp;gt; &lt;span class=&#34;nv&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3.7
&lt;span class=&#34;c1&#34;&gt;# e.g.&lt;/span&gt;
conda create --name python3.7 &lt;span class=&#34;nv&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3.7
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;如此 Python 就會被安裝在&lt;code&gt;~/opt/miniconda3/envs/&lt;/code&gt; 底下:
&lt;ul&gt;
&lt;li&gt;PATH: &lt;code&gt;~/opt/miniconda3/envs/python3.7/bin/python&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;第二種-在自己目前所在的-folder-裡安裝-python&#34;&gt;第二種. 在自己目前所在的 folder 裡安裝 Python:&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;conda create --prefix &amp;lt;env名字&amp;gt; &lt;span class=&#34;nv&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;想要裝的python版本&amp;gt;
&lt;span class=&#34;c1&#34;&gt;# e.g.&lt;/span&gt;
conda create --prefix conda_env &lt;span class=&#34;nv&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3.8
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這時就會在當前目錄生出包含 python3.8 的環境:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`root/`
    |___`conda_env/`
            |___`bin/`
            |___`conda-meta/`
            |___`include/`
            |___`lib/`
            |___`share/`
            |___`ssl/`
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;進入環境&#34;&gt;進入環境:&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;conda activate ./conda_env
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;python -V
&lt;span class=&#34;c1&#34;&gt;# 會發現版本已經切換成剛剛的需求 python=3.8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;which python
&lt;span class=&#34;c1&#34;&gt;# 會發現 python 的路徑已經是當前目錄 `conda_env/bin/python`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h6 id=&#34;把目前環境打包成-yml-檔&#34;&gt;把目前環境打包成 yml 檔:&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;conda env export --prefix ./conda_env &amp;gt; environment.yml
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;依照當前-yml-檔把環境建立在當前相同路徑下&#34;&gt;依照當前 yml 檔，把環境建立在當前相同路徑下:&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;conda env create --prefix ./conda_env --file environment.yml
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;依照當前-yml-檔把環境建立在-conda-的-default-path&#34;&gt;依照當前 yml 檔，把環境建立在 Conda 的 Default Path:&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;conda env create --file environment.yml
&lt;span class=&#34;c1&#34;&gt;# OR: conda env create --file &amp;lt;yaml檔名&amp;gt; --name &amp;lt;想建成的環境資料夾名&amp;gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# e.g&lt;/span&gt;
conda env create --file environment.yml --name env_from_yml
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;但是記得 yml 的 name 要修改一下，這會是之後裝在 &lt;code&gt;opt/miniconda3/envs&lt;/code&gt; 底下的 folder 名字。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/opuGaJs.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;self-checklist&#34;&gt;Self Checklist:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to install Python through different ways.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is Environment Variable &lt;code&gt;$PATH&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; The meaning of &lt;code&gt;echo $PATH&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is the difference between &lt;code&gt;pyenv python&lt;/code&gt; and &lt;code&gt;Apple-provided build of Python&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand all the path where python will be placed when download python.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand what is &lt;code&gt;symlink&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand what is &lt;code&gt;IDLE&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand what is &lt;code&gt;Python Launcher&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://josix.tw/pyenv-deep-dive/&#34;&gt;PyConTW DevTeam的大大-Josix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#cloning-an-environment&#34;&gt;Conda Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/using/mac.html#how-to-run-a-python-script&#34;&gt;Python Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/denix-daily/macos%E4%B8%8A%E7%9A%84python%E8%B7%AF%E5%BE%91%E5%95%8F%E9%A1%8C-%E5%AE%89%E8%A3%9D%E6%96%B9%E6%B3%95-a10c01cc42a&#34;&gt;Denis Hsieh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;!-- &lt;a href=&#34;https://linooohon.com/blog/blog/posts/08/210805/python的yield和scrapy的yield&#34;&gt;Python 觀念(2) yield 是什麼?，那Scrapy 裡的 yield?&lt;/a&gt; --&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/categories/202109/">202109</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/python/">Python</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/pyenv/">Pyenv</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/conda/">Conda</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>關於 Session 與 Cookie - &lt; Session篇 &gt; 紀錄</title>
                <link>https://linooohon.com/blog/posts/09/210813/python%E7%9A%84yield%E5%92%8Cscrapy%E7%9A%84yield/</link>
                <guid isPermaLink="true">https://linooohon.com/blog/posts/09/210813/python%E7%9A%84yield%E5%92%8Cscrapy%E7%9A%84yield/</guid>
                <pubDate>Fri, 13 Aug 2021 18:36:14 &#43;0800</pubDate>
                
                    <author>linooohon@gmail.com (mitsukuchiph.)</author>
                
                
                
                    <description>&lt;h1 style=&#34;text-align:center&#34;&gt;
關於 Session 與 Cookie - &lt; Session篇 &gt; 紀錄
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;前陣子在幫忙開發公司的 Nodejs 專案，在處理上，發現自己對 Cookie 和 Session 的概念還沒有很清晰，所以研究了一下，在此紀錄，也順便分享出來。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/09_210813/09_210813_session.png&#34; alt=&#34;關於 Session 與 Cookie - &lt; Session篇 &gt; 紀錄&#34;&gt;&lt;/p&gt;
&lt;p&gt;雖然我的 Blog 應該是 SEO 差到爆的邊緣 Blog, 不過自己也滿喜歡紀錄的，就邊學邊整理下來，有緣人若看到此篇，歡迎與我討論，如果有錯煩請指教。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;底下的紀錄也參考了諸多篇文章與大大的 Blog, 如有一些雷同的敘述，請見諒 🙏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;要搞懂一個東西，就要不斷問 &amp;quot;為什麼&amp;quot; 和 &amp;quot;如何&amp;quot; 。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-此次紀錄重點-&#34;&gt;&lt;strong&gt;&amp;lt; 此次紀錄重點 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;雖然很多人在解釋 Session 時會與 Cookie 一起解釋，但此篇我想先盡量專注在 Session ，先不與 Cookie 混著談。&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;-什麼是-session-統整-&#34;&gt;&lt;strong&gt;&amp;lt; 什麼是 Session 統整 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;各方解釋&#34;&gt;各方解釋:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;從字本身語義切入&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;具有狀態的一段時間&lt;/li&gt;
&lt;li&gt;上下文&lt;/li&gt;
&lt;li&gt;中文翻譯: &amp;quot;會話&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生活例子: 有始有終的一系列動作/消息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ex: 打電話是從拿起電話撥號到掛斷電話，這中間的一系列過程稱之為一個 session&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;當 Session 與網路協議相關時:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有連接或保持狀態的意思&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;當 Session 在 Web 開發領域時有一些詮釋:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;將 Client端 與 Server端之間交互的過程，抽象為&amp;quot;會話&amp;quot;，進而衍生出 &amp;quot;會話的狀態&amp;quot;(偵測/觀測交互過程的狀態)，也就是說這時的 Session 是一種概念&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;狀態管理的解決方案/機制/實現:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;i. Client端 與 Server端之間保持狀態的 &amp;quot;解決方案(機制)&amp;quot;，也就是說這時後，Session 指的是一種狀態管理的解決方式(機制)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ii. Session 是一種 Server端的機制，Server 使用一種類似於 Hash Table(雜湊表/散列表/哈希表) (也可能就是 Hash Table)的結構來保存訊息，在這 Session 指的也是一種狀態管理的解決方式(機制)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;儲存結構:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Client端 與 Server端之間保持狀態的 &amp;quot;解決方案(機制)的存儲結構&amp;quot;，也就是說這時候，Session 指的是一種狀態管理的解決方式(機制)的 &amp;quot;儲存結構&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;資料(狀態/資訊)本身:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因為 1. 的概念而衍伸出，在建立 2. 的狀態管理的解決機制後我們透過 3. 的儲存結構去把所要儲存的狀態儲存起來，這些狀態有時會看到有人寫直接就說是 Session Information(Session 資訊)。所以有時候人家說 Session 也有可能指的是 Session 資訊本身，&lt;code&gt;Session == Session 資訊 ?&lt;/code&gt; 所以我覺得概念還是要懂，比次溝通才會比較順，默契也比較好，因為技術名詞有時候就是有點曖昧，說到這自己的實力還是不行啊....加油！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-什麼是-session-自我統整-&#34;&gt;&lt;strong&gt;&amp;lt; 什麼是 Session 自我統整 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;所以會發現當我們單純說-session-時其實有太多定義模糊的空間&#34;&gt;所以會發現當我們單純說 Session 時，其實有太多定義模糊的空間。&lt;/h3&gt;
&lt;p&gt;自己統整後，&lt;/p&gt;
&lt;h4 id=&#34;session-的含義可以有以下數種&#34;&gt;Session 的含義可以有以下數種:&lt;/h4&gt;
&lt;h5 id=&#34;1-含義1&#34;&gt;1. 含義1:&lt;/h5&gt;
&lt;p&gt;在平常生活上單單就單字用法就是指具有狀態的一段時間、會議、開會、一次交流。
如果有在跳舞的人可能常聽到 Session 這個字眼，每當聽到這個詞時，可能會是指一次比賽的出場，一次活動，一個round, 一段時間內彼此的跳舞交流時間。&lt;/p&gt;
&lt;h5 id=&#34;2-含義2&#34;&gt;2. 含義2:&lt;/h5&gt;
&lt;p&gt;接下來開始試著慢慢引導到 Web 相關的含義。
Session 與網路協議相關時，有時是「連接」的意思:
舉例1. 比如當你要建立通信的渠道，像是打電話，你要確定對方接了電話通信才開始，這也是 Session 的含義之一。
舉例2. 一樣是建立通信的渠道, 像是寫信，你寫出去時不確定地址對不對，雖然收信人不一定能收到，但僅僅對於發信人來說，他也會認為這個 Session 已經開始了，這也是一種 Session 的表現。&lt;/p&gt;
&lt;h5 id=&#34;3-含義3&#34;&gt;3. 含義3:&lt;/h5&gt;
&lt;p&gt;Session 與網路協議相關時，另一個意思是「保持狀態」的意思:
這個保持狀態指的是，在連接之餘，連接的一方能夠把一系列相關的訊息(狀態/資訊)關聯起來，比如說常去吃的麵攤老闆娘她一眼就能記得上次你忘記帶錢說要這次來再付，也記得你最愛點的海鮮麵，直接就幫你做了，這類「保持狀態」的例子有「一個 TCP session」, 「一個 POP3 session」&lt;/p&gt;
&lt;h5 id=&#34;4-含義4&#34;&gt;4. 含義4:&lt;/h5&gt;
&lt;p&gt;Session 進到 Web App的領域時:
Session 在現今 Web開發領域下，可以指 Client 端與 Server 端之間交互的過程，有時會把這個過程統整成「會話」這個詞，此時的 Session 是一種整體的概念。&lt;/p&gt;
&lt;h5 id=&#34;5-含義5&#34;&gt;5. 含義5:&lt;/h5&gt;
&lt;p&gt;當我們知道 Session 可以指有始有終的一系列動作(狀態/消息)時，ex: 像是打電話從撥號到掛斷的一系列過程。
所以有時看到「在一個 Browser 的會話期間..」是指從瀏覽器視窗打開到關閉的這個期間就叫做一個 Session。&lt;/p&gt;
&lt;h5 id=&#34;6-含義6&#34;&gt;6. 含義6:&lt;/h5&gt;
&lt;p&gt;有時看到「 Client 的一次會話期間..」可以指同個目的的一系列動作，像是從登錄到選購商品到結帳登出，這樣的一個過程可以稱作一個 Session, 同時也可被稱為是在資料處理上的一次 transaction，所以在「 Client 的一次會話期間..」的解釋下，開發者在彼此溝通時要理解這個過程的頭跟尾到底彼此指的一不一樣。因為有時候可能 A 想的只是一次性的某個動作期間，但 B 所想的是好幾個動作合起來的期間。&lt;/p&gt;
&lt;h5 id=&#34;7-含義7&#34;&gt;7. 含義7:&lt;/h5&gt;
&lt;p&gt;所以當我們從含義4, 5, 6 解釋過來會發現，這個交互的過程其實也從一種概念演變成實際運行的機制，也就變成較偏向大家所認知的 Session 定義的其中一種，就是 Client端與 Server端之間保持狀態的「機制(解決方案)」。&lt;/p&gt;
&lt;h5 id=&#34;8-含義8&#34;&gt;8. 含義8:&lt;/h5&gt;
&lt;p&gt;那當有人問說你是「存在 Cookie 還是 Session時?」這句話在我以前剛學程式時，覺得問這樣的一個問題沒什麼，也挺專業的(太無知了..)，但經過我的研讀和查閱，我認為事實是問問題還是必須問的精確一點比較好，此篇不討論 Cookie，Cookie 確實是一個儲存的空間，但存在 Session 就有點不太精確，硬要解釋，大部分都是解釋成實作 Session 這種機制的作法，把資料存在一些可以存資料的地方，像是記憶體(Memory)、快取(Cache)、Cookie、資料庫(Database)，所以當這樣的一個問題出現時，無法去定義此時的 Session 是什麼，我們可以猜測的是也許此刻的 Session 指的是資料放的地方。或是另一個含義像是含義 9。&lt;/p&gt;
&lt;h5 id=&#34;9-含義9&#34;&gt;9. 含義9:&lt;/h5&gt;
&lt;p&gt;根據含義8，有時 Session 也會指實踐 Session 機制時，資料被儲存時本身的資料結構。&lt;/p&gt;
&lt;h5 id=&#34;10-含義10&#34;&gt;10. 含義10:&lt;/h5&gt;
&lt;p&gt;根據含義7, 8, 9，我們可以知道資料(狀態/資訊)本身，也有機會被稱為 Session，當我們說「拿 Session 資料」，雖然比較不會被認為 Session 本身就是資料，但還是要記得有這麼一個可能性。&lt;/p&gt;
&lt;h5 id=&#34;11-含義11&#34;&gt;11. 含義11:&lt;/h5&gt;
&lt;p&gt;不同的語言及框架在實踐 Session 概念時，也會有不同作法，此時的 Session 就會因此而有些各方實作及定義上的差異。&lt;/p&gt;
&lt;h2 id=&#34;-為什麼出現-session-&#34;&gt;&lt;strong&gt;&amp;lt; 為什麼出現 Session &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;各方解釋-1&#34;&gt;各方解釋:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HTTP Stateless:以無狀態角度切入&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由於 Http 為 Stateless protocol(無狀態協議)，但在 Web 領域中，server 時常需要紀錄 User 的狀態，但 Http 是無狀態的，所以就需要某種機制來紀錄識別用戶的狀態，而 Session 就出場了。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我認為合理的簡單解釋:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;解決無狀態，Session 出現幫忙&lt;/li&gt;
&lt;li&gt;根據 &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc2109&#34;&gt;RFC 2109&lt;/a&gt; session 可以指一種交互狀態(關係)，這裡面包括 Client 的 Request 和 Server 的 Response 之間的交互內容，最早會出現，裡面也提及是因為要建立 Stateful，裡面說道:&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;3.  STATE AND SESSIONS

   This document describes a way to create stateful sessions with HTTP
   requests and responses.  Currently, HTTP servers respond to each
   client request without relating that request to previous or
   subsequent requests; the technique allows clients and servers that
   wish to exchange state information to place HTTP requests and
   responses within a larger context, which we term a &amp;quot;session&amp;quot;.  This
   context might be used to create, for example, a &amp;quot;shopping cart&amp;quot;, in
   which user selections can be aggregated before purchase, or a
   magazine browsing system, in which a user&#39;s previous reading affects
   which offerings are presented.

   There are, of course, many different potential contexts and thus many
   different potential types of session.  The designers&#39; paradigm for
   sessions created by the exchange of cookies has these key attributes:

      1.  Each session has a beginning and an end.

      2.  Each session is relatively short-lived.

      3.  Either the user agent or the origin server may terminate a
          session.

      4.  The session is implicit in the exchange of state information.
&lt;/code&gt;&lt;/pre&gt;&lt;p style=&#34;color: #549e76&#34;&gt;
This document describes &lt;span style=&#34;color: #ed61cb&#34;&gt;a way to create stateful sessions with HTTP
   requests and responses.&lt;/span&gt; Currently, HTTP servers respond to each
   client request without relating that request to previous or
   subsequent requests;
&lt;/p&gt;
&lt;p style=&#34;color: #549e76&#34;&gt;
the technique &lt;span style=&#34;color: #ed61cb&#34;&gt;allows clients and servers that
   wish to exchange state information to place HTTP requests and
   responses within a larger context&lt;/span&gt;, which we term a &lt;span style=&#34;color: #e35040&#34;&gt;&#34;session&#34;&lt;/span&gt;.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;更詳細可以參考: &lt;a href=&#34;https://blog.techbridge.cc/2019/08/10/session-and-cookie-rfc/&#34;&gt;Huli大大這篇&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-session-資訊-儲存位置-&#34;&gt;&lt;strong&gt;&amp;lt; Session 資訊 儲存位置 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-記憶體&#34;&gt;1. 記憶體&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;小應用在開發環境時，如果不需要共享狀態的情況下，存記憶體是個方便的方式，但除此之外也沒有什麼好處。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-cookie&#34;&gt;2. Cookie&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;把 Session 資訊存在 Cookie，也就是不是 Server 存狀態了，是 Client 存，所以每次 request 都會直接帶上 Session 資訊，所以不用擔心需要共享狀態的問題，安全性問題的話，按照一般做法一定會做處理(比如說 SignedCookie的作法)等等，真正比較大的問題是資料傳輸的量變大。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-快取-ex-redis&#34;&gt;3. 快取 (ex: Redis)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;這是大部份最常用的方式，特點快，也可以共享狀態，相比存在 Cookie ，當 Session 資訊量大的時候，可以節省網路的傳輸。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-資料庫&#34;&gt;4. 資料庫&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;依需求使用，一般不常出現。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-實踐-session-概念機制的兩種方式-&#34;&gt;&lt;strong&gt;&amp;lt; 實踐 Session 概念(機制)的兩種方式 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Cookie-Based Session (也就是 Client Side Session)&lt;/li&gt;
&lt;li&gt;使用 SessionID (也就是 Server Side Session )&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;所謂 Cookie-based session 指的是，今天要存的資料(狀態)都放在 cookie ，有可能是明文存，也有可能是處理過(編碼、加密)存，但基本上安全性問題，就算放基本上都會加密，缺點是：存太多東西在 Cookie ，會變得太笨重。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;SessionID 的使用方式是，把資料、狀態存在 Server，然後 Server 傳的 Set-cookie 是傳一個 SessionID，這個 SessionID 的做用就是當 Browser 傳過來 Server 時，Server 會去比對這個 SessionID 是不是跟當初一開始發給 Browser 時的紀錄是一樣的，相當於一個 Key，利用這個 SessionID 去換存在 Server 的資料、狀態，如此在 Server 和 Browser 就可以維持狀態紀錄，解決 HTTP Stateless&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RFC 6265 提到關於 SessionID 的例子&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt; RFC 6265 &amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc6265&#34;&gt;rfc6265 (ietf.org)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Using the Set-Cookie header, a server can send the user agent a short string in an HTTP response that the user agent will return in future HTTP requests that are within the scope of the cookie. For example, the server can send the user agent a &amp;quot;session identifier&amp;quot; named SID with the value 31d4d96e407aad42. The user agent then returns the session identifier in subsequent requests.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-實踐-session-概念機制的其他種方式-&#34;&gt;&lt;strong&gt;&amp;lt; 實踐 Session 概念(機制)的其他種方式 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;form 裡面放一個 hidden 的欄位&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;form name=&amp;quot;testform&amp;quot; action=&amp;quot;/xxx&amp;quot;&amp;gt;
&amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;jsessionid&amp;quot; value=&amp;quot;ByOK3vjFD75aPnrF7C2HmdnV6QZcEbzWoWiBYEnLerjQ99zWpBng!-145788764&amp;quot;&amp;gt;
&amp;lt;input type=&amp;quot;text&amp;quot;&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;網址列帶資訊(URL重寫)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;http://...../xxx;jsessionid= ByOK3vjFD75aPnrF7C2HmdnV6QZcEbzWoWiBYEnLerjQ99zWpBng!-145788764
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;http://...../xxx?jsessionid=ByOK3vjFD75aPnrF7C2HmdnV6QZcEbzWoWiBYEnLerjQ99zWpBng!-145788764
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-實踐-session-概念機制最常見做法-&#34;&gt;&lt;strong&gt;&amp;lt; 實踐 Session 概念(機制)最常見做法 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Server 如果需要 session (概念or機制or結構)。看怎麼解釋，但通常大家在說的就是，存某些狀態在 Server。那最常見的就是，Server 它想初始化一個 session，於是它就回傳一個 Set-Cookie 的 Header 到 User Agent, 如果這時候 Browser 決定繼續這個 session 的話，可以回傳 Cookie 這個 Header。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;這也是當初 RFC2109 &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc2109&#34;&gt;rfc2109 (ietf.org)&lt;/a&gt;的片段所描述的，也是我們現在常常在做的事，利用 Cookie 去實現 session 這個功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;接下來再找時間寫 Cookie 及其他相關紀錄&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;self-checklist&#34;&gt;Self Checklist:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;Session&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand &lt;code&gt;Session&lt;/code&gt; can means lots of things.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Know how to resolve problem with &lt;code&gt;Session&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/19786827&#34;&gt;https://www.zhihu.com/question/19786827&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.techbridge.cc/2019/08/10/session-and-cookie-rfc/&#34;&gt;https://blog.techbridge.cc/2019/08/10/session-and-cookie-rfc/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc2109&#34;&gt;https://datatracker.ietf.org/doc/html/rfc2109&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fred-zone.blogspot.com/2014/01/web-session.html&#34;&gt;https://fred-zone.blogspot.com/2014/01/web-session.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://iter01.com/194145.html&#34;&gt;https://iter01.com/194145.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.hellojcc.tw/introduce-session-and-cookie/&#34;&gt;https://blog.hellojcc.tw/introduce-session-and-cookie/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.jikexueyuan.com/project/node-lessons/cookie-session.html&#34;&gt;https://wiki.jikexueyuan.com/project/node-lessons/cookie-session.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/6844904073934667790&#34;&gt;https://juejin.cn/post/6844904073934667790&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yken919.pixnet.net/blog/post/45702341&#34;&gt;https://yken919.pixnet.net/blog/post/45702341&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/categories/202108/">202108</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/session/">Session</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/web/">Web</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/cookie/">Cookie</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Python 觀念(2) yield, generator?，那 Scrapy 裡的 yield?</title>
                <link>https://linooohon.com/blog/posts/08/210805/python%E7%9A%84yield%E5%92%8Cscrapy%E7%9A%84yield/</link>
                <guid isPermaLink="true">https://linooohon.com/blog/posts/08/210805/python%E7%9A%84yield%E5%92%8Cscrapy%E7%9A%84yield/</guid>
                <pubDate>Thu, 05 Aug 2021 18:36:14 &#43;0800</pubDate>
                
                    <author>linooohon@gmail.com (mitsukuchiph.)</author>
                
                
                
                    <description>&lt;h1 style=&#34;text-align:center&#34;&gt;
Python 的 yield 是什麼?，Scrapy 裡的 yield?
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;最近研究了一下 yield 的概念，在此統整一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/08_210805/08_210805_pythonyield_intro.png&#34; alt=&#34;Python 的 yield 是什麼?&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-關於-yield-&#34;&gt;&lt;strong&gt;&amp;lt; 關於 yield &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;談到 yield 就會談到 generator，但 generator 是什麼後面解釋！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 python 的定義中，function 中只要出現了 yield（yield expressions），那麼事實上定義的是一個 generator function。
跟一般的 function 不一樣，呼叫 generator function 就是會 return &amp;quot;generator iterator&amp;quot;。&lt;/p&gt;
&lt;h3 id=&#34;所以&#34;&gt;所以,&lt;/h3&gt;
&lt;p&gt;有 yield 的 function 被單純呼叫的時候會 return &amp;quot;generator iterator&amp;quot;，然後這時候還不會執行 function 定義的事情，那什麼時候執行？
大概有兩種執行方式:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;調用 Built-in Function &lt;code&gt;next()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用 for loop (實際 for loop 的步驟也是 magic method &lt;code&gt;__next__()&lt;/code&gt; 在處理)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;例子測試一下&#34;&gt;例子測試一下:&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;確實是 return generator iterator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;happy coding&amp;#34;&lt;/span&gt;
    
    
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_generator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;happy coding&amp;#34;&lt;/span&gt;
    
    
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# happy coding &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/span&gt;
    
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_generator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# &amp;lt;generator object get_generator at 0x10c424d60&amp;gt; &amp;lt;class &amp;#39;generator&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-幾個名詞先釐清-&#34;&gt;&lt;strong&gt;&amp;lt; 幾個名詞先釐清 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;p&gt;在 &lt;a href=&#34;https://docs.python.org/3.9/glossary.html#term-generator&#34;&gt;Python Glossary&lt;/a&gt; 裡定義了三個詞&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;generator&lt;/li&gt;
&lt;li&gt;generator iterator&lt;/li&gt;
&lt;li&gt;generator expression&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;generator-generator-iterator-generator-expression&#34;&gt;generator, generator iterator, generator expression&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;裡面寫道 (這裡只先做名詞區分不解釋)：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;generator
&lt;ul&gt;
&lt;li&gt;是一個 function 會回傳 generator iterator。&lt;/li&gt;
&lt;li&gt;而通常 generator 指的是一個大家常說的詞叫做 &lt;code&gt;generator function&lt;/code&gt;，但是在某些文檔裡也有人把它用來指 &lt;code&gt;generator iterator&lt;/code&gt;，&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;generator iterator
&lt;ul&gt;
&lt;li&gt;是一個被 generator function 創造出來的物件。(就我查詢的過程中，在某些文章裡會寫 &lt;code&gt;generator object&lt;/code&gt; 特別指出當下這個 generator 是被創造出來的 object, 而不是 function)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;generator expression
&lt;ul&gt;
&lt;li&gt;是一個 expression 會回傳 iterator。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&#34;color: #d19169&#34;&gt;名詞看到會有點疑惑，但把它搞清楚才是最佳解，以後看別人的文章或是文件，才不會模模糊糊:&lt;/p&gt;
&lt;p&gt;Glossary 對於 generator 的補充:&lt;/p&gt;
&lt;p style=&#34;color: #42bac7&#34;&gt;Usually refers to a generator function, but may refer to a generator iterator in some contexts. In cases where the intended meaning isn’t clear, using the full terms avoids ambiguity.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所以接下來我會用 generator function 和 generator iterator 這兩個來區別 function 與 object。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;關於 Generator 留到後面做解釋&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;現在只要先知道 function 裡有 yield 就是一個會回傳 generator iterator 的 generator function。
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;既然知道 yield 和 generator 的關係了，底下來個例子
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-generatorgenerator-function-例子解釋-&#34;&gt;&lt;strong&gt;&amp;lt; (generator)generator function 例子解釋 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;用這個 function 來理解一下，看到對岸的朋友解釋的文章，覺得挺好的，記錄下來！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;foo function is starting...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;res:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;執行結果:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;starting&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;********************&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;1-g--foo&#34;&gt;1. &lt;code&gt;g = foo()&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;因為 foo() 帶有 yield 所以根據定義，就算呼叫了 foo(), 他也不會開始執行。&lt;/p&gt;
&lt;p&gt;但是這裡他會得到一個生成器物件 &amp;quot;g&amp;quot; (generator iterator)。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;執行結果: 什麼都沒印&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-printnextg&#34;&gt;2. &lt;code&gt;print(next(g))&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;直到調用 next 方法 foo function 才正式開始執行，
先執行 foo 的 print(&#39;foo function is starting...&#39;) 然後進入 while loop，&lt;/p&gt;
&lt;p&gt;這時候遇到 yield，先把它想成 return ，所以這時候 return 一個 4, program(程序)就停了。
這裡很大的重點是，&amp;quot;並沒有把 4 assign(指派/賦值) 給 res&amp;quot;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;print(next(g)) 執行結果:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;next(g): print 了 &#39;foo function is starting...&#39;&lt;/li&gt;
&lt;li&gt;return 了 4, 所以又 print 了 4&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;foo function is starting...
4
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-print10&#34;&gt;3. &lt;code&gt;print(&#39;*&#39;*10)&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這行只是印開心的順便做一些區隔: print 10個 &#39;*&#39;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;print(&#39;*&#39;*10) 執行結果:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;********************
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-printnextg&#34;&gt;4. &lt;code&gt;print(next(g))&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這裡是第二次調用，每次調用會接續上一次停止的地方，也就是正準備把 4 assign(指派/賦值) 給 res 的時候，但注意這邊因為上一次調用 &lt;code&gt;next()&lt;/code&gt; 的最後一個步驟是 return 4 出去，所以這時候 &amp;quot;=&amp;quot; 右邊已經是 None 了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;print(next(g)) 執行結果:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;這時候 None 被 assign 給 res, res 就是 None，所以 print(&#39;res:&#39;, res) -&amp;gt; res: None。&lt;/li&gt;
&lt;li&gt;接著還在 loop 裡，又會跑到 yield 4, 所以 return 4 出來，所以最後還會 print 出 4。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;res: None
4
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;如果最後一行改成這樣-printgsend7&#34;&gt;如果最後一行改成這樣: &lt;code&gt;print(g.send(7))&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;## 改這行&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;7 就會 assign 給 res
所以 print(&#39;res:&#39;, res) -&amp;gt; res: 7&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;執行結果:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;foo function is starting...
4
********************
res: 7
4
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-key-point-&#34;&gt;&lt;strong&gt;&amp;lt; Key Point &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;每次調用 next() 他會記住上次停的地方，這次就會從那裡開始。&lt;/li&gt;
&lt;li&gt;而 generator iterator 也是 iterator 的一種，所以當然想處理 generator iterator 也是有兩種方式：
&lt;ul&gt;
&lt;li&gt;一次次自己調用 next()&lt;/li&gt;
&lt;li&gt;for loop它&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用 send() 可以接續上一次 yield 停住的地方並 assign 給左邊。&lt;/li&gt;
&lt;li&gt;generator 是 iterator 的一種，但 iterator 卻不一定是 generator。這個不難理解，依我自己的看法(這裡只是隨意舉例!)像是陸軍和特種部隊都會一樣的基本能力，但特種部隊擁有陸軍所沒有的特性, 能力(在程式碼這裡就會是: 定義, 功能, 佔用空間等等..)。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;isinstance-可以查看它是不是這裡不多說&#34;&gt;isinstance 可以查看它是不是，這裡不多說&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;也可以用 isinstance，來確認它是不是 Iterable, Iterator, Generator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-python=&#34; data-lang=&#34;python=&#34;&gt;import pandas as pd
import numpy as np
from collections.abc import Iterator, Iterable, Generator

# dic
dic_ = {&#39;name&#39;: &#39;phil&#39;, &#39;phone&#39;: &#39;0933333333&#39;}
print(&amp;quot;===============dic===============&amp;quot;)
print(isinstance(dic_, Iterable))
print(isinstance(dic_, Iterator))
print(isinstance(dic_, Generator))

# list
list_ = [&#39;a&#39;, 1, {&#39;key&#39;: &#39;value&#39;}, (1, 2), {1, 2}]
print(&amp;quot;===============list===============&amp;quot;)
print(isinstance(list_, Iterable))
print(isinstance(list_, Iterator))
print(isinstance(list_, Generator))

# tuple
tuple_ = (&#39;a&#39;, {&#39;key&#39;: &#39;value&#39;}, 2)
print(&amp;quot;===============tuple===============&amp;quot;)
print(isinstance(tuple_, Iterable))
print(isinstance(tuple_, Iterator))
print(isinstance(tuple_, Generator))

# range
range_ = range(1)
print(&amp;quot;===============range===============&amp;quot;)
print(isinstance(range_, Iterable))
print(isinstance(range_, Iterator))
print(isinstance(range_, Generator))

# string
string_ = &#39;a&#39;
print(&amp;quot;===============string===============&amp;quot;)
print(isinstance(string_, Iterable))
print(isinstance(string_, Iterator))
print(isinstance(string_, Generator))

# set
set_ = {&#39;a&#39;, 2, 3, (1, 2)}
print(&amp;quot;===============set===============&amp;quot;)
print(isinstance(set_, Iterable))
print(isinstance(set_, Iterator))
print(isinstance(set_, Generator))

# numpy array
np_array_ = np.array([1, 2, 3, 4])
print(&amp;quot;===============np_array===============&amp;quot;)
print(isinstance(np_array_, Iterable))
print(isinstance(np_array_, Iterator))
print(isinstance(np_array_, Generator))

# dataframe
df_ = pd.read_csv(&amp;quot;1.csv&amp;quot;)
print(&amp;quot;===============dataframe===============&amp;quot;)
print(isinstance(df_, Iterable))
print(isinstance(df_, Iterator))
print(isinstance(df_, Generator))

# bytes
bytes_1 = bytes(1)
print(&amp;quot;===============bytes===============&amp;quot;)
print(isinstance(bytes_1, Iterable))
print(isinstance(bytes_1, Iterator))
print(isinstance(bytes_1, Generator))

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;generator-到底是什麼目的用法再次解析&#34;&gt;Generator 到底是什麼，目的，用法(再次解析):&lt;/h3&gt;
&lt;p&gt;Python 中有一個東西叫做 List Comprehensions, 是 Python 可以簡潔的創造 list 的方式&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# [4, 16, 36, 64, 100]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;列出資料夾底下所有文件和資料夾&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;listdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 是個 list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p style=&#34;color: #d19169&#34;&gt;但是，如果今天我們要的內容很多，list 就會變得非常佔用記憶體，所以當我們要做的事，可以依照某種規則算出來，那我們就可以 loop 整個過程去持續推算下一個元素，這樣就不必創造很大很大的 list, 在 Python 中，這樣邊 loop 邊計算還真的有，就是 Generator(生成器)&lt;/p&gt;
&lt;p&gt;要創建 generator 除了上面有提過的 generator function，這裡再補充一個，只要把 List Comprehensions 改成小括號 &lt;code&gt;()&lt;/code&gt; 就行了。
就是所謂的 generator expression &lt;a href=&#34;https://docs.python.org/3.9/glossary.html#term-generator-expression&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;generator object &amp;lt;genexpr&amp;gt; at 0x106a674a0&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;那當然 generator 直接 print 沒東西，我們就是透過上面提過的 &lt;code&gt;next()&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;100
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Traceback (most recent call last):
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  File &amp;#34;/Users/linpinhung/Desktop/TMPF/06.py&amp;#34;, line 82, in &amp;lt;module&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    print(next(list_))
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;StopIteration
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;但一直用 next()，太麻煩，基本上都用 for loop 實現，且用 for loop 也不需關心 &lt;code&gt;StopIteration&lt;/code&gt;, Python 幫忙解決，這也就是上一篇提過的 Iterator 的特性之一，Generator Iterator 當然也會有 Iterator 的特性。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;100
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;generatorgenerator-iterator與-iterator的差異&#34;&gt;Generator(Generator Iterator)與 Iterator的差異:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;創建 Generator 我們用 &lt;code&gt;generator expression&lt;/code&gt; 或是 &lt;code&gt;generator function&lt;/code&gt; 而不使用 class 創建, 但創建 Iterator 我們用 &lt;code&gt;iter()&lt;/code&gt; 或是自己創建 class 寫 &lt;code&gt;__iter__()&lt;/code&gt;, &lt;code&gt;__next__()&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;Generator 用 yield 關鍵字，Iterator 沒有。&lt;/li&gt;
&lt;li&gt;Generator 在每次 yield 停住的時候會儲存狀態(ex: 變數)，但 Iterator 不會，他就是做 iteration 而已。&lt;/li&gt;
&lt;li&gt;Generator Function 裡可以不只有一個 yield。&lt;/li&gt;
&lt;li&gt;Generator 是 Iterator 的 subclass, 我們可以透過 &lt;code&gt;issubclass()&lt;/code&gt; 證明&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;collections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;types&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;issubclass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;types&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GeneratorType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;abc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;issubclass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;abc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Generator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;abc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#True&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-scrapy-&#34;&gt;&lt;strong&gt;&amp;lt; Scrapy &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;scrapy-框架裡常用的-yield-會有兩種情況&#34;&gt;Scrapy 框架裡常用的 yield, 會有兩種情況。&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一個是 yield item, 一個是 yield Request&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;自己在工作上有使用 Scrapy 的機會，
而出於好奇也想知道 Scrapy 在這裡怎麼會用 yield,
仔細去追 Scrapy 的 source code，就會發現以 &lt;code&gt;scrapy/crawler.py&lt;/code&gt; 底下的 class CrawlerRunner 為例:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 根據官方文檔&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scrapy&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;twisted.internet&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reactor&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scrapy.crawler&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CrawlerRunner&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scrapy.utils.log&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;configure_logging&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scrapy.utils.project&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_project_settings&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MySpider1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scrapy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Your first spider definition&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MySpider2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scrapy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Your second spider definition&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;configure_logging&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_project_settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CrawlerRunner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crawl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MySpider1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crawl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MySpider2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addBoth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reactor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;reactor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# the script will block here until all crawling jobs are finished&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;最一開始是呼叫了 class CrawlerRunner 的 crawl 方法：
這時後仔細看 source code 往下追，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;scrapy/crawler.py&lt;/code&gt; &lt;a href=&#34;https://github.com/scrapy/scrapy/blob/06f3d12c1208c380f9f1a16cb36ba2dfa3c244c5/scrapy/crawler.py&#34;&gt;source code&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scrapy.core.engine&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ExecutionEngine&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Crawler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;crawl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    
    &lt;span class=&#34;c1&#34;&gt;#(略)&lt;/span&gt;
    
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spider&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_create_spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;engine&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_create_engine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spider&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;engine&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open_spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# (略)&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_create_spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spidercls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_crawler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_create_engine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ExecutionEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# (略)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;追到 &lt;code&gt;scrapy/core/engine.py&lt;/code&gt;&lt;a href=&#34;https://github.com/scrapy/scrapy/blob/06f3d12c1208c380f9f1a16cb36ba2dfa3c244c5/scrapy/core/engine.py&#34;&gt;source code&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Slot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Iterable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;close_if_idle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nextcall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CallLaterOnce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;scheduler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;closing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Deferred&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inprogress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close_if_idle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;close_if_idle&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextcall&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nextcall&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scheduler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scheduler&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;heartbeat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LoopingCall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextcall&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;schedule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# (略)&lt;/span&gt;
    
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ExecutionEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_next_request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slot&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# typing&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spider&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# typing&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;paused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_needs_backout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_next_request_from_scheduler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_needs_backout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;StopIteration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Error while obtaining start requests&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exc_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;extra&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;spider&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crawl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spider_is_idle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close_if_idle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_spider_idle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其實看到 yield 就了解 generator 會有 next() 的實作，但是還是想親眼見到，所以：
看到第 32 行，找到 next()，也就安心了...
而 Scrapy 本身是在 Twisted 這個 asynchronous networking 的 library 架構下做處理，但這邊我還不是很理解，也不多說，這邊就記錄一下而已！&lt;/p&gt;
&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;self-checklist&#34;&gt;Self Checklist:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;yield&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;generator function&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;generator iterator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Figure out confusing terms&lt;code&gt;generator&lt;/code&gt;, &lt;code&gt;generator function&lt;/code&gt;, &lt;code&gt;generator iterator&lt;/code&gt;, &lt;code&gt;generator object&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Can you tell what is the difference between &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;generator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;next()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;send()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to make &lt;code&gt;generator iterator&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3.9/glossary.html#term-generator-expression&#34;&gt;generator expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3.9/glossary.html&#34;&gt;Python Glossary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kancloud.cn/smilesb101/python3_x/296095&#34;&gt;廖雪峰 Python 3.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/citycoddee/python%E9%80%B2%E9%9A%8E%E6%8A%80%E5%B7%A7-6-%E8%BF%AD%E4%BB%A3%E9%82%A3%E4%BB%B6%E5%B0%8F%E4%BA%8B-%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3-iteration-iterable-iterator-iter-getitem-next-fac5b4542cf4&#34;&gt;迭代那件小事：深入了解 Iteration / Iterable / Iterator / &lt;strong&gt;iter&lt;/strong&gt; / &lt;strong&gt;getitem&lt;/strong&gt; / &lt;strong&gt;next&lt;/strong&gt; / yield&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://data-flair.training/blogs/python-generator-vs-iterator/&#34;&gt;Python Generators vs Iterators – Comparison Between Python Iterators and Generators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;!-- &lt;a href=&#34;https://linooohon.com/blog/blog/posts/08/210805/python的yield和scrapy的yield&#34;&gt;Python 觀念(2) yield 是什麼?，那Scrapy 裡的 yield?&lt;/a&gt; --&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/categories/202108/">202108</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/yield/">Yield</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/python/">Python</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/scrapy/">Scrapy</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/generator/">Generator</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Python 觀念(1) - Iteration, Iterable, Iterator</title>
                <link>https://linooohon.com/blog/posts/07/210727/Python%20%E8%A7%80%E5%BF%B5%281%29%20-%20Iteration,%20Iterable,%20Iterator/</link>
                <guid isPermaLink="true">https://linooohon.com/blog/posts/07/210727/Python%20%E8%A7%80%E5%BF%B5%281%29%20-%20Iteration,%20Iterable,%20Iterator/</guid>
                <pubDate>Tue, 27 Jul 2021 18:36:14 &#43;0800</pubDate>
                
                    <author>linooohon@gmail.com (mitsukuchiph.)</author>
                
                
                
                    <description>&lt;h1 style=&#34;text-align:center&#34;&gt;
Python 觀念紀錄 - Iteration, Iterable, Iterator
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在此對 Iteration, Iterable, Iterator 的觀念做個紀錄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/07_210727/07_210727_python_iteration.png&#34; alt=&#34;Python 觀念紀錄 - Iteration, Iterable, Iterator&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;了解-iteration-迭代&#34;&gt;了解 Iteration (迭代)&lt;/h2&gt;
&lt;h3 id=&#34;-iteration-&#34;&gt;&lt;strong&gt;&amp;lt; Iteration &amp;gt;&lt;/strong&gt;:&lt;/h3&gt;
&lt;p&gt;是個廣義名詞, 意思是每次去 &amp;quot;遍歷(走訪)&amp;quot; 1 個 object, 對裡面每個 item 做想操作的事的這個過程，ex: 像是在程式碼中操作 loop，我們可以說這個是一種 Iteration。&lt;/p&gt;
&lt;h3 id=&#34;-iterable-iterator兩個名詞必須分清楚-&#34;&gt;&lt;strong&gt;&amp;lt; Iterable, Iterator兩個名詞必須分清楚 &amp;gt;&lt;/strong&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Iterable&lt;/li&gt;
&lt;li&gt;Iterator&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;iterable-可迭代物件&#34;&gt;Iterable (可迭代物件):&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Python 中 Iterable 和 Iterator 有特別意義，先解釋 Iterable。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;python對它的定義&#34;&gt;Python對它的定義:&lt;/h5&gt;
&lt;p&gt;是一個物件，這個物件裡要有 &lt;code&gt;__iter__()&lt;/code&gt; 方法或是 &lt;code&gt;__getitem__()&lt;/code&gt; 方法(要能支持從 0 開始的index)，這兩個其中一個條件達成，它就是定義上的 Iterable。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;為什麼要有這兩個方法，因為 Python 說要成為 Iterable 就必須支持 Iteration Protocol 或是 Sequence Protocol。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;__iter__()&lt;/code&gt; 對應 Iteration Protocol。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;__getitem__()&lt;/code&gt; 對應 Sequence Protocol。&lt;/p&gt;
&lt;h5 id=&#34;特徵&#34;&gt;特徵:&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;是一個物件。&lt;/li&gt;
&lt;li&gt;可以 for loop 遍歷的 objects 它都是定義上 Iterable 的範圍。&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;基本上&#34;&gt;基本上：&lt;/h5&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;當今天迭代的 Iterable 是 String, 那每次就是得到單個字符。&lt;/li&gt;
&lt;li&gt;當今天迭代的 Iterable 是 文件，那每次得到的就是每一行的字符串。&lt;/li&gt;
&lt;li&gt;當今天迭代的 Iterable 是 Dictionary, 那每次得到的就是該次的 Key。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;dic, list, tuple, range, string, set, numpy array, dataframe, bytes 都是 Iterable
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;那-__iter__-和-__getitem__-是什麼&#34;&gt;那 &lt;code&gt;__iter__()&lt;/code&gt; 和 &lt;code&gt;__getitem__()&lt;/code&gt; 是什麼？&lt;/h5&gt;
&lt;p&gt;它們是 Python Magic Methods
&lt;code&gt;__iter__()&lt;/code&gt;: &lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__iter__&#34;&gt;Docs&lt;/a&gt;
&lt;code&gt;__getitem__()&lt;/code&gt;: &lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__getitem__&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;當 &lt;code&gt;__iter__()&lt;/code&gt; 被呼叫時，會 return 一個 Iterator(新的 Iterator)
當 &lt;code&gt;__getitem__()&lt;/code&gt; 在 class 裡被定義, 使用object[index]形式, 就會呼叫該方法:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python=&#34; data-lang=&#34;python=&#34;&gt;class Hi():
    def __init__(self, name):
        self.name = name
    def __getitem__(self, key):
        return &amp;quot;__getitem__ is called&amp;quot;

hi = Hi(&amp;quot;Phil&amp;quot;)
print(hi[2])  

# 輸出:
# __getitem__ is called
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那什麼是 Iterator，接著講：&lt;/p&gt;
&lt;h4 id=&#34;iterator-迭代器&#34;&gt;Iterator (迭代器):&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Iterator: &lt;a href=&#34;https://docs.python.org/3/library/stdtypes.html#iterator-types&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;python-對它的定義&#34;&gt;Python 對它的定義:&lt;/h5&gt;
&lt;p&gt;它是一個物件，這個物件裡要有 &lt;code&gt;__iter__()&lt;/code&gt; 方法和 &lt;code&gt;__next__()&lt;/code&gt; 方法，兩個方法都必須要有，那它就是定義上的 Iterator。&lt;/p&gt;
&lt;h5 id=&#34;特徵-1&#34;&gt;特徵:&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;是一個物件。&lt;/li&gt;
&lt;li&gt;Iterable 其實可以 for loop 是因為 Python 私底下幫忙轉換為 Iterator 然後做處理。&lt;/li&gt;
&lt;li&gt;Iterator 才可以調用 &lt;code&gt;next()&lt;/code&gt;, Iterable 不行。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;而, dic, list, tuple, range, string, set, numpy array, dataframe, bytes 都不是 Iterator
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;從下面程式碼可以發現他們裡面都沒有 &lt;code&gt;__next__()&lt;/code&gt;，所以不會是 Iterator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# dic&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dic_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;phil&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;phone&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;0933333333&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============dic===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dic_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dic_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dic_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# list&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============list===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# tuple&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;tuple_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============tuple===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tuple_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tuple_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tuple_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# range&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;range_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============range===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;range_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;range_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;range_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# string&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============string===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# set&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;set_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============set===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# numpy array&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;np_array_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============np_array===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np_array_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np_array_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np_array_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# dataframe&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;1.csv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============dataframe===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# bytes&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;bytes_1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============bytes===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;那如何成為-iterator--iter-next&#34;&gt;那如何成為 Iterator:  &lt;code&gt;iter()&lt;/code&gt;, &lt;code&gt;next()&lt;/code&gt;&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;根據 Iterator 成立的條件，我們如果 call Builtin Function &lt;code&gt;iter()&lt;/code&gt;
裡面帶 Iterable，就可以 return Iterator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;所以&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;iter()&lt;/code&gt; 會 return Iterator&lt;/li&gt;
&lt;li&gt;Iterator 裡有 &lt;code&gt;next()&lt;/code&gt; 所以可以使用 &lt;code&gt;next()&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;next()&lt;/code&gt; 的作用:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Iterator 可以被 &lt;code&gt;next()&lt;/code&gt; 調用，並不斷的返回下一個資料，直到沒有資料的時候，會拋出 StopIteration error, 而這是什麼意思呢？等等再底下有個例子可以解釋。&lt;/p&gt;
&lt;p&gt;在 Python Docs &lt;a href=&#34;https://docs.python.org/3.9/glossary.html#term-iterator&#34;&gt;Glossary&lt;/a&gt; 裡面，寫道，Iterator is an object representing a stream of data，可以看到 Iterator 是代表一個資料流的概念，也就是說程式它本身其實不知道整個長度，像是 &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt; 是一開始就知道長度的，但 Iterator 的概念是&lt;code&gt;流&lt;/code&gt;, 每當我需要的時候，我才通過 &lt;code&gt;next()&lt;/code&gt; 拿到下一個我要的產出(資料), 以我的觀點 Iterator 有點像是一個 被動、懶惰的代表, 我喊它，它才動, 我不喊它, 它永遠都不動，所以他的計算是被動的，只有在需要 return 下一個資料的時候它才會行動(計算)。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ex: 範例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-python=&#34; data-lang=&#34;python=&#34;&gt;ss_ = &amp;quot;abc&amp;quot;
iter_ss_ = iter(ss_)
print(hasattr(iter_ss_, &#39;__iter__&#39;)) # True
print(hasattr(iter_ss_, &#39;__getitem__&#39;)) # False
print(hasattr(iter_ss_, &#39;__next__&#39;)) # True

print(next(iter_ss_))
print(next(iter_ss_))
print(next(iter_ss_))


# 輸出:
&amp;quot;&amp;quot;&amp;quot;
True
False
True
a
b
c
&amp;quot;&amp;quot;&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;底下這裡就會報錯因為不是 Iterator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-python=&#34; data-lang=&#34;python=&#34;&gt;ss_ = &amp;quot;abc&amp;quot;
next(ss_)

# 輸出
&amp;quot;&amp;quot;&amp;quot;
True
False
True
Traceback (most recent call last):
TypeError: &#39;str&#39; object is not an iterator
&amp;quot;&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;-關於-iter-__iter__-next-__next__--&#34;&gt;&lt;strong&gt;&amp;lt; 關於 &lt;code&gt;iter()&lt;/code&gt;, &lt;code&gt;__iter__()&lt;/code&gt;, &lt;code&gt;next()&lt;/code&gt;, &lt;code&gt;__next__()&lt;/code&gt; &amp;gt;&lt;/strong&gt; :&lt;/h3&gt;
&lt;p&gt;最一開始我也搞的滿模糊的，但要理解可以先拆分：&lt;/p&gt;
&lt;h4 id=&#34;built-in-function-iter-next&#34;&gt;Built-in Function: &lt;code&gt;iter()&lt;/code&gt; &lt;code&gt;next()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;iter()&lt;/code&gt;, &lt;code&gt;next()&lt;/code&gt; : Python Built-In Function &lt;a href=&#34;https://docs.python.org/3/library/functions.html&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所謂 Built-In Function, 你只要 call 它，Python 就會照著他原本寫好的劇本去跑。&lt;/p&gt;
&lt;h4 id=&#34;magic-methods-__iter__-__next__&#34;&gt;Magic Methods: &lt;code&gt;__iter__()&lt;/code&gt; &lt;code&gt;__next__()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;__iter__()&lt;/code&gt;, &lt;code&gt;__next__()&lt;/code&gt;: Python Magic Methods(Dunders)&lt;/p&gt;
&lt;p&gt;所謂 Magic Methods, 就是由 class 裡所提供的一些 methods, Python 將這些 methods 特徵弄成前後各兩個底線，而這些 methods 之所以很 magic(自認為..)，是因為..其實我們做的很多事情，都是他們幫我們代勞的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;代勞是什麼意思呢？
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;看一下這個例子:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;#3&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__add__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#3&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 會發現都是 print 出 3&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 當我們用 Int 這個 type 做加法, `+` 和 使用 `__add__()` 是一樣的結果。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;err&#34;&gt;如果我們用&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`help()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;看一下&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;會發現它所定義的東西就是 `+` 要做的事&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;__add__(self, value, /)
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    Return self+value.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;那意思是我們可以自己客製化-object-修改這個-object-的--的功能&#34;&gt;那意思是我們可以自己客製化 object 修改這個 object 的 &lt;code&gt;+&lt;/code&gt; 的功能&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;CustomPlus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__add__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;__add__ is called &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CustomPlus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__add__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# __add__ is called &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# -1&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# __add__ is called &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# -1&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 可以發現 cp + 2 也是走 class 裡的 __add__() 所以結果就也會變成 -1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;所以結論是&#34;&gt;所以，結論是:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;err&#34;&gt;使用&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`+`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;的背後，其實&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;是去找&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`Int`&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;所定義的 `&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;__add__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;然後叫它做事&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;在-python-中有數不清像--這樣由-__add__-代勞的事情&#34;&gt;在 Python 中有數不清像 &lt;code&gt;+&lt;/code&gt; 這樣由 &lt;code&gt;__add__()&lt;/code&gt; 代勞的事情，&lt;/h4&gt;
&lt;p&gt;詳細可以看 &lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#special-method-names&#34;&gt;Docs 3. Data model 這頁&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;那同理回到主題&#34;&gt;那同理，回到主題:&lt;/h4&gt;
&lt;p&gt;其實 &lt;code&gt;iter()&lt;/code&gt; &lt;code&gt;next()&lt;/code&gt; 是會去找當下的 type 所能使用的 &lt;code&gt;__iter__()&lt;/code&gt;, &lt;code&gt;__next__()&lt;/code&gt; 代勞，白話一點就是 call &lt;code&gt;iter()&lt;/code&gt; &lt;code&gt;next()&lt;/code&gt; 的下一瞬間，Python 就是會設法 call &lt;code&gt;__iter__()&lt;/code&gt;, &lt;code&gt;__next__()&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;一個小結論&#34;&gt;一個小結論:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`iter()`&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`next()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;可以說是等價於&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`__iter__()`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`__next__()`&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;但&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`__iter__()`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`__next__()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;不等於&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`iter()`&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`next()`&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;因為就像上面說的&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;magic&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;可以客製化&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;但&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Built&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Function&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;就是照著劇本走，&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;所以當你把&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`__iter__()`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`__next__()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;改成不照著&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`iter()`&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`next()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;劇本規定的時後，再來使用&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`iter()`&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`next()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;就肯定會報錯&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;看一下底下&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`iter()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;的例子&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;用-iter-再舉個例子&#34;&gt;用 &lt;code&gt;iter()&lt;/code&gt; 再舉個例子:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;iter_s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;__iter__s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__iter__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iter_s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__iter__s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 輸出&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;str_iterator&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;str_iterator&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;這裡沒問題，兩個就是做一樣的事，但如果底下我們自定義呢?
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;這裡自訂義 class Foo:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__iter__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Foo&amp;#34;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__iter__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 輸出不會報錯&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Foo &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;如果改成 &lt;code&gt;iter()&lt;/code&gt; 這時底下這裡就會出錯，因為 &lt;code&gt;iter()&lt;/code&gt; 的劇本就是堅持要拿到 &lt;code&gt;Iterator&lt;/code&gt;, 你給他 &lt;code&gt;str&lt;/code&gt; 就肯定噴錯&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__iter__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Foo&amp;#34;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 輸出會報錯&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Traceback (most recent call last):
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;print(iter(foo))
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;TypeError: iter() returned non-iterator of type &amp;#39;str&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;小結論:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;所有可 for loop 的 object 都是 Iterable。&lt;/li&gt;
&lt;li&gt;所有可作用於 &lt;code&gt;next()&lt;/code&gt; 的 object 都是 Iterator。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt; 這些是 Iterable 不是 Iterator, 但可以使用 &lt;code&gt;iter()&lt;/code&gt; return 一個 Iterator。&lt;/li&gt;
&lt;li&gt;可以自己做 class 做出 Iterator, 本質上 Iterator 可以 for loop 是由 &lt;code&gt;__iter__()&lt;/code&gt; return self, 也就是 return object 自己去實現的，如此才能不斷繼續調用自己的 &lt;code&gt;__next__()&lt;/code&gt; 如果 class 裡只實現 &lt;code&gt;__next__()&lt;/code&gt;，那是不能使用 for loop 的，只能調用 next() 一個一個呼叫。&lt;/li&gt;
&lt;li&gt;那 &lt;code&gt;next()&lt;/code&gt; return 什麼？ 你讓它 return 什麼它就 return 什麼。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;list&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;int&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;dict&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 當然也是可以客製化 class 裡的 `__next__()`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;關於前面提到-for-loop-的概念&#34;&gt;關於前面提到 for loop 的概念:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;for loop 的本質上就是通過不斷調用 &lt;code&gt;next()&lt;/code&gt; 實現的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ex:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;實際上相當於是:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 先得到 Iterator&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#獲得下一個值&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;StopIteration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 遇到 StopIteration 就退出 loop&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;front======&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#獲得下一個值&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;back======&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;StopIteration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 遇到 StopIteration 就退出 loop&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;到底了======&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
        
        
&lt;span class=&#34;c1&#34;&gt;# 如果仔細這樣 print&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;front======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;back======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;front======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;back======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;front======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;back======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;front======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;back======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;front======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;back======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;front======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;到底了======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 會發現 第 6 次 call next(), 就出現 exception&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;所以 for 語句是如何 loop 的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;先判斷是否為可迭代物件(Iterable)，不是的話直接報錯: TypeError: &#39;xxxx&#39; object is not iterable，是的話調用 &lt;code&gt;__iter__()&lt;/code&gt;，並 return 一個迭代器(Iterator)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;不斷的調用迭代器(Iterato)的 &lt;code&gt;__next__()&lt;/code&gt; 方法，每次都按照順序返回迭代器(Iterator)中的一個值&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;迭代到最後，已經沒有元素了，這時就會拋出 StopIteration，但是這個異常就像上面的例子一樣會做處理，Python 自己會處理掉，不會給 developer 看。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;收尾&#34;&gt;收尾:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Iteration(迭代): 可以指一個概念，輪廓，操作過程，是一個廣義名詞，在程式中的例子有 for loop&lt;/li&gt;
&lt;li&gt;Iterable(可迭代物件): 一個物件，根據 Python 的定義，得出結論:
&lt;ol&gt;
&lt;li&gt;如果可以 for loop 它，就是 Iterable 的範疇&lt;/li&gt;
&lt;li&gt;但 Iterable 可以 for loop 是因為 Python 幫我們把它轉變成 Iterator&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Iterator(迭代器): 一個物件，根據 Python 的定義，得出結論：
&lt;ol&gt;
&lt;li&gt;Python for loop 的原理就是需要 Iterator，然後不斷調用 Iterator 的 &lt;code&gt;__next__()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;產生 Iterator 的方式:
&lt;ul&gt;
&lt;li&gt;iter()&lt;/li&gt;
&lt;li&gt;自己客製化 class&lt;/li&gt;
&lt;li&gt;產生 generator iterator (或是叫做 generator object / generator)(是一種 Iterator，下篇會敘述)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-end&#34;&gt;The End:&lt;/h2&gt;
&lt;h3 id=&#34;-self-checklist-&#34;&gt;&lt;strong&gt;&amp;lt; Self Checklist &amp;gt;&lt;/strong&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;Iteration&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;Iterable&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;Iterator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Can you tell what is the difference between &lt;code&gt;Iterable&lt;/code&gt; and &lt;code&gt;Iterator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;Built-in Function&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;Magic Methods&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain how Python &lt;code&gt;for loop&lt;/code&gt; works.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Use &lt;code&gt;hasattr()&lt;/code&gt;, &lt;code&gt;next()&lt;/code&gt;, &lt;code&gt;iter()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-reference-&#34;&gt;&lt;strong&gt;&amp;lt; Reference &amp;gt;&lt;/strong&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__iter__&#34;&gt;Python &lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__getitem__&#34;&gt;Python &lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/library/stdtypes.html#iterator-types&#34;&gt;Python Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3.9/glossary.html&#34;&gt;Python Glossary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/library/functions.html&#34;&gt;Python Built-In Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#special-method-names&#34;&gt;Python Docs 3. Data model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kancloud.cn/smilesb101/python3_x/296095&#34;&gt;廖雪峰 Python 3.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/citycoddee/python%E9%80%B2%E9%9A%8E%E6%8A%80%E5%B7%A7-6-%E8%BF%AD%E4%BB%A3%E9%82%A3%E4%BB%B6%E5%B0%8F%E4%BA%8B-%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3-iteration-iterable-iterator-iter-getitem-next-fac5b4542cf4&#34;&gt;迭代那件小事：深入了解 Iteration / Iterable / Iterator / &lt;strong&gt;iter&lt;/strong&gt; / &lt;strong&gt;getitem&lt;/strong&gt; / &lt;strong&gt;next&lt;/strong&gt; / yield&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;:&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://linooohon.com/blog/blog/posts/08/210810/python的yield和scrapy的yield&#34;&gt;Python 觀念(2) yield 是什麼?，那Scrapy 裡的 yield?&lt;/a&gt;&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/categories/202107/">202107</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/python/">Python</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/iterator/">Iterator</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Django - part1.2: Official Docs Note</title>
                <link>https://linooohon.com/blog/posts/06/210720/Django%20-%20part1.2:%20Official%20Docs%20Note</link>
                <guid isPermaLink="true">https://linooohon.com/blog/posts/06/210720/Django%20-%20part1.2:%20Official%20Docs%20Note</guid>
                <pubDate>Tue, 20 Jul 2021 18:36:14 &#43;0800</pubDate>
                
                    <author>linooohon@gmail.com (mitsukuchiph.)</author>
                
                
                
                    <description>&lt;h1 style=&#34;text-align:center&#34;&gt;
「Django」part1.2: Official Docs Note(EN)
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;關於 Django 的官方文件筆記(EN)，紀錄起來，讓自己可以快速統整 👐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/06_210720/06_210720_django.png&#34; alt=&#34;關於 Django 的官方文件筆記(EN)&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-intro-&#34;&gt;&lt;strong&gt;&amp;lt; Intro &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&amp;quot;A popular python web framework ! &amp;quot; ----&amp;gt;
&lt;a href=&#34;https://docs.djangoproject.com/en/3.2/intro/tutorial01/&#34;&gt;Django Docs&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-quick-start-&#34;&gt;&lt;strong&gt;&amp;lt; Quick Start &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip install Django
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;1-create-django-project&#34;&gt;1. Create Django Project&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;django-admin startproject mysite
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-run-locally&#34;&gt;2. Run locally&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;http://127.0.0.1:8000/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;cd mysite
python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Changing the port&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# http://127.0.0.1:8080/&lt;/span&gt;
python manage.py runserver &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# http://0.0.0.0:8000/&lt;/span&gt;
python manage.py runserver 0:8000
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-create-app-&#34;&gt;&lt;strong&gt;&amp;lt; Create App &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-create-app-polls&#34;&gt;1. Create App &lt;code&gt;polls&lt;/code&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Under the same path with &lt;code&gt;manage.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;python manage.py startapp polls
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-write-first-view-in-app&#34;&gt;2. Write first View in App&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;In the &lt;code&gt;polls/views.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.shortcuts&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;render&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Create your views here.&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.http&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HttpResponse&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HttpResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, world. You&amp;#39;re at the polls index.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;3-create-urlconf-to-configure-urlpatterns-in-polls&#34;&gt;3. Create URLconf to configure urlpatterns in &lt;code&gt;polls&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Under &lt;code&gt;polls/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;urls.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;In the &lt;code&gt;polls/urls.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.urls&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;views&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;urlpatterns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;views&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;4-point-the-root-urlconf-at-pollsurls-module--setting-in-mysiteurlspy-&#34;&gt;4. Point the root URLconf at &lt;code&gt;polls.urls&lt;/code&gt; module ( Setting in &lt;code&gt;mysite/urls.py&lt;/code&gt; )&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;In the &lt;code&gt;mysite/urls.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.contrib&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;admin&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.urls&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;include&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;urlpatterns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;admin/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;admin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;urls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;polls/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;polls.urls&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;5-run-locally-to-see-polls&#34;&gt;5. Run locally to see &lt;code&gt;polls/&lt;/code&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;http://localhost:8000/polls/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-db-setup-&#34;&gt;&lt;strong&gt;&amp;lt; DB Setup &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;--creates-db-table&#34;&gt;- Creates db table&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;This command looks at the &lt;code&gt;INSTALLED_APPS&lt;/code&gt; setting and creates any necessary database tables according to the database settings in &lt;code&gt;mysite/settings.py&lt;/code&gt; and the database migrations shipped with the app.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;--creating-models&#34;&gt;- Creating models&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;In the &lt;code&gt;polls/models.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.db&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Create your models here.&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;question_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CharField&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pub_date&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DateTimeField&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date published&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;question&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ForeignKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;on_delete&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CASCADE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;choice_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CharField&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;votes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IntegerField&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;--activating-models&#34;&gt;- Activating models&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;We need to include app in project, so we need to reference to its configuration class in the
&lt;code&gt;mysite/settings.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;polls.apps.PollsConfig&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.contrib.admin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.contrib.auth&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.contrib.contenttypes&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.contrib.sessions&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.contrib.messages&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.contrib.staticfiles&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;But why is &lt;code&gt;polls.apps.PollsConfig&lt;/code&gt;, it&#39;s because polls configuration file is in &lt;code&gt;polls/apps.py&lt;/code&gt; and the Class is called &lt;code&gt;PollsConfig&lt;/code&gt;, so we need to write &lt;code&gt;polls.apps.PollsConfig&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;--make-migrations&#34;&gt;- Make migrations&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python manage.py makemigrations polls
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Telling Django that you’ve made some changes to your models and that you’d like the changes to be stored as a migration.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# You will see somthing like this.&lt;/span&gt;
Migrations &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;polls&amp;#39;&lt;/span&gt;:
  polls/migrations/0001_initial.py
    - Create model Question
    - Create model Choice
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# And migrations folder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;--get-the-raw-sql-for-the-migration-you-give&#34;&gt;- Get the Raw SQL for the migration you give.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python manage.py sqlmigrate polls 0001
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;--check-for-any-problems-in-project&#34;&gt;- Check for any problems in project&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python manage.py check
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;--create-model-tables-in-daatbase&#34;&gt;- Create model tables in daatbase:&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;So run migrate again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-so-basic-migrate-workflow-is&#34;&gt;&lt;strong&gt;&amp;lt; So, Basic Migrate Workflow is:&amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Change models in &lt;code&gt;models.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Activate models in INSTALLED_APPS&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python manage.py makemigrations&lt;/code&gt; to create migrations for new changes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python manage.py migrate&lt;/code&gt; to apply changes to the database.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;-django-python-shell-&#34;&gt;&lt;strong&gt;&amp;lt; Django python shell &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;--run-this-command-to-enter&#34;&gt;- Run this command to enter:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;python manage.py shell
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;--can-use-django-framework-to-edit-project-add-some-change-in-database-here&#34;&gt;- Can use django framework to edit project, add some change in database here.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;polls.models&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet []&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.utils&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question_text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;What&amp;#39;s new?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pub_date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question_text&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;#34;What&amp;#39;s new?&amp;#34;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pub_date&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# datetime.datetime(2012, 2, 26, 13, 0, 0, 775217, tzinfo=&amp;lt;UTC&amp;gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;What&amp;#39;s up?&amp;#34;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question_text&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;#34;What&amp;#39;s up?&amp;#34;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet [&amp;lt;Question: Question object (1)&amp;gt;]&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Because usually we don&#39;t want &lt;code&gt;Question.objects.all()&lt;/code&gt; to show &lt;code&gt;&amp;lt;QuerySet [&amp;lt;Question: Question object (1)&amp;gt;]&amp;gt;&lt;/code&gt; for us, we want more clear infos for the model object we choose, so we can add &lt;code&gt;__str__()&lt;/code&gt; in models.py class&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;--adding-__str__-method-to-both-question-and-choice-in-pollsmodelspy&#34;&gt;- Adding &lt;code&gt;__str__()&lt;/code&gt; method to both Question and Choice in &lt;code&gt;polls/models.py&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.db&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.utils&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# Here we just return text&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# ...&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__str__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question_text&lt;/span&gt;
    
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;was_published_recently&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pub_date&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;days&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# ...&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__str__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_text&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;--testing-and-playing-around-with-shell-again&#34;&gt;- Testing and playing around with shell again:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;python manage.py shell
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;polls.models&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet [&amp;lt;Question: What&amp;#39;s up?&amp;gt;]&amp;gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# So now we can see the clear info for what we choose&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet [&amp;lt;Question: What&amp;#39;s up?&amp;gt;]&amp;gt;&lt;/span&gt;


&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question_text__startswith&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;What&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet [&amp;lt;Question: What&amp;#39;s up?&amp;gt;]&amp;gt;&lt;/span&gt;


&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.utils&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;current_year&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pub_date__year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current_year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;Question: What&amp;#39;s up?&amp;gt;&lt;/span&gt;


&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# pk is primary key&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;Question: What&amp;#39;s up?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;was_published_recently&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;


&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet []&amp;gt;&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# Create three choices.&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Not much&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;votes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;Choice: Not much&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;The sky&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;votes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;Choice: The sky&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Just hacking again&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;votes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Choice objects have API access to their related Question objects.&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;Question: What&amp;#39;s up?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet [&amp;lt;Choice: Not much&amp;gt;, &amp;lt;Choice: The sky&amp;gt;, &amp;lt;Choice: Just hacking again&amp;gt;]&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 3&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Use double underscores to separate relationships.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Find all Choices for any question whose pub_date is in this year&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Choice&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question__pub_date__year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current_year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet [&amp;lt;Choice: Not much&amp;gt;, &amp;lt;Choice: The sky&amp;gt;, &amp;lt;Choice: Just hacking again&amp;gt;]&amp;gt;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Let&amp;#39;s delete one of the choices. Use delete() for that.&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_text__startswith&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Just hacking&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;delete&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;So basically, we can use &lt;code&gt;python manage.py shell&lt;/code&gt; to write some python code and also Django framework syntex.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-login-to-django-admin-&#34;&gt;&lt;strong&gt;&amp;lt; Login to Django admin &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;--creating-an-admin-user&#34;&gt;- Creating an admin user&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python manage.py createsuperuser
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;Username: admin
Email address: xxxxxx@xxxx
Password: **********
Password (again): *********
Superuser created successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Go to http://127.0.0.1:8000/admin/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;And enter username and password.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/06_210720/06_210720_django_adminlogin.png&#34; alt=&#34;linooohon@gmail.com&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Will see the Django administration&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/06_210720/06_210720_django_admininterface.png&#34; alt=&#34;linooohon@gmail.com&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;--register-our-own-models-in-django-admin-interface&#34;&gt;- Register our own models in Django admin interface.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;In the &lt;code&gt;polls/admin.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;from django.contrib import admin

# Register your models here.
from .models import Question, Choice
admin.site.register(Question)
admin.site.register(Choice)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;review&#34;&gt;Review:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&amp;quot;Project&amp;quot; and &amp;quot;App&amp;quot;.&lt;/li&gt;
&lt;li&gt;Remember Migration Workflow.&lt;/li&gt;
&lt;li&gt;Using django python shell.&lt;/li&gt;
&lt;li&gt;Create user for django admin interface and login.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.djangoproject.com/en/3.2/intro/tutorial01/&#34;&gt;Django Official Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;!-- &lt;a href=&#34;https://linooohon.com/blog/blog/posts/01「Git 介紹」什麼是 git rebase&#34;&gt;「Flask」02&lt;/a&gt; --&gt;</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/categories/202107/">202107</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/django/">Django</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/python/">Python</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/web/">Web</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>「Flask」02: Static File handling, Database connection</title>
                <link>https://linooohon.com/blog/posts/05/210714/%E3%80%8C%E3%80%8CFlask%E3%80%8D02:%20Static%20File%20handling,%20Database%20connection/</link>
                <guid isPermaLink="true">https://linooohon.com/blog/posts/05/210714/%E3%80%8C%E3%80%8CFlask%E3%80%8D02:%20Static%20File%20handling,%20Database%20connection/</guid>
                <pubDate>Wed, 14 Jul 2021 18:36:14 &#43;0800</pubDate>
                
                    <author>linooohon@gmail.com (mitsukuchiph.)</author>
                
                
                
                    <description>&lt;h1 style=&#34;text-align:center&#34;&gt;
「Flask」02: Static File handling, Database connection
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;前陣子用 Flask 實做了一個 LifePlaylist App 這裡簡單紀錄一下基本的東西，以後回頭更快重拾記憶🤧 -  第二篇&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/04_05_210710/04_05_210710_flask_intro.png&#34; alt=&#34;上次紀錄了 Flask 基本處理，這次&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-intro-&#34;&gt;&lt;strong&gt;&amp;lt; Intro &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&amp;quot;A lightweight Python Web Framework ! &amp;quot; ----&amp;gt;
&lt;a href=&#34;https://flask.palletsprojects.com/en/latest/quickstart/&#34;&gt;Flask Docs&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-handle-static-file-&#34;&gt;&lt;strong&gt;&amp;lt; Handle Static File &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;basic&#34;&gt;Basic:&lt;/h3&gt;
&lt;p&gt;Path: /static/images/01.jpg&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## HTML:&lt;/span&gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/static/images/01.jpg&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span class=&#34;c1&#34;&gt;## Browser:&lt;/span&gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/static/images/01.jpg&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;change-the-path&#34;&gt;Change the path:&lt;/h3&gt;
&lt;p&gt;Path: /views/assets/01.jpg&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__name__, &lt;span class=&#34;nv&#34;&gt;static_folder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;views/assets/&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__name__, &lt;span class=&#34;nv&#34;&gt;static_folder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;images/&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;## or&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__name__, &lt;span class=&#34;nv&#34;&gt;static_folder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./views/assets/&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__name__, &lt;span class=&#34;nv&#34;&gt;static_folder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./images/&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;## HTML:&lt;/span&gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ url_for(&amp;#39;static&amp;#39;, filename=&amp;#39;01.jpg&amp;#39;) }}&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;img src=&amp;#34;01.jpg&amp;#34;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## Browser:&lt;/span&gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/assets/01.jpg&amp;#34;&lt;/span&gt;&amp;gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/images/01.jpg&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;change-the-path-that-show-in-browser&#34;&gt;Change the path that show in browser:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__name__, &lt;span class=&#34;nv&#34;&gt;static_url_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/Hello&amp;#34;&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;static_folder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;views/assets/&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## HTML:&lt;/span&gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ url_for(&amp;#39;static&amp;#39;, filename=&amp;#39;01.jpg&amp;#39;) }}&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;img src=&amp;#34;/Hello/01.jpg&amp;#34;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## Browser:&lt;/span&gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/Hello/01.jpg&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;But actually image is still under the path &lt;code&gt;views/assets/&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-database-connection-&#34;&gt;&lt;strong&gt;&amp;lt; Database Connection &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;flask-sqlalchemy&#34;&gt;Flask-SQLAlchemy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Also support SQLAlchemy&lt;/li&gt;
&lt;li&gt;Raw SQL / ORM&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Flask-SQLAlchemy: &lt;a href=&#34;https://flask-sqlalchemy.palletsprojects.com/en/2.x/&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;SQLAlchemy: &lt;a href=&#34;https://docs.sqlalchemy.org/en/14/glossary.html#term-2.0-style&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;pip install flask-sqlalchemy
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;from flask_sqlalchemy import SQLAlchemy
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;setting-uri&#34;&gt;Setting URI:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = [DB_TYPE]+[DB_CONNECTOR]://[USERNAME]:[PASSWORD]@[HOST]:[PORT]/[DB_NAME]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;sqlite-eg&#34;&gt;SQLite e.g.:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;app.config&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SQLALCHEMY_DATABASE_URI&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sqlite:////db/testing.db&amp;#34;&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sqlite:///&amp;#34;&lt;/span&gt; + absolute path + name.db&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## folder: /db/&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## db name: testing.db&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## &amp;#39;sqlite:////absolute/path/to/foo.db&amp;#39;&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;## -----------&lt;/span&gt;
import os
&lt;span class=&#34;nv&#34;&gt;basedir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; os.path.abspath&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;os.path.dirname&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__file__&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
def create_sqlite_uri&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;db_name&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sqlite:///&amp;#34;&lt;/span&gt; + os.path.join&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;basedir, db_name&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;mysql-eg&#34;&gt;MySQL e.g.:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Need pymysql&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pip install pymysql
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;app.config&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SQLALCHEMY_DATABASE_URI&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 
mysql+pymysql://&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;user_name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;user_password&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;@&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;HOST&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:3306/&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;db_name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## e.g.&lt;/span&gt;

mysql+pymysql://root:password@localhost:3306/myapp
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;postgresql-eg&#34;&gt;PostgreSQL e.g.:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Need psycopg2-binary&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pip install psycopg2-binary
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;app.config&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SQLALCHEMY_DATABASE_URI&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 
postgresql://&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;user_name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;user_password&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;@&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;HOST&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:5432/&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;db_name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## e.g.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## no password&lt;/span&gt;
postgresql://linpinhung:linpinhung@localhost:5432/app_pro

&lt;span class=&#34;c1&#34;&gt;## HOST should be different depend on where your db is, for example, I set it in Docker, then my HOST will depend on what I configure.&lt;/span&gt;
postgresql://name:name@db:5432/app_docker

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;config&#34;&gt;Config:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;app.config[&#39;SQLALCHEMY_ENGINE_OPTIONS&#39;] = {
    &#39;pool_pre_ping&#39;: True,
    &#39;pool_recycle&#39;: 300,
    &#39;pool_timeout&#39;: 900,
    &#39;pool_size&#39;: 10,
    &#39;max_overflow&#39;: 5,
    .....: ...,
    ....
    ....
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;SQLALCHEMY_ECHO(For debug):
&lt;ul&gt;
&lt;li&gt;Default: False&lt;/li&gt;
&lt;li&gt;If True, print Raw SQL in console&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SQLALCHEMY_RECORD_QUERIES
&lt;ul&gt;
&lt;li&gt;If True, can check query detail&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;from flask_sqlalchemy import get_debug_queries

def after_request(response):
    for query in get_debug_queries():
        print(query.statement) 
        print(query.parameters) 
        print(query.duration)
        print(query.context) 
    return reponse
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;get_debug_queries can also use in other ways.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQLALCHEMY_TRACK_MODIFICATIONS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mostly set with False.&lt;/li&gt;
&lt;li&gt;Flask recommend using SQLAlchemy events directly &lt;a href=&#34;https://flask-sqlalchemy.palletsprojects.com/en/master/signals/&#34;&gt;Signalling Support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQLALCHEMY_BINDS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For handling multiples database.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;basic-model-fromat&#34;&gt;Basic Model Fromat:&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;model/models.py&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask_login&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UserMixin&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sqlalchemy.sql&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Playlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;primary_key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;artist&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;artist_spotify_uri&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;artist_spotify_image_url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;song&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;artist_genres&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DateTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 拿到當下時間&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ForeignKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;user.id&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 拿使用者 id 當 fk&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# user_id = db.Column(db.Integer, db.ForeignKey(&amp;#39;user.id&amp;#39;), nullable=False)  # 拿使用者 id 當 fk&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;test_migrate_col&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;120&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nullable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 預設就是 nullable=True 可以不寫&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;artist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;song&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;artist&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;artist&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;song&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;song&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;
        
        
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UserMixin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;primary_key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;first_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;playlists&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relationship&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Playlist&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# playlists = db.relationship(&amp;#39;Playlist&amp;#39;, backref=&amp;#39;user&amp;#39;)&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;first_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;first_name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;data-manipulationcrud&#34;&gt;Data Manipulation(CRUD):&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Get:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;self.model.query.get(id)
Playlist.query.get(id)
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Get All:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;self.model.query.all()
Playlist.query.all()
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Get with filter:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## method 1&lt;/span&gt;
self.model.query.filter_by&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;**filter_dic&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;.all&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;## method 2&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;my_filters&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;artist&amp;#39;&lt;/span&gt;:&lt;span class=&#34;s1&#34;&gt;&amp;#39;xxxxx&amp;#39;&lt;/span&gt;, &lt;span class=&#34;s1&#34;&gt;&amp;#39;song&amp;#39;&lt;/span&gt;:&lt;span class=&#34;s1&#34;&gt;&amp;#39;xxxxx&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;query&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; session.query&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;self.model&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; attr,value in my_filters.iteritems&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;:
    &lt;span class=&#34;nv&#34;&gt;query&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; query.filter&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt; getattr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;self.model,attr&lt;span class=&#34;o&#34;&gt;)==&lt;/span&gt;value &lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;results&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; query.all&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Delete:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;row = self.get_data(id)
db.session.delete(row)
db.session.commit()
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Insert:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nv&#34;&gt;new_top10_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Dashboard&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;dashboard_artist&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i.artist, &lt;span class=&#34;nv&#34;&gt;dashboard_song&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i.song, &lt;span class=&#34;nv&#34;&gt;artist_spotify_uri&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i.spotify_uri, &lt;span class=&#34;nv&#34;&gt;artist_spotify_image_url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i.spotify_image_url, &lt;span class=&#34;nv&#34;&gt;song_youtube_url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i.youtube_url, &lt;span class=&#34;nv&#34;&gt;artist_genres&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i.genres&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
db.session.add&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;new_top10_data&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
db.session.commit&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;## -----------------&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## Usage:&lt;/span&gt;
   &lt;span class=&#34;c1&#34;&gt;##  Dic: **Dic&lt;/span&gt;
   &lt;span class=&#34;c1&#34;&gt;##  List: *List&lt;/span&gt;
def insert_data&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;self, insert_dic&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:
    &lt;span class=&#34;nv&#34;&gt;new_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; self.model&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;**insert_dic&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    db.session.add&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;new_data&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    db.session.commit&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;review&#34;&gt;Review:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Static File handling try to use &lt;code&gt;url_for&lt;/code&gt; will be better.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static_url_path&lt;/code&gt; can hide the real path.&lt;/li&gt;
&lt;li&gt;DB connection should careful for the &lt;code&gt;path&lt;/code&gt; / &lt;code&gt;host, user, password&lt;/code&gt; / &lt;code&gt;dependencies&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.maxlist.xyz/2019/11/10/flask-sqlalchemy-setting/&#34;&gt;Max行銷誌&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flask-sqlalchemy.palletsprojects.com/en/2.x/&#34;&gt;FlaskSQLAlchemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/seaniap/python-web-flask-%E4%BD%BF%E7%94%A8%E9%9D%9C%E6%85%8B%E6%AA%94%E6%A1%88-ac00e863a470&#34;&gt;Sean Yeh in Python Everywhere -from Beginner to Advanced&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-上一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 上一篇 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://linooohon.com/blog/blog/posts/04/210710/「Flask」01: Basic, Route, Templates, GET, POST&#34;&gt;「Flask」01: Basic, Route, Templates, GET, POST&lt;/a&gt;&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/categories/202107/">202107</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/flask/">Flask</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/python/">Python</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/web/">Web</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>「Flask」01: Basic, Route, Templates, GET, POST</title>
                <link>https://linooohon.com/blog/posts/04/210710/%E3%80%8CFlask%E3%80%8D01:%20Basic,%20Route,%20Templates,%20GET,%20POST/</link>
                <guid isPermaLink="true">https://linooohon.com/blog/posts/04/210710/%E3%80%8CFlask%E3%80%8D01:%20Basic,%20Route,%20Templates,%20GET,%20POST/</guid>
                <pubDate>Sat, 10 Jul 2021 18:36:14 &#43;0800</pubDate>
                
                    <author>linooohon@gmail.com (mitsukuchiph.)</author>
                
                
                
                    <description>&lt;h1 style=&#34;text-align:center&#34;&gt;
「Flask」01: Basic, Route, Templates, GET, POST
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;前陣子用 Flask 實做了一個 LifePlaylist App 這裡簡單紀錄一下基本的東西，以後回頭更快重拾記憶🤧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/04_05_210710/04_05_210710_flask_intro.png&#34; alt=&#34;前陣子實做了 Flask App 紀錄一下基本處理!&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-intro-&#34;&gt;&lt;strong&gt;&amp;lt; Intro &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&amp;quot;A lightweight Python Web Framework ! &amp;quot; ----&amp;gt;
&lt;a href=&#34;https://flask.palletsprojects.com/en/latest/quickstart/&#34;&gt;Flask Docs&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-quick-start-to-run-a-flask-app-&#34;&gt;&lt;strong&gt;&amp;lt; Quick start to run a Flask App &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;install&#34;&gt;Install:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;pip install Flask
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-python-file&#34;&gt;Create python file:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;touch main.py
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;import&#34;&gt;Import:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;from flask import Flask
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-instance&#34;&gt;Create instance:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;app = Flask(__name__)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;route&#34;&gt;Route:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&#39;/&#39;)
def index():
    return &#39;Hi Flask App ! &#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;setting-only-when-you-run-python-file-directly-then-execute-apprun&#34;&gt;Setting only when you run python file directly, then execute &lt;code&gt;app.run()&lt;/code&gt;:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;if __name__ == &#39;__main__&#39;:
    app.run()
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;now-run-flask-app&#34;&gt;Now run Flask App:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python main.py
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;And Flask Default Port:5000: &lt;code&gt;http://127.0.0.1:5000&lt;/code&gt; will run on local.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi Flask App !&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-handling-route-&#34;&gt;&lt;strong&gt;&amp;lt; Handling Route &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;example&#34;&gt;Example:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;@app.route&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
def xxxxxx&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;:
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;basic&#34;&gt;Basic:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&#39;/login&#39;)
def login():
    return &#39;This is login page.&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;handling-multiple-routes-with-same-function&#34;&gt;Handling Multiple routes with same function:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&#39;/index&#39;)
@app.route(&#39;/&#39;)
def home():
    return &#39;Welcome Home.&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;routing-parameters&#34;&gt;Routing parameters:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&#39;/&amp;lt;number&amp;gt;&#39;)
def number():
    return f&#39;Your route is /{number} .&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-use-templatejinja2-&#34;&gt;&lt;strong&gt;&amp;lt; Use Template(Jinja2) &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;import-1&#34;&gt;Import:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;from flask import render_template
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-xxxhtml&#34;&gt;Create xxx.html:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mkdir templates
touch templates/welcome.html
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;change-return&#34;&gt;Change return:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&amp;quot;/welcome&amp;quot;)
def home():
    return render_template(&#39;welcome.html&#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;pass-parameters&#34;&gt;Pass parameters：&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&amp;quot;/welcome/&amp;lt;yourname&amp;gt;&amp;quot;)
def home(yourname):
    return render_template(&#39;welcome.html&#39;, yourname=yourname)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;welcomehtml&#34;&gt;welcome.html:&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Use {{}}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Basic:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{{ yourname }}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;List:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{{ list.0 }}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Dict:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{{ Dict.key }}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;If statement:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{% if &amp;lt;xxxx&amp;gt; %}
    Hi, {{ xxxx }}!
{% else %}
    Oops...
{% endif %}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;For loop:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{% for item in &amp;lt;xxxx&amp;gt; %}
    &amp;lt;li&amp;gt;{{ item }}&amp;lt;/li&amp;gt;
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Use base template:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;## Create base.html
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;{% extends &amp;quot;base.html&amp;quot; %}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Put own content(child templates):&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;e.g.: {% block content %}{% endblock %}
e.g.: {% block body %}{% endblock %}
e.g.: {% block custom %}{% endblock %}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-get-post-&#34;&gt;&lt;strong&gt;&amp;lt; GET, POST &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;import-2&#34;&gt;Import:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;from flask import request
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;setting-route-with-get-method&#34;&gt;Setting route with GET method:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Settting Route:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Remember is &amp;quot;methods&amp;quot; not &amp;quot;method&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;**locals()&lt;/code&gt; can pass all args.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;from flask import Flask, request, render_template

app = Flask(__name__)

@app.route(&#39;/&#39;,methods=[&#39;GET&#39;])
def index():
    q = request.args.get(&#39;q&#39;)
    q2 = request.args.get(&#39;q2&#39;)
    return render_template(&#39;get.html&#39;, **locals())

if __name__ == &#39;__main__&#39;:
    app.run()
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Remember is &amp;quot;templates&amp;quot; not &amp;quot;template&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;templates/get.html&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{{ q }}
{{ q2 }}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Run local and enter URL&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;456&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;## Should appear 123 456&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;setting-route-with-post-method&#34;&gt;Setting route with POST method:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Settting &lt;code&gt;/form&lt;/code&gt; Route:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;from flask import Flask, request, render_template

app = Flask(__name__)

@app.route(&amp;quot;/form&amp;quot;)
def form():
    return render_template(&#39;form.html&#39;)
    
if __name__ == &#39;__main__&#39;:
    app.run()
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Create form.html&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Setting &lt;code&gt;action=&amp;quot;{{url_for(&#39;submit&#39;)}}&amp;quot;&lt;/code&gt; for POST route&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;form method=&amp;quot;POST&amp;quot; action=&amp;quot;{{url_for(&#39;submit&#39;)}}&amp;quot;&amp;gt;
    &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;name&amp;quot; placeholder=&amp;quot;Name&amp;quot;&amp;gt;
    &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;email&amp;quot; placeholder=&amp;quot;Email&amp;quot;&amp;gt;
    &amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;Submit&amp;lt;/button&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Handle &lt;code&gt;/submit&lt;/code&gt; Route:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&amp;quot;/submit&amp;quot;, methods=[&#39;POST&#39;])
def submit():
    name = request.values[&#39;name&#39;]
    email = request.values[&#39;email&#39;]
    return render_template(&#39;submit.html&#39;,**locals())
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Create submit.html&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;body&amp;gt;
    {{ name }}
    {{ email }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Run local and enter URL&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;## Should appear form, fill out name and email, then submit.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## Should go to `http://127.0.0.1:5000/submit`, and show name and email.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;handle-both-get-and-post-with-one-route&#34;&gt;Handle both GET and POST with one route:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;from flask import Flask, request, render_template
from flask import redirect, url_for

@app.route(&amp;quot;/form&amp;quot;, methods=[&amp;quot;POST&amp;quot;,&amp;quot;GET&amp;quot;])
def form():
    if request.method == &amp;quot;POST&amp;quot;:
        name = request.form[&#39;name&#39;]
        email = request.form[&#39;email&#39;]
        return redirect(url_for(&#39;submit&#39;,**locals()))
    else:
        return render_template(&#39;form.html&#39;)

@app.route(&amp;quot;/submit&amp;quot;, methods=[&#39;POST&#39;])
def submit():
    name = request.values[&#39;name&#39;]
    email = request.values[&#39;email&#39;]
    return render_template(&#39;submit.html&#39;,**locals())
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;review&#34;&gt;Review:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Remember Route Method settings is &amp;quot;methods&amp;quot; not &amp;quot;method&amp;quot;.&lt;/li&gt;
&lt;li&gt;Remember folder name is &amp;quot;templates&amp;quot; not &amp;quot;template&amp;quot;.&lt;/li&gt;
&lt;li&gt;Jinja2 syntax ?&lt;/li&gt;
&lt;li&gt;**locals() ?&lt;/li&gt;
&lt;li&gt;redirect &amp;amp; url_for ?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jinja.palletsprojects.com/en/3.0.x/templates/?highlight=enabled%20line&#34;&gt;Jinja2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flask.palletsprojects.com/en/latest/quickstart/&#34;&gt;Flask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/seaniap/tagged/flask&#34;&gt;Sean Yeh in Python Everywhere -from Beginner to Advanced&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://linooohon.com/blog/blog/posts/05/210714/「「Flask」02: Static File handling, Database connection&#34;&gt;「Flask」02: Static File handling, Database connection&lt;/a&gt;&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/categories/202107/">202107</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/flask/">Flask</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/python/">Python</category>
                                
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/web/">Web</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>02「Git 介紹」git rebase -i</title>
                <link>https://linooohon.com/blog/posts/03/210620/02%E3%80%8CGit%20%E4%BB%8B%E7%B4%B9%E3%80%8Dgit%20rebase%20-i/</link>
                <guid isPermaLink="true">https://linooohon.com/blog/posts/03/210620/02%E3%80%8CGit%20%E4%BB%8B%E7%B4%B9%E3%80%8Dgit%20rebase%20-i/</guid>
                <pubDate>Sun, 20 Jun 2021 18:36:14 &#43;0800</pubDate>
                
                    <author>linooohon@gmail.com (mitsukuchiph.)</author>
                
                
                
                    <description>&lt;h1 style=&#34;text-align:center&#34;&gt;
「Git 介紹」Ch2: git rebase 互動模式 - git rebase -i
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;上次提到 &lt;code&gt;git rebase&lt;/code&gt; 的使用時機，這次介紹一下 &lt;code&gt;git rebase -i&lt;/code&gt; 互動模式!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/03_210620/03_210620_git_rebase_2.png&#34; alt=&#34;Git 第二篇, git rebase -i 互動模式&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;what-什麼是-git-rebase--i&#34;&gt;(What?) 什麼是 git rebase -i&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Git rebase 提供的全家餐，輸入魔法&lt;code&gt;-i&lt;/code&gt;, 搭配 commit ID, 神力再現。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;how-git-rebase--i-的幾種操作&#34;&gt;(How?) git rebase -i 的幾種操作&lt;/h1&gt;
&lt;h2 id=&#34;1情境&#34;&gt;1.情境:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;假設現在自己分支多了 3 個 commit 準備要合回去主分支，在合回去之前，想對自己的 commit 先做些整理，這時候 &lt;code&gt;git rebase -i&lt;/code&gt; 就派上用場了。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell=bash&#34; data-lang=&#34;shell=bash&#34;&gt;# 目前的三個 commit, commit ID 先用 aaaaaaa, bbbbbbb, ccccccc 代替, a 是第一個 commit, b 是第二個, c 是第三個
ccccccc commit-msg
bbbbbbb commit-msg
aaaaaaa commit-msg
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;2-流程&#34;&gt;2. 流程:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;進入互動模式&lt;/li&gt;
&lt;li&gt;執行這次想做的修改&lt;/li&gt;
&lt;li&gt;如果有衝突的話，需要解決&lt;/li&gt;
&lt;li&gt;完成操作&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3-進入git-rebase--i-commit-id&#34;&gt;3. 進入，&lt;code&gt;git rebase -i &amp;lt;commit ID&amp;gt;&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;解釋: 代表我現在想進入 interactive rebase 的模式來做些事情，那我要處理哪些 commit 呢? 就是 -i 後面輸入的 &lt;code&gt;&amp;lt;commit ID&amp;gt;&lt;/code&gt; 之後的所有 commit 我可能需要處理。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;所以這行指令就是，我想進入互動模式處理 &lt;code&gt;&amp;lt;commit ID&amp;gt;&lt;/code&gt; 之後的 commit (不包括輸入的 commit ID 的 commit 好饒舌?..)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;4-進來後注意順序&#34;&gt;4. 進來後，注意順序:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一進來互動模式時，最新的 commit 是在最下面！&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell=bash&#34; data-lang=&#34;shell=bash&#34;&gt;# 像是這樣
# 上面最舊
pick aaaaaaa commit-msg #1
pick bbbbbbb commit-msg #2
pick ccccccc commit-msg #3
# 下面最新
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;5-手法&#34;&gt;5. 手法:&lt;/h2&gt;
&lt;h3 id=&#34;pick---預設值&#34;&gt;&lt;code&gt;pick&lt;/code&gt; - 預設值&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用: 意思是保留這個 commit&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;squash---合併&#34;&gt;&lt;code&gt;squash&lt;/code&gt; - 合併&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用: 合併多個 commit&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pick aaaaaaa commit-msg #1
squash bbbbbbb commit-msg #2
pick ccccccc commit-msg #3
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;把 pick 改成 squash。如此,
&lt;code&gt;bbbbbbb&lt;/code&gt; 會與前一個 commit &lt;code&gt;aaaaaaa&lt;/code&gt; 合併。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;reword---修改訊息&#34;&gt;&lt;code&gt;reword&lt;/code&gt; - 修改訊息&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用: 修改 commit message&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pick aaaaaaa commit-msg #1
reword bbbbbbb commit-msg #2
reword ccccccc commit-msg #3
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;如此便能修改 commit message&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;drop---丟掉&#34;&gt;&lt;code&gt;drop&lt;/code&gt; - 丟掉&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用: 丟掉這個 commit&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pick aaaaaaa commit-msg #1
drop bbbbbbb commit-msg #2
pick ccccccc commit-msg #3
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;如此 &lt;code&gt;bbbbbbb&lt;/code&gt; 這個 commit 便會被丟掉。
也可以直接刪掉那一行，也可以達成丟掉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;edit---修改內容&#34;&gt;&lt;code&gt;edit&lt;/code&gt; - 修改內容&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用: 我要這個 commit 但到這裡的時候停一下，我要修改一下。
修改完後指令接著做:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;git add xxxx
git commit --amend --no-edit
# --no-edit 是不修改 commit 訊息
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;fixup---也是合併&#34;&gt;&lt;code&gt;fixup&lt;/code&gt; - 也是合併&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用:  也是合併，但捨棄這個 commit message。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;替換-commit-順序&#34;&gt;&lt;code&gt;替換 commit 順序&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;就直接換就好哈哈哈哈&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pick aaaaaaa commit-msg #1
pick ccccccc commit-msg #3
pick bbbbbbb commit-msg #2
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;6-一些會遇到的基本流程&#34;&gt;6. 一些會遇到的基本流程：&lt;/h2&gt;
&lt;h3 id=&#34;修改-commit-message&#34;&gt;修改 commit message。&lt;/h3&gt;
&lt;h3 id=&#34;遇到衝突&#34;&gt;遇到衝突:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;解決衝突 
git add xxxxxxxx
git rebase --continue
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;放棄這次-rebase回到之前的狀態&#34;&gt;放棄這次 rebase，回到之前的狀態。&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git rebase --abort
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;小心使用-慎用如果有衝突這個會丟掉整個-commit很容易出事&#34;&gt;小心使用, 慎用。如果有衝突，這個會丟掉整個 commit，很容易出事。&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git rebase --skip
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;the-end&#34;&gt;The End:&lt;/h2&gt;
&lt;h3 id=&#34;review&#34;&gt;Review:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git rebase -i&lt;/code&gt; 所做的更動，commit ID 的 SHA-1值是會變的，也就是說與人協作時要注意目前做的動作會不會影響他人。&lt;/li&gt;
&lt;li&gt;善用 &lt;code&gt;git rebase -i&lt;/code&gt; 整理自己的 commit 紀錄。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase -i&lt;/code&gt; 時, 遇到衝突會一個一個停下來讓我們解決。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase --skip&lt;/code&gt; 危險！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase --abort&lt;/code&gt; 當作什麼事都沒發生。&lt;/li&gt;
&lt;li&gt;最後, &lt;code&gt;git rebase -i &amp;lt;commit ID&amp;gt;&lt;/code&gt; 安心服用，熟能生巧。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/docs/git-rebase&#34;&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learngitbranching.js.org/?locale=zh_TW&#34;&gt;Git Branching!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitbook.tw/chapters/rewrite-history/merge-multiple-commits-to-one-commit.html&#34;&gt;高見龍-為你自己學 Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;上一篇&#34;&gt;上一篇:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://linooohon.com/blog/blog/posts/02/210615/01「Git 介紹」什麼是 git rebase&#34;&gt;01「Git 介紹」什麼是 git rebase&lt;/a&gt;&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/categories/202106/">202106</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/git/">Git</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>01「Git 介紹」什麼是 git rebase</title>
                <link>https://linooohon.com/blog/posts/02/210615/01%E3%80%8CGit%20%E4%BB%8B%E7%B4%B9%E3%80%8D%E4%BB%80%E9%BA%BC%E6%98%AF%20git%20rebase/</link>
                <guid isPermaLink="true">https://linooohon.com/blog/posts/02/210615/01%E3%80%8CGit%20%E4%BB%8B%E7%B4%B9%E3%80%8D%E4%BB%80%E9%BA%BC%E6%98%AF%20git%20rebase/</guid>
                <pubDate>Tue, 15 Jun 2021 18:36:14 &#43;0800</pubDate>
                
                    <author>linooohon@gmail.com (mitsukuchiph.)</author>
                
                
                
                    <description>&lt;h1 style=&#34;text-align:center&#34;&gt;
「Git 介紹」Ch1: 什麼是 git rebase
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;最近自己對 git 的概念又整理了一下，先來介紹一下 git rebase&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/02_210615/02_210615_git_rebase.png&#34; alt=&#34;Git 介紹」Ch1: 什麼是 git rebase&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;一-what-git-rebase-可以做什麼-&#34;&gt;一. (What?) git rebase 可以做什麼 ?&lt;/h2&gt;
&lt;h3 id=&#34;除了-git-merge-的另一種選擇&#34;&gt;除了 &lt;code&gt;git merge&lt;/code&gt; 的另一種選擇&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;merge 的常見三種方式: &lt;code&gt;git rebase&lt;/code&gt;, &lt;code&gt;git merge&lt;/code&gt;, &lt;code&gt;git cherry-pick&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;一般做 merge 常見大概會有 rebase、merge、cherry-pick，這篇只先針對 rebase 做分享，rebase 可以做的事情算是滿多的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;與 git merge 的差別 ?
&lt;ul&gt;
&lt;li&gt;最主要在使用 &lt;code&gt;git merge&lt;/code&gt; 的時候，如果你有注意，其實都會再產生一個做 merge 這件事情的 commit，在 &lt;code&gt;git log --graph --all&lt;/code&gt; 線圖上就不會是線性，線會轉彎然後合起來，最常見的情況是會產生小耳朵(小耳朵link)。然而在使用 &lt;code&gt;git rebase&lt;/code&gt; 做 merge 時，它會是用接點的方式接在前面，rebase 顧名思義，重新定義 base(它的根)，而當然實際 git 的實作， 不是單純拿原本的 commit 接上去，其實是複製了一份過去，SHA-1 值也是重新產生，是會改變的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;有一個狀況-git-merge-還是會保持一條線&#34;&gt;有一個狀況 git merge 還是會保持一條線&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;(除非parent branch 的 commit 始終包含在 child branch 裡，parent branch 從來沒變更過，現在要把 parent 的進度更新成 child 的進度，這時候的 merge 會走 ff(fast-forward)，也就是說不會產生額外的 commit，但這裡不討論這個，先假設 branch 間已經有分歧了，也是合作比較常見的狀況)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果在上述情況下 git merge 不想走 ff 可以 &lt;code&gt;git merge --no-ff&lt;/code&gt; 這樣一定會產生一個 commit， git 會請你再留一個 commit message。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;二-以下分享-git-rebase-git-merge-的差異&#34;&gt;二. 以下分享 &lt;code&gt;git rebase&lt;/code&gt;, &lt;code&gt;git merge&lt;/code&gt; 的差異&lt;/h2&gt;
&lt;h3 id=&#34;-先來看-git-merge接下來藉由圖片和實例讓大家參考&#34;&gt;Ⅰ. 先來看 &lt;code&gt;git merge&lt;/code&gt;，接下來藉由圖片和實例讓大家參考:&lt;/h3&gt;
&lt;p&gt;如果是 &lt;code&gt;git merge&lt;/code&gt; 的情況:
&lt;img src=&#34;https://i.imgur.com/3Jb3U5g.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;center&gt;&#34;圖1(Sourcetree)&#34;&lt;/center&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ElOabeG.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;center&gt;&#34;git log --graph --all --oneline 也是一樣的&#34;&lt;/center&gt;
&lt;ul&gt;
&lt;li&gt;目前我在 &lt;code&gt;master&lt;/code&gt; 加了 &lt;code&gt;add 01 project&lt;/code&gt; commit 接著在 &lt;code&gt;master&lt;/code&gt; commit 完後，建了一個分支 &lt;code&gt;add-02project&lt;/code&gt;，並 commit 了三次，停在 &lt;code&gt;feat: add 02.js&lt;/code&gt;，接著我繼續從 &lt;code&gt;add-02project&lt;/code&gt; 分支建了 &lt;code&gt;add-03project&lt;/code&gt; 分支，並 commit 一次 &lt;code&gt;feat: add 03.html&lt;/code&gt; ，然後我回頭從 &lt;code&gt;master&lt;/code&gt; 建 &lt;code&gt;add-04project&lt;/code&gt; 分支 commit 一次 &lt;code&gt;feat: add 04.html&lt;/code&gt;，以上都只是我亂建的不重要，只是為了講解一下。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;接下來重點是我想讓 &lt;code&gt;add-04project&lt;/code&gt; branch 與 &lt;code&gt;add-03project&lt;/code&gt; branch 做 merge，&lt;br&gt;這裡如果我先做 &lt;code&gt;git merge&lt;/code&gt;：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;目前 HEAD 在 add-04project，下指令&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ git merge add-03project
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;意思是 : merge branch &lt;code&gt;add-03project&lt;/code&gt; into branch &lt;code&gt;add-04project&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接著，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/AXL1adk.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;center&gt;&#34;圖2&#34;&lt;/center&gt;
&lt;blockquote&gt;
&lt;p&gt;你會看到線圖產生變化，多了一個 commit &lt;code&gt;cbcfe7b&lt;/code&gt;  是 for merge 的，然後線圖也還是原本的線，只是接在一起了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;-那現在來看如果使用-git-rebase&#34;&gt;Ⅱ. 那現在來看如果使用 &lt;code&gt;git rebase&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;原本的情況和圖1一樣，HEAD 一樣在 &lt;code&gt;add-04project&lt;/code&gt; branch :
&lt;img src=&#34;https://i.imgur.com/3Jb3U5g.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&#34;圖1&#34;&lt;/center&gt;
&lt;p&gt;在這裡下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git rebase add-03project
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;字面意思是請幫我把我當前的 branch 的根換成 &lt;code&gt;add-03project&lt;/code&gt; branch，所以實際上它會把當前 branch 進度複製接到 &lt;code&gt;add-03project&lt;/code&gt; branch 上，這時候會呈現如下:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/WsdMcBl.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;center&gt;&#34;圖3&#34;&lt;/center&gt;
&lt;ul&gt;
&lt;li&gt;會發現變成一條線了，且 &lt;code&gt;add-04project&lt;/code&gt; commit 內容也都在，但 SHA-1 會重新計算。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三-rebase-反悔了怎麼辦&#34;&gt;三. rebase 反悔了怎麼辦：&lt;/h2&gt;
&lt;h3 id=&#34;git-reset---hard-sha-1值&#34;&gt;&lt;code&gt;git reset --hard &amp;lt;SHA-1值&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;記得在使用 git rebase 的時候，如果反悔了剛剛的操作，不能用 &lt;code&gt;git reset --hard HEAD^&lt;/code&gt; 做相對路徑切換， 它是不會切回原樣的，要記得直接用絕對路徑切換，下 &lt;code&gt;git reflog&lt;/code&gt; 看想切回去的地方，然後下 &lt;code&gt;git reset --hard &amp;lt;SHA-1值&amp;gt;&lt;/code&gt; 也就是直接放 commit ID，或著是 reflog 上的 HEAD@{x}，&lt;code&gt;git reset --hard HEAD@{x}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;
$ git reset --hard &amp;lt;SHA-1值&amp;gt;  &lt;span class=&#34;c1&#34;&gt;#找你想要回去的點&lt;/span&gt;
$ git reset --hard HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;#找你想要回去的點&lt;/span&gt;
$ git reset --hard ORIG_HEAD  &lt;span class=&#34;c1&#34;&gt;#反悔離當下最近的危險操作點&lt;/span&gt;

&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;要注意的是 ORIG_HEAD 是在危險操作時紀錄上一個點，如果沒有在操作過後的當下馬上使用 git reset --hard ORIG_HEAD
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;ORIG_HEAD 很有可能會被蓋過去就不能用了，這時後就要使用其他兩個指令，可以自己選想回去的地方
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;四-git-rebase--i-會進入-rebase-的互動模式之後分享一下&#34;&gt;四. &lt;code&gt;git rebase -i&lt;/code&gt; (會進入 rebase 的互動模式，之後分享一下)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;我把它稱作小小時光機，但就像 &lt;a href=&#34;https://www.imdb.com/title/tt0088763/&#34;&gt;Back to the Future&lt;/a&gt; 演的那樣，很酷也容易不小心出問題。&lt;/li&gt;
&lt;li&gt;可以做滿多事，但也要注意有時會更動到歷史紀錄，在多人協作專案，更是要小心操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;五-why-為什麼需要-git-rebase&#34;&gt;五. (Why?) 為什麼需要 git rebase&lt;/h2&gt;
&lt;h3 id=&#34;先說結論&#34;&gt;先說結論：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;直接先說我自己認為的結論，&lt;code&gt;git rebase&lt;/code&gt; 只是工具，不管是 git merge、git rebase 還是其他 git 指令，其實都是因應情況、團隊開發模式等情況下，去做合理使用，只要在合適的情況使用 rebase 我相信是沒問題的，使用 rebase 有時可以讓專案的進度 (commit 顆粒) 更清晰。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;那什麼是合適的情況--&#34;&gt;那什麼是合適的情況 ? :&lt;/h3&gt;
&lt;p&gt;以下情況我根據自身經驗認為會使用或是可以使用:&lt;/p&gt;
&lt;h4 id=&#34;1-遠端-mastermain-branch-的-code-進度更新了-這時候自己的分支開發了一個功能準備推上去可以使用-rebase-讓自己的-branch-進度更新最後再推上去自己的分支&#34;&gt;1. 遠端 master(main) branch 的 code 進度更新了， 這時候自己的分支開發了一個功能，準備推上去，可以使用 &lt;code&gt;rebase&lt;/code&gt; 讓自己的 branch 進度更新，最後再推上去自己的分支&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ git fetch upstream
$ git rebase upstream/master
$ git push origin 自己的 branch
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-同理更新自己的-fork-repo&#34;&gt;2. 同理更新自己的 fork repo:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ git checkout master
$ git fetch upstream
$ git rebase upstream/master
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-整理-git-歷史紀錄可以修改合併變更刪除等等&#34;&gt;3. 整理 git 歷史紀錄，可以修改、合併、變更、刪除等等..&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# 使用互動模式
$ git rebase -i &amp;lt;SHA-1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;the-end&#34;&gt;The End:&lt;/h2&gt;
&lt;h3 id=&#34;review&#34;&gt;Review:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git rebase&lt;/code&gt; 與 &lt;code&gt;git merge&lt;/code&gt; 的差異&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase&lt;/code&gt; 反悔如何處理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase&lt;/code&gt; 使用時機的取捨&lt;/li&gt;
&lt;li&gt;在團隊協作中善用工具，follow 大家的共識&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/docs/git-rebase&#34;&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learngitbranching.js.org/?locale=zh_TW&#34;&gt;Git Branching!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wangyufeng.org/2020/03/15/post-20200315/&#34;&gt;王雨峰的博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitbook.tw/chapters/branch/merge-with-rebase.html&#34;&gt;高見龍-為你自己學 Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;next-下一篇&#34;&gt;Next 下一篇:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://linooohon.com/blog/blog/posts/03/210620/02「Git 介紹」git rebase -i&#34;&gt;02「Git 介紹」git rebase -i&lt;/a&gt;&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/categories/202106/">202106</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/git/">Git</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Hi Blog, YUI - TOKYO</title>
                <link>https://linooohon.com/blog/posts/01/210503/first-post/</link>
                <guid isPermaLink="true">https://linooohon.com/blog/posts/01/210503/first-post/</guid>
                <pubDate>Mon, 03 May 2021 18:36:14 &#43;0800</pubDate>
                
                    <author>linooohon@gmail.com (mitsukuchiph.)</author>
                
                
                
                    <description>&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/01_210503/01_210503_firstpost.jpg&#34; alt=&#34;Hi Blog, YUI - TOKYO&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;try-to-share-the-things-i-experienced-and-some-of-my-ideas-on-this-platform-thanks&#34;&gt;Try to share the things I experienced and some of my ideas on this platform, thanks!&lt;/h5&gt;
&lt;h5 id=&#34;so&#34;&gt;So,&lt;/h5&gt;
&lt;h5 id=&#34;for-the-first-post-of-the-new-site-im-going-to-share-the-lyrics-of-the-songs-that-i-really-love-recently&#34;&gt;for the first post of the new site, I&#39;m going to share the lyrics of the songs that I really love recently.&lt;/h5&gt;
&lt;p&gt;&lt;em&gt;YUI - TOKYO&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;住みなれた　この部屋を　出てゆく日が来た   離開這住慣了的房間的日子到了
新しい旅だちに　まだ戸惑ってる           面對全新的旅程 我仍然感到迷茫
駅まで向かうバスの中 友達にメールした     在駛向車站的公車上 傳了簡訊給朋友

朝のホームで　電話もしてみた    早上打了通電話回家 但總覺得哪裡不太對勁
でもなんか　違う気がした

古いギターをひとつ持ってきた  帶著一把舊吉他 照片全留在家裡
写真は全部　置いてきた

何かを手放して　そして手にいれる   都要放棄一些才能因而得到一些 是個循環吧?
そんな繰り返しかな?

つよがりは　いつだって　夢に続いてる    逞強在不知不覺中蔓延到夢中
臆病になったら　そこで途切れるよ        如果膽怯的話 那麼夢想會在這裡中斷的

走りだした電車の中  少しだけ泣けてきた  在向前急駛的電車中 稍微哭了出來

窓の外に続いてる　この町は  窗外的景色依舊是這個城鎮 希望不要改變阿
かわらないでと願った

古いギターをアタシにくれたひと     送我這把舊吉他的人跟我說 東京是很可怕的
東京は怖いって言ってた

答えを探すのは　もうやめた     放棄去尋找他所說的答案 就當是他說錯了吧
間違いだらけでいい

赤い夕焼けがビルに途切れた　　　赤紅的夕陽被大樓截斷 我忍住了淚水
涙をこらえても

次の朝がやってくるたびごとに　　隨著下一個清晨來臨　還是會有迷惑產生對吧
迷うことだってあるよね?

正しいことばかり選べない　不可能永遠都選到最正確的選擇　這點我至少是明白的
それくらいわかってる


Today I have to leave this old room of mine.
I&#39;m still unsure about this new journey.

On the bus ride to the train station,
I text-messaged my friends.

At the station I tried calling someone,
But something felt different about it all.
All I brought with me was an old guitar,
Leaving the rest of my old life behind.

I take something and I get something,
I ponder that cycle in my heart.

I always try to hide my fears in my dreams.
When get afraid, I can&#39;t seem to do anything.

I got on the train, it rushed away,
And I slowly started to cry.

Life in my town continued on outside.
I prayed that it&#39;d never change.
The man who gave me my old guitar
Told me Tokyo is a scary place.

I&#39;ve stopped looking for all the answers.
It&#39;s okay to have some flaws.

Those grey skyscrapers blocked the setting sun.
Even if I endure these tears today,
Won&#39;t tomorrow&#39;s cold morning hold more doubt?

I can&#39;t choose the right thing,
At least I know that much.

&lt;/code&gt;&lt;/pre&gt;</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/categories/202105/">202105</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://linooohon.com/blog/tags/life/">Life</category>
                                
                            
                        
                    
                
            </item>
        
    </channel>
</rss>
