<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-TW">
    <title type="text">mitsukuchiph.</title>
    <subtitle type="html">mitsukuchiph - blog/部落格/ブログ</subtitle>
    <updated>2022-08-18T22:37:17&#43;09:00</updated>
    <id>https://linooohon.com/blog/</id>
    <link rel="alternate" type="text/html" href="https://linooohon.com/blog/" />
    <link rel="self" type="application/atom&#43;xml" href="https://linooohon.com/blog/atom.xml" />
    <author>
            <name>mitsukuchiph.</name>
            <uri>https://linooohon.com/</uri>
            
                <email>linooohon@gmail.com</email>
            </author>
    
    <generator uri="https://gohugo.io/" version="0.83.1">Hugo</generator>
        <entry>
            <title type="text">短暫告別, 近況</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/23/220731/%E7%9F%AD%E6%9A%AB%E5%91%8A%E5%88%A5_%E8%BF%91%E6%B3%81/" />
            <id>https://linooohon.com/blog/posts/23/220731/%E7%9F%AD%E6%9A%AB%E5%91%8A%E5%88%A5_%E8%BF%91%E6%B3%81/</id>
            <updated>2022-08-18T22:33:25&#43;09:00</updated>
            <published>2022-07-31T00:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;Living in Japan for three months so far&lt;/p&gt;&lt;img width=&#34;30%&#34; src=&#34;https://linooohon.com/blog/blog/images/23_220731/23_220731_短暫告別_近況.jpg&#34; /&gt;</summary>
            
                <content type="html">&lt;p&gt;&lt;img width=&#34;30%&#34; src=&#34;https://linooohon.com/blog/blog/images/23_220731/23_220731_短暫告別_近況.jpg&#34; /&gt;&lt;/p&gt;
&lt;p style=&#34;text-align:center; font-size: 14px&#34;&gt;妙典 - Ichikawa, Chiba / 2022 / バーベキュー&lt;p&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;p&gt;&lt;em&gt;4 月中從台灣辭了職，月底飛來日本。&lt;/em&gt;&lt;br&gt;
&lt;em&gt;這段期間說不上忙翻，但也絕非閒著，就姑且把這些消耗的時間都視為禮物。&lt;/em&gt;&lt;br&gt;
&lt;em&gt;心懷感恩。&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我認為我已經是個幸運的人了，才有這樣的機會和時間給我去努力。&lt;br&gt;
最近腦子有點太工程思維...&lt;del&gt;非黑即白&lt;/del&gt;，出事，想寫點什麼紀錄這三個月的過程，&lt;br&gt;
寫的比較文情並茂一點，但寫不出來，只想寫點結論哈哈哈哈。&lt;br&gt;
那先說結論，那就是 7 月有幸在一個小團隊做了一點事，&lt;br&gt;
然後下禮拜開始就要去另個地方上工了。&lt;/p&gt;
&lt;p&gt;底下稍微紀錄：&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;大概在 3 月中提了離職，然後 4 月中正式離開前公司。&lt;br&gt;
但機票也是就定在 4 月底，所以其實時間真的很緊迫，&lt;br&gt;
要拿台北東西回新竹，整理、申請赴日的所有資料，行李。&lt;br&gt;
好好的跟身邊的朋友道別、聚一下，但也還是有沒聚到...&lt;br&gt;
實在太倉促，下次回台灣肯定要好好約一下，到日本之後，最懷念的還是台灣的隨約隨到那種 Fu&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:下午咖啡廳嗎？ 
:好啊，走啊 
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;:晚餐吃嗎?
:妥！ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然&lt;br&gt;
後。&lt;/p&gt;
&lt;p&gt;順利在 5 月初開始在東京的日語學校就讀。&lt;br&gt;
(其實4月日語學校就開學了，但因為在台灣工作、還有一切準備都沒那麼充裕，所以自己無法在 4 月就順利到日本
但此行，最主要還是要想辦法待在日本長久一點，&lt;br&gt;
所以目的是找到工作。&lt;br&gt;
5 月開始就在擔心找工作的事了，&lt;br&gt;
因為自己預計日語學校只上半年，加上工作簽證轉換的時間，&lt;br&gt;
我肯定 6 月就要開始找了。自己預估找工作 1-2 個月，8 月可以有結果。&lt;br&gt;
然後申請簽證大概也要等 1-2 個月，&lt;br&gt;
這時候就剛好來到 9 月 10 月、日語學校半年的課程也就結束了，&lt;br&gt;
同時簽證轉換完畢，就可以銜接工作了，&lt;br&gt;
於是就朝著這個計畫執行。&lt;br&gt;
而 5 月的行程大概是以下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;熟悉日本日常生活&lt;/li&gt;
&lt;li&gt;在租屋處整理、安頓&lt;/li&gt;
&lt;li&gt;處理開戶&lt;/li&gt;
&lt;li&gt;處理電信&lt;/li&gt;
&lt;li&gt;處理保險&lt;/li&gt;
&lt;li&gt;週一到週五的日文課、寫作業&lt;/li&gt;
&lt;li&gt;修改英日文履歷&lt;/li&gt;
&lt;li&gt;準備面試、刷題.........(懂的人就懂&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每天其實都挺有事做的，不是在處理生活的事，就是在準備面試&lt;br&gt;
接著 6 月我開始進入找工作模式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;投了很多履歷，陸陸續續與很多 Agency, HR 聊過。&lt;/li&gt;
&lt;li&gt;充滿失敗，但不挫折，因為我一路上都是失敗來的...😂。&lt;/li&gt;
&lt;li&gt;繼續 Move on，同時日語學校出席也要顧，考試也要高分，不然就不能讀新的內容，太狠了。&lt;/li&gt;
&lt;li&gt;如雪片般飛來的 Recruiter 的交談邀約...數不清。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;從過程中也了解到日本生態和自己在哪個水平(滿緊張尷尬的一個水平。&lt;br&gt;
New Grad 也不是，Senior 肯定不是，有 3.4 年經驗的 Junior 也說不上。&lt;br&gt;
就是一個勉勉強強的 1 年 Junior，&lt;br&gt;
實話，很多人說在日本 IT 工作算好找是因為很多派遣或是一些薪資水平沒有那麼好的公司存在，&lt;br&gt;
但如果想要應徵上一家薪資待遇正常的、不差的公司(大手、有潛力新創、好外商等等)&lt;br&gt;
，以我這次經驗如果不是 3 年以上，一份好的 IT 工作在日本是非常難找的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以我自己來說，在日本找好的 IT，其實是真的不好找的…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;學歷：只有大學，台灣私校&lt;/li&gt;
&lt;li&gt;背景：非CS本科&lt;/li&gt;
&lt;li&gt;日文：有N2，口說不行&lt;/li&gt;
&lt;li&gt;工作經驗：1年&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我設定的公司：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;英文為主&lt;/li&gt;
&lt;li&gt;可接受外國人&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在這個過程我投了大概120家，有進入前測和面試的差不多只有 12、13 家，然後走到最後階段的大概就 3 家，1 家是 permanent, 2 家是 contract&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;幸運的是，最一開始是 7 月拿到一個 Contract Work，在做 Robot 的 CI，真的很酷，一個小 Team，裡面都是 Senior，因組裡需要 Balance 所以就把我找進去。
到現在我都很感謝當初的成員主動找我進來，待的時間很短，但我的確收穫了一些東西，同時這間公司也在後來發給我這次找工作過程裡唯一的 permanent offer，超感激。&lt;/p&gt;
&lt;p&gt;所以 7 月:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;開始一邊上語言學校 一邊做 Contract Work&lt;/li&gt;
&lt;li&gt;同時也在繼續找機會丟其他面試&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;求職的整個過程都滿煎熬的，從 6 月初到 7 月中沒有任何一個 offer，&lt;br&gt;
終於在接近 ７ 月底來了兩個 contract work 的機會，都可以幫忙申請工作 visa&lt;br&gt;
我選擇了其中一個 Contract，而沒有選擇原本的 permanent offer 和 另一個 Contract。&lt;br&gt;
明天要上工了，不知道會怎樣，總之就撐著。&lt;br&gt;
這就是這陣子在生活上和找工作的片段小記錄。
其實也還做了很多事，但就先到這。&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2022/" term="2022" label="2022" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/life/" term="life" label="life" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/work/" term="work" label="work" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/life/" term="Life" label="Life" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/work/" term="Work" label="Work" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">[PostgreSQL] 在 MacOS 上簡單快速安裝 - note</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/22/220420/PostgreSQL_MacOS%E7%B0%A1%E5%96%AE%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%9D/" />
            <id>https://linooohon.com/blog/posts/22/220420/PostgreSQL_MacOS%E7%B0%A1%E5%96%AE%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%9D/</id>
            <updated>2022-06-24T16:40:55&#43;09:00</updated>
            <published>2022-04-20T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;Simply set up PostgreSQL on macOS&lt;/p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql.png&#34; width=&#34;30%&#34;/&gt;</summary>
            
                <content type="html">&lt;h4 id=&#34;--使用-postgresapp-快速安裝--&#34;&gt;- 使用 Postgres.app 快速安裝 -&lt;/h4&gt;
&lt;h5 id=&#34;1-去-postgresql---macos-packageshttpswwwpostgresqlorgdownloadmacosx&#34;&gt;1. 去 &lt;a href=&#34;https://www.postgresql.org/download/macosx/&#34;&gt;Postgresql - MacOS packages&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;&lt;img width=&#34;50%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql2.png&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;2-找到-postgresapp點進去&#34;&gt;2. 找到 Postgres.app，點進去&lt;/h5&gt;
&lt;p&gt;&lt;img width=&#34;50%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql3.png&#34; /&gt;
&lt;img width=&#34;50%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql4.png&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;3-點選-downloads再點選-latest-release-的-download-按鈕&#34;&gt;3. 點選 Downloads，再點選 Latest Release 的 Download 按鈕&lt;/h5&gt;
&lt;p&gt;&lt;img width=&#34;50%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql5.png&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;4-download-完成後開啟並點選-initialize&#34;&gt;4. Download 完成後開啟，並點選 Initialize&lt;/h5&gt;
&lt;p&gt;&lt;img width=&#34;20%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql_initial.png&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;可以發現有預設幫忙建好的三個 Databases，postgres 已經啟動
lsof 一下，也可以確認。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img width=&#34;50%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql6.png&#34; /&gt;
&lt;img width=&#34;80%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql7.png&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;5-configure-一下-path-變數來完成-command-line-tools-的設定&#34;&gt;5. Configure 一下 $PATH 變數，來完成 command line tools 的設定&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir -p /etc/paths.d &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; /Applications/Postgres.app/Contents/Versions/latest/bin &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sudo tee /etc/paths.d/postgresapp
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;會需要輸入密碼，輸入自己 mac 上的密碼&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;這都是官方有寫清楚的建立流程:
&lt;img width=&#34;70%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql8.png&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;6-這時候就會自動有-default-settings&#34;&gt;6. 這時候就會自動有 Default Settings:&lt;/h5&gt;
&lt;p&gt;&lt;img width=&#34;70%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql9.png&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host: localhost
Port: 5432
User: 自己Mac上的系統使用者名稱 (以我自己為例會是: linpinhung)
Database: 自己Mac上的系統使用者名稱 (以我自己為例會是: linpinhung)
Password: 無
Connection URL: postgresql://localhost
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;7-接著嘗試連線-database&#34;&gt;7. 接著嘗試連線 Database&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Command to enter postgresql&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;使用這個指令會用預設的連線參數連線進去 Database。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ psql
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;8-詳細的連線方式是&#34;&gt;8. 詳細的連線方式是:&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ psql postgres://&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;User&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;Host&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;Port&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;/&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;Database&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以預設的例子就會是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ psql postgres://linpinhung@localhost:5432/linpinhung
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img width=&#34;50%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql10.png&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如此就可以進去了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;查看連線資訊&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;\conninfo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img width=&#34;50%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql11.png&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;結束連線&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;\q
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img width=&#34;50%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql12.png&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;9-停止-postgres只需要按-stop&#34;&gt;9. 停止 postgres，只需要按 Stop&lt;/h5&gt;
&lt;p&gt;&lt;img width=&#34;50%&#34; src=&#34;https://linooohon.com/blog/blog/images/22_220420/22_220420_Postgresql13.png&#34; /&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Done!&lt;/p&gt;
&lt;h3 id=&#34;12-references&#34;&gt;12. References:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://postgresapp.com/&#34;&gt;Postgres.app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt; 上一篇 &amp;gt;&lt;/strong&gt;
&lt;a href=&#34;https://linooohon.com/blog/blog/posts/21/220316/Flask_Email_Setting_三種寄信設定&#34;&gt;[Flask] Sendgrid/Gmail 三種寄信設定&lt;/a&gt;&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2022/" term="2022" label="2022" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/database/" term="database" label="database" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/postgresql/" term="PostgreSQL" label="PostgreSQL" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/database/" term="Database" label="Database" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">[Flask] Sendgrid/Gmail - &lt;三種寄信設定&gt;</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/21/220316/Flask_Email_Setting_%E4%B8%89%E7%A8%AE%E5%AF%84%E4%BF%A1%E8%A8%AD%E5%AE%9A/" />
            <id>https://linooohon.com/blog/posts/21/220316/Flask_Email_Setting_%E4%B8%89%E7%A8%AE%E5%AF%84%E4%BF%A1%E8%A8%AD%E5%AE%9A/</id>
            <updated>2022-03-17T02:46:09&#43;09:00</updated>
            <published>2022-03-15T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;最近重新設定 flask app 的寄信設定，紀錄一下&lt;/p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/21_220315/21_220315_cover.png&#34; width=&#34;30%&#34;/&gt;</summary>
            
                <content type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;此篇完整 source code 放在 Github Repo - &lt;a href=&#34;https://github.com/linooohon/flask-mail-setting&#34;&gt;flask-mail-setting&lt;/a&gt; 供參考！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;過去曾經使用 &lt;a href=&#34;https://pythonhosted.org/Flask-Mail/&#34;&gt;flask-mail&lt;/a&gt; 這個模組，但它很久沒維護了，想說找其他的試試來重新設定寄信，發現有 &lt;a href=&#34;https://github.com/waynerv/flask-mailman&#34;&gt;flask-mailman&lt;/a&gt; 可以使用，嘗試改用它發信，同時也熟悉一下 &lt;a href=&#34;https://sendgrid.com/&#34;&gt;sengrid&lt;/a&gt; 的設定，接下來會大概紀錄三種設定:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;使用 &lt;code&gt;flask_mailman&lt;/code&gt; module 以 gmail 為 mail server 寄信&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;使用 &lt;code&gt;flask_mailman&lt;/code&gt; module 以 sendgrid 為 mail server 寄信&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;單純使用 &lt;code&gt;sendgrid&lt;/code&gt; module 提供的 Web API 完成寄信&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;一--使用-flask_mailman-module-以-gmail-為-mail-server-寄信-&#34;&gt;&lt;strong&gt;一. &amp;lt; 使用 &lt;code&gt;flask_mailman&lt;/code&gt; module 以 gmail 為 mail server 寄信 &amp;gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Pre-request:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;使用 module &amp;amp; version
&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;li&gt;flask-mailman&lt;/li&gt;
&lt;li&gt;python-dotenv&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;flask==2.0.3
flask-mailman==0.3.0
python-dotenv==0.19.2
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;需有一個 Email Account，如果是 Google Account 要去關閉 &lt;a href=&#34;https://myaccount.google.com/u/1/lesssecureapps&#34;&gt;低安全性應用程式存取權&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;step1-建環境&#34;&gt;Step.1 建環境&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkdir flask_mail_demo
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; flask_mail_demo
python3 -m venv venv &lt;span class=&#34;c1&#34;&gt;# 因為是 demo 所以這裡就快速用 venv 建 Virtual Environment，平時開發我自己比較喜歡 poetry，更能清楚管理 dependencies&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; ./venv/bin/activate
pip install flask
touch gmail_mailman.py
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;step2-然後在-gmail_mailmanpy-寫-code-建立-flask-app簡單啟動一個-flask-server&#34;&gt;Step.2 然後在 &lt;code&gt;gmail_mailman.py&lt;/code&gt; 寫 code 建立 Flask App，簡單啟動一個 flask server&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@app.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Flask App 啟動了！&amp;#39;&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 如此執行 `python gmail_mailman.py` 就可以 run flask app 在 http://127.0.0.1:5000/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;step3-從第二步延伸-在-flask_mail_demo-底下&#34;&gt;Step.3 從第二步延伸: 在 &lt;code&gt;flask_mail_demo/&lt;/code&gt; 底下&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;加上 &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;.env&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; file &lt;span class=&#34;c1&#34;&gt;# 放 gmail password &lt;/span&gt;
加上 &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;config.py&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; file &lt;span class=&#34;c1&#34;&gt;# 設定 mail 發送參數&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;step4-env-file-內容為-gmail-password&#34;&gt;Step.4 &lt;code&gt;.env&lt;/code&gt; file 內容為 gmail password:&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;GMAIL_PASSWORD=&amp;lt;換成自己的 gmail 密碼&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;step5-configpy-file-內容為&#34;&gt;Step.5 &lt;code&gt;config.py&lt;/code&gt; file 內容為:&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;dotenv&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dotenv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_dotenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;GmailConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;DEBUG&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;TESTING&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;False&lt;/span&gt;
    
    &lt;span class=&#34;c1&#34;&gt;# MAIL Config&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_SERVER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;smtp.gmail.com&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_PORT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;465&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_USE_SSL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_USERNAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lifeplaylistforfun@gmail.com&amp;#39;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# MAIL_USERNAME 一定要放上 email 帳號&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_DEFAULT_SENDER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lifeplaylistforfun@gmail.com&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LIFEPLAYLISTFORFUN_PASSWORD&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    
&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;gmail&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GmailConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;把 env load 進來&lt;/li&gt;
&lt;li&gt;設計 &lt;code&gt;GmailConfig()&lt;/code&gt; class&lt;/li&gt;
&lt;li&gt;config variable 可以切換多個 config class，後面會用到。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;MAIL_SERVER=&#39;smtp.gmail.com&#39; &lt;code&gt;gmail server&lt;/code&gt;&lt;br&gt;
MAIL_PORT=465 &lt;code&gt;使用 port 465&lt;/code&gt;&lt;br&gt;
MAIL_USE_SSL=True &lt;code&gt;SSL 要為 True&lt;/code&gt;&lt;br&gt;
MAIL_USERNAME=&amp;lt;mail 帳號&amp;gt;&lt;br&gt;
MAIL_PASSWORD=&amp;lt;mail 密碼&amp;gt;&lt;br&gt;
MAIL_DEFAULT_SENDER=&amp;lt;Default 寄信人 mail 帳號&amp;gt;&lt;/p&gt;
&lt;p&gt;Refer to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://support.google.com/mail/answer/7126229?hl=en#zippy=%2Cstep-change-smtp-other-settings-in-your-email-client&#34;&gt;https://support.google.com/mail/answer/7126229?hl=en#zippy=%2Cstep-change-smtp-other-settings-in-your-email-client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;step6-回到-gmail_mailmanpy-修改裡面的內容&#34;&gt;Step.6 回到 &lt;code&gt;gmail_mailman.py&lt;/code&gt; 修改裡面的內容:&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask_mailman&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mail&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask_mailman&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EmailMessage&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;config&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gmail&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;mail&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mail&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;init_app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;send_email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;subject&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;from_email&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;lifeplaylistforfun@gmail.com&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;linooohon@gmail.com&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;html_content&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;h1&amp;gt;Test Mail&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;From flask_mailman module, using gmail config&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EmailMessage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;html_content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;from_email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content_subtype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;html&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@app.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Flask app 已啟動，沒報錯的話信已寄出&amp;#39;&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;把 flask_mailman 的 source code import 進來使用&lt;/li&gt;
&lt;li&gt;修改 config 的參數，改成自己的 mail，import 進來，並給 app 使用&lt;/li&gt;
&lt;li&gt;把 app 帶入 Mail instance&lt;/li&gt;
&lt;li&gt;設定好 &lt;code&gt;send_email&lt;/code&gt; function，一樣把 &lt;code&gt;to&lt;/code&gt; 改成收得到信的 mail，並放到 &lt;code&gt;@app.route(&#39;/&#39;)&lt;/code&gt; 底下&lt;/li&gt;
&lt;li&gt;記得先進 Virtual Environment&lt;/li&gt;
&lt;li&gt;執行 &lt;code&gt;python gmail_mailman.py&lt;/code&gt;，並訪問 &lt;code&gt;http://127.0.0.1:5000/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;確定路徑沒錯，沒有錯誤訊息的話，去信箱就會看到信了！&lt;/li&gt;
&lt;/ol&gt;
&lt;img src=&#34;https://linooohon.com/blog/blog/images/21_220315/21_220315_flaskemail_02.png&#34; width=&#34;40%&#34;&gt;
&lt;br/&gt;
&lt;img src=&#34;https://linooohon.com/blog/blog/images/21_220315/21_220315_gmail_mailman.png&#34; width=&#34;40%&#34;&gt;
&lt;h4 id=&#34;二--使用-flask_mailman-module-以-sendgrid-為-mail-server-寄信-&#34;&gt;&lt;strong&gt;二. &amp;lt; 使用 &lt;code&gt;flask_mailman&lt;/code&gt; module 以 sendgrid 為 mail server 寄信 &amp;gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;跟 1. 相似，只是 mail 參數設定不同，以及需要去 sendgrid 官網註冊一個帳號，拿取 &lt;code&gt;Secret Key(Token)&lt;/code&gt; 也就是 MAIL_PASSWORD 要帶入的地方&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pre-request:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;使用 module &amp;amp; version
&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;li&gt;flask-mailman&lt;/li&gt;
&lt;li&gt;python-dotenv&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;flask==2.0.3
flask-mailman==0.3.0
python-dotenv==0.19.2
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;需有一個 Email Account，如果是 Google Account 要去關閉 &lt;a href=&#34;https://myaccount.google.com/u/1/lesssecureapps&#34;&gt;低安全性應用程式存取權&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需要去 &lt;a href=&#34;https://signup.sendgrid.com/&#34;&gt;sendgrid - sign up&lt;/a&gt; 註冊一個帳號&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;step1-在-sendgrid-註冊完帳號後在裡面操作拿取-secret-key-api-key&#34;&gt;Step.1 在 sendgrid 註冊完帳號後，在裡面操作拿取 &lt;code&gt;Secret Key&lt;/code&gt; (API Key)&lt;/h5&gt;
&lt;p&gt;Go to &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;API Keys&lt;/code&gt;：然後申請一個，拿到後保存下來。
&lt;img src=&#34;https://linooohon.com/blog/blog/images/21_220315/21_220315_sendgrid_01.png&#34; width=&#34;20%&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;step2-拿完-secret-key-還必須要註冊一個-single-sender-verification&#34;&gt;Step.2 拿完 &lt;code&gt;Secret Key&lt;/code&gt; 還必須要註冊一個 Single Sender Verification&lt;/h5&gt;
&lt;p&gt;Go to &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Sender Authentication&lt;/code&gt;：然後申請一個，拿到後保存下來。&lt;/p&gt;
&lt;img src=&#34;https://linooohon.com/blog/blog/images/21_220315/21_220315_sendgrid_02.png&#34; width=&#34;20%&#34;&gt;
&lt;img src=&#34;https://linooohon.com/blog/blog/images/21_220315/21_220315_sendgrid_03.png&#34; width=&#34;30%&#34;&gt;
&lt;h5 id=&#34;step3-在剛剛的-flask_mail_demo-底下修改-env-configpy&#34;&gt;Step.3 在剛剛的 &lt;code&gt;flask_mail_demo/&lt;/code&gt; 底下修改 &lt;code&gt;.env&lt;/code&gt; &lt;code&gt;config.py&lt;/code&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.env&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nv&#34;&gt;GMAIL_PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;換成 mail 密碼&amp;gt;
&lt;span class=&#34;nv&#34;&gt;MAIL_PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;換成剛剛從 Sendgrid 拿到的 API Key&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;config.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;dotenv&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dotenv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_dotenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;GmailConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;DEBUG&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;TESTING&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;False&lt;/span&gt;
    
    &lt;span class=&#34;c1&#34;&gt;# MAIL Config&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_SERVER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;smtp.gmail.com&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_PORT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;465&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_USE_SSL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# MAIL_USE_TLS=True&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_USERNAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lifeplaylistforfun@gmail.com&amp;#39;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# MAIL_USERNAME 一定要放上 email 帳號&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_DEFAULT_SENDER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lifeplaylistforfun@gmail.com&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;LIFEPLAYLISTFORFUN_PASSWORD&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SendgridConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;DEBUG&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;TESTING&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;False&lt;/span&gt;
    
    &lt;span class=&#34;c1&#34;&gt;# MAIL Config&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_SERVER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;smtp.sendgrid.net&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_PORT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;587&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_USE_TLS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_USERNAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;apikey&amp;#39;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# MAIL_USERNAME 一定要放上 apikey&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_DEFAULT_SENDER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lifeplaylistforfun@gmail.com&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;MAIL_PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;MAIL_PASSWORD&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;gmail&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GmailConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;sendgrid&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SendgridConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;MAIL_SERVER=&#39;smtp.sendgrid.net&#39;&lt;br&gt;
MAIL_PORT=587 &lt;code&gt;port 587&lt;/code&gt;&lt;br&gt;
MAIL_USE_TLS=True &lt;code&gt;TLS 為 True&lt;/code&gt;&lt;br&gt;
MAIL_USERNAME=&#39;apikey&#39; &lt;code&gt;MAIL_USERNAME 一定要放上 apikey&lt;/code&gt;&lt;br&gt;
MAIL_DEFAULT_SENDER=&amp;lt;mail 帳號&amp;gt;&lt;br&gt;
MAIL_PASSWORD=os.getenv(&#39;MAIL_PASSWORD&#39;)&lt;/p&gt;
&lt;h5 id=&#34;step4-一樣在-flask_mail_demo-底下建立-flask-app&#34;&gt;Step.4 一樣在 &lt;code&gt;flask_mail_demo/&lt;/code&gt; 底下建立 flask app&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;touch sendgrid_mailman.py
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;裡面的內容跟 Gmail 是一樣的，把 config 調整成 sendgrid 的就行:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask_mailman&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mail&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask_mailman&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EmailMessage&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;config&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;sendgrid&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;mail&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mail&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;init_app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;send_email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;subject&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;from_email&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;lifeplaylistforfun@gmail.com&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;linooohon@gmail.com&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;html_content&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;h1&amp;gt;Test Mail&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;From flask_mailman module, using sendgrid config&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EmailMessage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;html_content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;from_email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content_subtype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;html&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@app.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Flask app 已啟動，沒報錯的話信已寄出&amp;#39;&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;一樣該改成自己 mail 的都要改，記得進 Virtual Environment。&lt;/li&gt;
&lt;li&gt;執行 &lt;code&gt;python sendgrid_mailman.py&lt;/code&gt;，並訪問 &lt;code&gt;http://127.0.0.1:5000/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;路徑沒錯，沒報錯的話就會看到信，成功！&lt;/li&gt;
&lt;/ol&gt;
&lt;img src=&#34;https://linooohon.com/blog/blog/images/21_220315/21_220315_sendgrid_mailman.png&#34; width=&#34;30%&#34;&gt;
&lt;h4 id=&#34;三--單純使用-sendgrid-module-提供的-web-api-完成寄信-&#34;&gt;&lt;strong&gt;三. &amp;lt; 單純使用 &lt;code&gt;sendgrid&lt;/code&gt; module 提供的 Web API 完成寄信 &amp;gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Pre-request:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;使用 module &amp;amp; version
&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;li&gt;sendgrid&lt;/li&gt;
&lt;li&gt;python-dotenv&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;flask==2.0.3
sendgrid==6.9.7
python-dotenv==0.19.2
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;需有一個 Email Account，如果是 Google Account 要去關閉 &lt;a href=&#34;https://myaccount.google.com/u/1/lesssecureapps&#34;&gt;低安全性應用程式存取權&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;step1-與前一個拿-sendgrid-的-secret-key-一樣&#34;&gt;Step.1 與前一個拿 sendgrid 的 Secret Key 一樣&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;這裡就使用跟上面一樣的 &lt;code&gt;Secret Key&lt;/code&gt;，就用 &lt;code&gt;SendgridConfig()&lt;/code&gt; class&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;step2-一樣在-flask_mail_demo-底下建立-flask-app&#34;&gt;Step.2 一樣在 &lt;code&gt;flask_mail_demo/&lt;/code&gt; 底下建立 flask app&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;其實可以不用建立 flask app，這是個單純的寄信 API，但這裡還是 demo 啟動 Flask App 來寄出信。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;touch sendgrid_webapi.py
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;內容:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sendgrid.helpers.mail&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mail&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sendgrid&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SendGridAPIClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Content&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;config&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Flask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;send_email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;subject&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;to_emails&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;linooohon@gmail.com&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;from_email&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;lifeplaylistforfun@gmail.com&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;mail_html&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;text/html&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;h1&amp;gt;Test Mail&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;From Sendgrid Web API&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Mail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to_emails&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mail_html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;sg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SendGridAPIClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;sendgrid&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MAIL_PASSWORD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status_code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@app.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;send_email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Flask app 已啟動，沒報錯的話信已寄出&amp;#39;&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;一樣該改成自己 mail 的都要改，記得進 Virtual Environment。&lt;/li&gt;
&lt;li&gt;執行 &lt;code&gt;python sendgrid_webapi.py&lt;/code&gt;，並訪問 &lt;code&gt;http://127.0.0.1:5000/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;路徑沒錯，沒報錯的話就會看到信，成功！&lt;/li&gt;
&lt;/ol&gt;
&lt;img src=&#34;https://linooohon.com/blog/blog/images/21_220315/21_220315_sendgrid_webapi.png&#34; width=&#34;30%&#34;&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2022/" term="2022" label="2022" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/python/" term="python" label="python" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/flask/" term="flask" label="flask" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/flask/" term="Flask" label="Flask" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/python/" term="Python" label="Python" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/web/" term="Web" label="Web" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/sendgrid/" term="Sendgrid" label="Sendgrid" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/email/" term="Email" label="Email" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Pasteboard - Flipper</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/20/220221/Pasteboard-Flipper/" />
            <id>https://linooohon.com/blog/posts/20/220221/Pasteboard-Flipper/</id>
            <updated>2022-03-17T00:51:35&#43;09:00</updated>
            <published>2022-02-21T00:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;Pasteboard - Flipper&lt;/p&gt;&lt;img width=&#34;30%&#34; src=&#34;https://linooohon.com/blog/blog/images/20_220221/20_220221_pasteboard_flipper.png&#34; /&gt;</summary>
            
                <content type="html">&lt;!-- ![Pasteboard - Flipper](/blog/images/20_220221/20_220221_pasteboard_flipper.png) --&gt;
&lt;p&gt;&lt;img width=&#34;30%&#34; src=&#34;https://linooohon.com/blog/blog/images/20_220221/20_220221_pasteboard_flipper.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pasteboard - Flipper(2006)&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;重くのし掛かるプレッシャー
軽くはねのけてフリッパー
低く押しよせるプレッシャー 
高く蹴り上げてフリッパー
青く塗り替えるプレッシャー
上手くすり抜けてフリッパー
酷く切りかけるプレッシャー
強く笑い飛ばせフリッパー
弾け飛ぶクラッカー
回り出すプレーヤー
掻き鳴らせよギター
踏み込んでフランジャー
鳴り響くスピーカー
鳴らされてるヒーター
止まないでフランジャー
盛り上げてフリッパー
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;crazy....不安を感じる...loop....&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=7cblWCUyYbs&#34;&gt;https://www.youtube.com/watch?v=7cblWCUyYbs&lt;/a&gt;&lt;/p&gt;
&lt;!-- &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/7cblWCUyYbs&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt; --&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2022/" term="2022" label="2022" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/life/" term="life" label="life" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/music/" term="music" label="music" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/life/" term="Life" label="Life" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/music/" term="Music" label="Music" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">關於 Session 與 Cookie - [ Cookie篇 ] 紀錄</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/19/220218/cookie%E7%B4%80%E9%8C%84/" />
            <id>https://linooohon.com/blog/posts/19/220218/cookie%E7%B4%80%E9%8C%84/</id>
            <updated>2022-03-17T00:51:29&#43;09:00</updated>
            <published>2022-02-18T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;Session 與 Cookie - [ Cookie ] 篇紀錄&lt;/p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/19_220218/19_220218_cookie紀錄.png&#34; width=&#34;50%&#34;/&gt;</summary>
            
                <content type="html">&lt;blockquote&gt;
&lt;p&gt;此筆記參考網路文章與資源，內文描述有雷同請見諒，僅作為筆記之用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Web 開發者一定要了解 HTTP 無狀態的特性，要在網路上保存狀態、識別使用者，必須透過適當的機制去完成(常見的就是 Cookie)，繼滿久之前寫的一篇關於 Session 的介紹，這次主要是想筆記一些 Cookie 設置的特性。&lt;/p&gt;
&lt;h2 id=&#34;-cookie-basic-&#34;&gt;&lt;strong&gt;&amp;lt; Cookie Basic &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;一個 Cookie 最多可以存成 4KB (4093 bytes) 的大小。&lt;/li&gt;
&lt;li&gt;一個 Domain 最好不要超過 50 個 Cookies, 如此可以符合絕大部分的 User Agent，再更好的話最好不要超過 20 個，因為有些 IE 版本只支援 20 個，雖然現在 IE 已漸漸淡出。&lt;/li&gt;
&lt;li&gt;大部分 User Agent 至少可設置 20 個 Cookies (也就是說針對同一個 Domain 至少可以存 20 個 Cookies)。&lt;/li&gt;
&lt;li&gt;前面1、2、3點，關於 Cookie 大小以及設置的容量極限，根據不同 User Agent 會有不同差異。&lt;/li&gt;
&lt;li&gt;Cookies 在資安方面要注意、而在效能方面也要考慮，過多也不是好事。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;-建立-cookie-&#34;&gt;&lt;strong&gt;&amp;lt; 建立 Cookie &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;p&gt;一. 首先設定 Cookie 的流程大概像這樣。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Server 收到一個 HTTP Request。&lt;/li&gt;
&lt;li&gt;Server 回傳 Response 時在 Header 送一個 &lt;code&gt;Set-Cookie&lt;/code&gt; 的設定。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 像這樣&lt;/span&gt;
Set-Cookie: &amp;lt;cookie-name&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;cookie-value&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;User Agent 收到後，把 Cookie 以 &lt;code&gt;key-value&lt;/code&gt; 的形式存在自己手裡。&lt;/li&gt;
&lt;li&gt;下一次 User Agent 發出 HTTP Request 時，Header 會自動帶此 Cookie。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二. 一般來說，每個 Cookie 以 &lt;code&gt;key-value&lt;/code&gt; 的形式儲存之外，還會有底下這些屬性能夠去設定當前這個 Cookie 的特性:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Expires(Optional) &lt;code&gt;Expires=&amp;lt;date&amp;gt;&lt;/code&gt;: 設置這個 Cookie 的具體有效日期&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果沒有設置，預設就會是 Session Cookie (會話 Cookie)，這個 Session Cookie 存在 Client 的暫存記憶體，當 Client 不再運作(像是關閉 Browser)這個 Session Cookie 就會消失，但其實很多 Browser 都有回覆 Session 狀態的功能，所以假設不是嚴格意義上的完全停止 Client 的運作(ex: 退出 Chrome App)，就連 Session Cookie 也都有機會回覆。&lt;/li&gt;
&lt;li&gt;有沒有過期，是在 Client 端的日期判斷為主， 而不是 Server。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Max-Age(Optional) &lt;code&gt;Max-Age=&amp;lt;number&amp;gt;&lt;/code&gt;: 設置這個 Cookie 在幾秒後過期&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果 &lt;code&gt;Expires&lt;/code&gt; 和 &lt;code&gt;Max-Age&lt;/code&gt; 同時出現，那 &lt;code&gt;Max-Age&lt;/code&gt; 優先度更高。&lt;/li&gt;
&lt;li&gt;設定為 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;負數&lt;/code&gt;，此 Set-Cookie 在送到 User Agent 儲存時會直接失效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Domain(Optional) &lt;code&gt;Domain=&amp;lt;domain-value&amp;gt;&lt;/code&gt;: 設置這個 Cookie 可以被送去哪個 Domain，也就是說這個 Cookie 在哪些 Domain 下出現是合理的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基本運作邏輯:
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Client端，如果網站的域名為 &lt;code&gt;a.site.com&lt;/code&gt;，那在 Client 的合理 Domain 只能是 &lt;code&gt;a.site.com&lt;/code&gt; 或是父域名 &lt;code&gt;site.com&lt;/code&gt; ，同級的域名像是 &lt;code&gt;b.site.com&lt;/code&gt; 是無效的。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Server端，如果網站的域名為 &lt;code&gt;server.site.com&lt;/code&gt;，那在 Server 的合理 Domain 只能是 &lt;code&gt;server.site.com&lt;/code&gt; 或是父域名 &lt;code&gt;site.com&lt;/code&gt;，同級域名像是 &lt;code&gt;server2.sit‘e.com&lt;/code&gt; 是無效的。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;所以根據第 1、2 點，如果今天 Client 的 Domain 是 &lt;code&gt;a.site.com&lt;/code&gt;，Server 是 &lt;code&gt;server.site.com&lt;/code&gt; 這時候 Domain 只能設置 &lt;code&gt;site.com&lt;/code&gt; 才可以在兩方正確運作。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;設置規則: 根據運作邏輯，設置 Cookie 有一些規則
&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;0&#34;&gt;
&lt;li&gt;Cookie 的 Origin Domain 為 Client 發出 Request 時的 Domain。(假設為&lt;code&gt;site.com&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;如果 Domain 沒有設置，那預設 Cookie 只能在 Origin Domain 運作，其他都不行，包括子域名。(此時 Domain 的域名就會是 &lt;code&gt;site.com&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;如果 Domain 有設置，那 Cookie 能夠在此設置的 Domain 和他的所有子域名運作。(以 chromium based 的 User Agent 來說假設設置為 &lt;code&gt;site.com&lt;/code&gt;，此時 Domain 的域名就會是 &lt;code&gt;.site.com&lt;/code&gt;, 會在前面多一個 &lt;code&gt;.&lt;/code&gt; ，這個 &lt;code&gt;.&lt;/code&gt; 表示允許此 Domain 以及他的所有 Sub Domain.)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;如果 Origin Domain 是 IP，這時不能夠設置 Domain，但相對的也會符合第 1 點的運作。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;所以根據運作邏輯，想要運作則是當在 &lt;code&gt;site.com&lt;/code&gt; 時，Cookie 不能設置為 &lt;code&gt;a.site.com&lt;/code&gt;，但在 &lt;code&gt;a.site.com&lt;/code&gt; 時可以設置 &lt;code&gt;site.com&lt;/code&gt;，但也不能設置 &lt;code&gt;b.site.com&lt;/code&gt; 和 其他 Domain。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Path(Optional) &lt;code&gt;Path=&amp;lt;path-value&amp;gt;&lt;/code&gt;: 設置可以共享這個 Cookie 的 Path。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不設置的話，預設為 &lt;code&gt;/&lt;/code&gt; ，底下的 Path 都可以共享這個 Cookie。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Secure(Optional) &lt;code&gt;Secure&lt;/code&gt; : 只能透過 Secure 的管道被傳輸(SSL)，而依據目前主流的實作，要透過 HTTPS 來傳送，不能是 HTTP。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;這個 Secure 很重要，可以防止基本的 &lt;a href=&#34;https://zh.wikipedia.org/wiki/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB&#34;&gt;MITM中間人攻擊(Man-in-the-middle attack)&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;所以當 Server 是 HTTP 且 Set-Header 有設置 Secure 但還傳送時，事實上 Set-Cookie 裡的資料還是有的，只是被 User Agent 拒絕了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HttpOnly(Optional): &lt;code&gt;httpOnly=true&lt;/code&gt; / &lt;code&gt;httpOnly&lt;/code&gt; : 禁止使用 JS 獲取 cookie&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;這個 HttpOnly 很重要，可以防止 &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Glossary/Cross-site_scripting&#34;&gt;XSS(Cross-site scripting)&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;像是 &lt;code&gt;Document.cookie&lt;/code&gt; 就會拿不到 Cookie。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SameSite(Optional): &lt;code&gt;SameSite=&amp;lt;samesite-value&amp;gt;&lt;/code&gt;: 控制 Cookie 可不可以被跨站請求傳送，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以防止 &lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0&#34;&gt;CSRF跨站請求偽照(Cross Site Request Forgery)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;有三種設定分別是 &lt;code&gt;Strict&lt;/code&gt; 、&lt;code&gt;Lax&lt;/code&gt;、&lt;code&gt;None&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Strict: same-site 才可以送 Cookie。&lt;/li&gt;
&lt;li&gt;Lax(default值):same-site 才可以送，但在某些時刻可以，如下:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;...&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;link rel=&amp;quot;prerender&amp;quot; href=&amp;quot;...&amp;quot;/&amp;gt;
&amp;lt;form method=&amp;quot;GET&amp;quot; action=&amp;quot;...&amp;quot;&amp;gt; 但是 POST 方法 的 form，或是只要是 POST, PUT, DELETE 這些方法，就不會帶上 cookie
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;None: same-site, cross-site 都送，且要加上 Secure 屬性像這樣: &lt;code&gt;SameSite=None; Secure;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;要把 Site 和 Origin 分清:
&lt;ul&gt;
&lt;li&gt;Origin: Scheme(ex: https)、Host(ex: &lt;a href=&#34;http://www.site.com&#34;&gt;www.site.com&lt;/a&gt;)、Port(ex: 80)，真正的 Same-Origin 是 3 個都一樣才是, 其餘都是 Cross-Origin。(但這裡要注意，Cookie 在確認是不是同個 origin 時，是只看 host 以及 Path 的設定、還有 Secure 的設定來確認 Cookie 能不能夠存在)&lt;/li&gt;
&lt;li&gt;Site: Same-Site 的判定關係到 Effetive top-level domains（eTLDs)，eTLDs 被定義在 &lt;a href=&#34;https://publicsuffix.org/list/public_suffix_list.dat&#34;&gt;Public Suffix List&lt;/a&gt; 中，而 Site 是由 eTLD 加上一個前綴組成。假設 &lt;code&gt;site.com&lt;/code&gt; 不在 Public Suffix List 中，但是 &lt;code&gt;.com&lt;/code&gt; 存在，意思是說，那 &lt;code&gt;site.com&lt;/code&gt; 是一個 site 沒錯，同時 &lt;code&gt;a.site.com&lt;/code&gt; 和 &lt;code&gt;b.site.com&lt;/code&gt; 屬於同一個 site，但像 &lt;code&gt;github.io&lt;/code&gt; 在 Public Suffix List 中，那 &lt;code&gt;a.github.io&lt;/code&gt; 和 &lt;code&gt;b.github.io&lt;/code&gt; 就不是同一個 site。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;何謂 &lt;a href=&#34;https://publicsuffix.org/list/public_suffix_list.dat&#34;&gt;Public Suffix List&lt;/a&gt;: &lt;a href=&#34;https://www.google.com/search?q=etld&amp;amp;sxsrf=APq-WBuOiBOKYzQ0uLl0-0Isq8Q2NqNuuA%3A1644993762897&amp;amp;ei=4pwMYuWCNt6Mr7wPtL-g4A0&amp;amp;ved=0ahUKEwjl-5Onz4P2AhVexosBHbQfCNwQ4dUDCA4&amp;amp;uact=5&amp;amp;oq=etld&amp;amp;gs_lcp=Cgdnd3Mtd2l6EAMyBQgAEIAEMgcIABCxAxAKMgQIABAKMgQIABAKMgoILhDHARCvARAKMgQIABAKMgQIABAKMgQIABAKMgQIABAKMgoILhDHARDRAxAKOgcIABBHELADOgcIIxDqAhAnOgQIIxAnOgYIABAKEEM6CAgAEIAEELEDOgsIABCABBCxAxCDAToOCC4QgAQQsQMQxwEQ0QM6EQguEIAEELEDEIMBEMcBENEDOhAILhCxAxCDARDHARDRAxBDOgQIABBDOgQILhBDOggILhCABBDUAjoHCAAQgAQQCkoECEEYAEoECEYYAFC4BFiVD2CSEGgCcAF4AIABc4gB0AKSAQMzLjGYAQCgAQGwAQrIAQrAAQE&amp;amp;sclient=gws-wiz&#34;&gt;參考&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;先知道 TLD 再理解 eTLD, eTLD 都放在 Public Suffix List 裡 
比如說 `.com` 在 Public Suffix List 裡面。
那為什麼 `.com` 在裡面，因為 `.com` 太多人用了，我必須限制 `site.com` 不會干涉到世界其他 `.com` 結尾的網站，有點這樣的感覺。
那 `site.com` 就是一個 site，`site2.com` 就是另一個 Site。
而 `a.site.com` 和 `b.site.com` 就是 Same-Site。

那為什麼 `github.io` 在裡面，因為 `github.io` 在世界上也太多人擁有了，為了不互相干涉，以及干涉到 `github.io`。
那這時 `a.github.io` 和 `b.github.io` 就是 Cross-Site。

所以把他們歸納起來，如此就可以知道 Domain 與 Domain 之間 Same-Site 和 Cross-Site 關係。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-persistent--session-transient-&#34;&gt;&lt;strong&gt;&amp;lt; Persistent &amp;amp; Session (Transient) &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;沒有設置 Expires 就是 Session Cookie 存在 Memory，隨著 User Agent 關閉而消失。
其餘的是 Persistent Cookie，存在 User Agent，也就是 User 的 Disk 裡。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-references-&#34;&gt;&lt;strong&gt;&amp;lt; References &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Set-Cookie 的 Detail 可以參考 &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie&#34;&gt;MDN/Set-Cookie&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cookie 的 SameSite 可以參考 &lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10251288&#34;&gt;iT幫幫忙&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;什麼是 CSRF:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.techbridge.cc/2017/02/25/csrf-introduction/&#34;&gt;CSRF 防範&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tech-blog.cymetrics.io/posts/jo/zerobased-cross-site-request-forgery/&#34;&gt;CSRF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;什麼是 XSS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tech-blog.cymetrics.io/posts/jo/zerobased-cross-site-scripting/&#34;&gt;XSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://browsercookielimits.iain.guru/&#34;&gt;http://browsercookielimits.iain.guru/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://juejin.cn/post/6863377752939036679&#34;&gt;https://juejin.cn/post/6863377752939036679&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10218811&#34;&gt;Cookie 的安全隱憂&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;什麼是 CSP:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP#examples_common_use_cases&#34;&gt;CSP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/hannah-lin/content-security-policy-csp-%E5%B9%AB%E4%BD%A0%E7%B6%B2%E7%AB%99%E5%88%97%E7%99%BD%E5%90%8D%E5%96%AE%E5%90%A7-df38c990f63c&#34;&gt;CSP 白名單&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2022/" term="2022" label="2022" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/http/" term="http" label="http" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/session/" term="Session" label="Session" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/web/" term="Web" label="Web" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/cookie/" term="Cookie" label="Cookie" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/http/" term="Http" label="Http" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">CPU 與 Memory 基礎概念/名詞釐清 Note</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/18/220110/Character_Encoding%E5%AD%97%E5%85%83%E7%B7%A8%E7%A2%BC/Part1/" />
            <id>https://linooohon.com/blog/posts/18/220110/Character_Encoding%E5%AD%97%E5%85%83%E7%B7%A8%E7%A2%BC/Part1/</id>
            <updated>2022-01-11T22:11:12&#43;09:00</updated>
            <published>2022-01-10T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;CPU, Memory, RAM, ROM...&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/18_220110/18_220110_cpu_memory.png&#34; width=&#34;50%&#34;/&gt;</summary>
            
                <content type="html">&lt;blockquote&gt;
&lt;p&gt;此筆記參考網路文章與資源，內文描述與圖片有雷同請見諒，僅作為筆記之用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-一-cpucentral-processing-unit中央處理器處理器電腦大腦心臟-&#34;&gt;&lt;strong&gt;&amp;lt; 一. CPU(central processing unit):中央處理器/處理器/電腦大腦(心臟) &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;-作用&#34;&gt;@ 作用&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;負責各部門的運作以及處理各種算術運算與邏輯運算
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;-組成&#34;&gt;@ 組成&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Main(2 parts):
&lt;ul&gt;
&lt;li&gt;CU(Control Unit)(控制單元)&lt;/li&gt;
&lt;li&gt;ALU(Arithmatic and Logical Unit)(算術邏輯單元)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Others:
&lt;ul&gt;
&lt;li&gt;Register(暫存器) - 好幾種
&lt;ul&gt;
&lt;li&gt;Buffer Register(緩衝暫存器)&lt;/li&gt;
&lt;li&gt;Accumulator(累加器)&lt;/li&gt;
&lt;li&gt;Address Register(位址暫存器)&lt;/li&gt;
&lt;li&gt;Instruction Register(指令暫存器)&lt;/li&gt;
&lt;li&gt;Program Counter(程式計數器)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bus(匯流排) - 好幾種
&lt;ul&gt;
&lt;li&gt;ex: Data Bus(資料匯流排)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-jobs&#34;&gt;@ Jobs&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;    - CU: 指揮及協調電腦系統中其他部門的工作，並且監督與管制主記憶體與算術邏輯單元及輸入／輸出裝置間的資料與指令的傳輸。負責傳出 Signal 給 CPU 內的部門來控制其動作，總之 CPU 的動作其實都是 CU 規劃的。
        - ex: 把 Instruction Register 中的 Instruction 送到 Decoder 中。
        - ex: 指定 Data 要放進去哪個 Register。
        - ex: 控制 ALU 該做哪一種 Operation、Program Counter 的計算。
    - ALU: 在控制單元的指揮之下，負責執行所有的算術運算，如加、減、乘、除等。以及執行邏輯運算如某數是否大於、等於或小於另一數。(英文來說就是對讀入的指令做各種的 Operation)。ALU 最多只能從兩個 Register 做讀取，只能輸出到一個 Register，也就是最多有兩個輸入和一個輸出。
        - Logic Operation: AND、OR、XOR、NAND…等等。
        - Shift Operation: 將指令的位元向左移或向右移。
        - Arithmetic Operation: 做運算，A + B、A — B、A * B或 A / B …等等。
    - Register: 
        - Buffer Register: 暫存由主記憶體中讀出以待處理的資料。
        - Accumulator: 儲存算術或邏輯運算執行時暫存的結果。
        - Address Register: 暫存所要讀取之資料或指令在主記憶體中的儲存位址。
        - Instruction Register: 暫存下一次所要執行的指令。
        - Program Counter: 暫存下一個等待執行的指令在主記憶體中的位址。
    - Bus: 是電腦系統中不同部門間用來傳送資料的通道，Bus 亦有好幾種，其中資料匯流排(databus)是負責整個CPU中資料傳送的任務。而資料匯流排的寬度越寬，則一次所能傳送的資料量就越大，電腦的處理速度也就越快。例如Intel 80286處理器的匯流排寬度為十六位元，一般稱為十六位元電腦。而80486則為32位元。有些超級電腦的資料匯流排的寬度則高達128個位元。
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;-notes&#34;&gt;@ Notes&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;在某些電腦系統中，CPU包含了控制單元，算術邏輯單元和主記憶體，而一般的微電腦系統其CPU則只包含控制單元及算術邏輯單元。主記憶體是否為CPU的一部分是隨電腦系統的不同而有不同的定義的。
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;-cpu-流程圖&#34;&gt;@ CPU 流程圖&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ssG5VY7.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@leo19866/cpu%E8%88%87%E8%A8%98%E6%86%B6%E9%AB%94-memory-%E7%9A%84%E9%81%8B%E4%BD%9C%E6%A9%9F%E5%88%B6-2e33bd9b0858&#34;&gt;圖片來源&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;-一次工作時資料進來在cpu的流程是做了什麼&#34;&gt;@ 一次工作時，資料進來在CPU的流程是做了什麼?&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;1. 由 Input devices(Keyboard、Mouse、或者其他I/O裝置) 經由 Data Bus 從 Memory 傳輸給 CPU。
2. CPU 將收到的指令放到 Instruction Register 中。
3. Control Unit 再從 Instruction Register 中把它讀取出來(一條指令)。
4. Control Unit 讀出來後傳給 Decoder 做解碼 (decoding) 的動作，把指令轉換成 CPU 可以明白的 Machine Language(Machine Code的組成)，CPU 到這邊才真正了解到底要做什麼。
5. CPU 依照指令內容到 Cache 中去尋找有沒有需要用到的 Program 或 Data。
    1. 如果沒有，再到 Main Memory (也就是 Violate Memory 揮發性記憶體) 中去找。
    2. 如果再沒有，再到 External Memory (Secondary Storage, 也就是 Hard Disk) 中去找。
6. 等到一條指令需要用到的 Program 和 Data 都找到後，Program 和 Data 會先被送入 ALU 中執行各種 Operation, Control Unit 會依照指令內容告訴 AUL 該執行哪一種 Operation。
    - 若是在處理過程中需要把資料暫時儲存起來，Control Unit 會叫 CPU 把資料暫時存到 Data Register, 等到一條指令的處理結束後，Data Register 也會跟著被清空。
7. 一條指令執行完成後，CPU 會把該條執行的結果輸出到 Output Device。
8. Control Unit 的 Program Counter 會繼續依照指令內容來決定下一條指令的 Address，並存著。
9. CPU 再去看 Program Counter 存的 Address，根據該 Address 去 Main Memory 找那條指令，並把他存在 Instruction Register，等待準備執行，重複 Step.3 - step.9


整個過程會不斷地重複: 1.找到指令放進 Instruction Register -&amp;gt; 2.解碼 -&amp;gt; 3.執行 -&amp;gt; 4.Program Counter 繼續給出下一個指令位址
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;-references&#34;&gt;@ References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://terms.naer.edu.tw/detail/1302340/&#34;&gt;國家教育研究院&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sites.google.com/site/nutncsie10412/ge-ren-jian-jie/ji-yi-ti&#34;&gt;NUTNCSIE10412&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@leo19866/cpu%E8%88%87%E8%A8%98%E6%86%B6%E9%AB%94-memory-%E7%9A%84%E9%81%8B%E4%BD%9C%E6%A9%9F%E5%88%B6-2e33bd9b0858&#34;&gt;Leo Lin Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Machine_code&#34;&gt;Wiki - Machine Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sites.google.com/site/nutncsie10412/ge-ren-jian-jie/dian-nao-nei-bu-gou-cheng&#34;&gt;電腦組成&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-二-memory-記憶體內存-&#34;&gt;&lt;strong&gt;&amp;lt; 二. Memory: 記憶體/內存 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;-組成大致分兩種&#34;&gt;@ 組成(大致分兩種)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Volatile Memory(揮發性記憶體/暫存記憶體): 電源供應中斷後，資料會消失, 速度快&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RAM(Random Access Memory)(隨機存取記憶體)
&lt;ul&gt;
&lt;li&gt;DRAM(Dynamic RAM)(動態隨機存取記憶體)&lt;/li&gt;
&lt;li&gt;SRAM(Static RAM)(靜態隨機存取記憶體)
&lt;ul&gt;
&lt;li&gt;ex: Cache&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Non-volatile Memory(非揮發性記憶體/永久儲存記憶體/NVM): 電源供應中斷後，資料會保存, 速度慢&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ROM(Read-Only-Memory)(唯讀記憶體)
&lt;ul&gt;
&lt;li&gt;PROM(Programmable ROM)(可邊程式唯讀記憶體)&lt;/li&gt;
&lt;li&gt;EPROM(Erasable Programmable ROM)(可抹除可編程式唯讀記憶體)&lt;/li&gt;
&lt;li&gt;EEPROM(Electrically Erasable Programmable ROM)(電子抹除式可複寫唯讀記憶體)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Flash Memory(快閃記憶體/快閃儲存器/閃存)
&lt;ul&gt;
&lt;li&gt;NOR Flash&lt;/li&gt;
&lt;li&gt;NAND Flash
&lt;ul&gt;
&lt;li&gt;ex: 隨身碟&lt;/li&gt;
&lt;li&gt;ex: 記憶卡&lt;/li&gt;
&lt;li&gt;ex: SSD(Solid-state Drive/Solid-state Disk)(固態硬碟)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;補充&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;HDD(Hard Disk Drive/Hard Disk/硬碟/硬盤/磁盤/傳統硬碟/機械硬盤)&lt;/li&gt;
&lt;li&gt;光碟&lt;/li&gt;
&lt;li&gt;磁帶&lt;br&gt;
&lt;strong&gt;這些雖然也都是非揮發性儲存裝置，但以 Wiki 上的解釋，並不把他們歸類為 NVM&lt;/strong&gt;&lt;br&gt;
參考 &lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%9D%9E%E6%8F%AE%E7%99%BC%E6%80%A7%E8%A8%98%E6%86%B6%E9%AB%94&#34;&gt;(Wiki - NVM)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;補充: Main Memory 和 External Memory&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;- Main Memory: 就我查到的是指 RAM、ROM、有時候包括 Flash 和 Cache。
但其實常常 Main Memory 最常專指 RAM。
且有時候也稱 Primary Storage。

- External Memory: 包括
    - Non-volatile Memory(flash, SSD)
    - HHD(硬碟)
    - CD
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;-ramrandom-access-memorymain-memory隨機存取記憶體&#34;&gt;@ RAM(Random Access Memory)(Main Memory/隨機存取記憶體)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;負責電腦運作時 CPU 的資料暫存和快取&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;1. 隨機存取的意思:
當要對這個記憶體內的任何位置的資料作讀取或寫入時，其所花費的時間與位置無任何關係。
與之相對的是 -&amp;gt; 循序存取(Sequential Access)

2. RAM 被稱為 Main Memory:
裡面存放的內容會隨著不同做法而改變，最普遍的做法就是把 Program 和 Data 一起放在裡面，所以當電腦開機之後，它若是想要執行程式或者是處理資料，就必須先把資料放到 RAM 中，接著在來使用，而當它想要保持現有的執行狀態，比方說一直執行某個程式，它也必須占用 RAM 的空間，所以當你發現開太多程式讓系統變得緩慢時，那就是 RAM 裡的空間已經不太夠用了
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DRAM(Dynamic RAM)(動態隨機存取記憶體)&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Main Memory 的 RAM 最下層主要都以 DRAM 去做。&lt;/li&gt;
&lt;li&gt;DRAM 便宜(便宜簡單的電容)。&lt;/li&gt;
&lt;li&gt;同體積 DRAM 的容量是 SRAM 的好幾倍。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;何謂動態:
不穩定，使用 &amp;quot;Capacitance&amp;quot;(電容)的電量區別0和1來存資料。會漏電，要定期充電，否則資料會消失。
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
    &lt;img width=&#34;50%&#34; src=&#34;https://i.imgur.com/4lcNqUL.png&#34;/&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://kopu.chat/2017/05/06/dram%E3%80%81flash%E8%B2%B4%E5%88%B0%E7%82%B8%EF%BC%8C%E4%BD%A0%E9%82%84%E6%90%9E%E4%B8%8D%E6%87%82%E8%A8%98%E6%86%B6%E9%AB%94%E7%9A%84%E5%B7%AE%E7%95%B0%E5%97%8E%EF%BC%9F/#:~:text=Flash%EF%BC%88%E5%BF%AB%E9%96%83%E8%A8%98%E6%86%B6%E9%AB%94,%E4%B9%9F%E6%AF%94NAND%20Flash%20%E8%B2%B4%E3%80%82&#34;&gt;圖片來源&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SRAM(Static RAM)(靜態隨機存取記憶體)&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Cache 是 SRAM 的一種。&lt;/li&gt;
&lt;li&gt;SRAM 貴(貴又複雜的邏輯閘)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;何謂靜態:
穩定，使用 &amp;quot;flip-flop&amp;quot;(邏輯閘)斷路0通路1來存資料，速度快，不用定期充電。
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;-romread-only-memory唯讀記憶體&#34;&gt;@ ROM(Read-Only-Memory)(唯讀記憶體)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;通常存放 Bios、Bootstrap、 Operating System (作業系統)…等等不會被使用者變動的資料。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;ROM 是在製造的過程中，就把資料一併寫進 IC 裡，所以當一顆 ROM 完成的時候，它內部的資料就已經定型了。
如此一來，它就可以在不用電力供給的狀況下來儲存資料了，但是這種做法也會帶來一些限制，正如其名， ROM 內部的資料就只能夠被寫入一次，而且只能夠被讀取，不能改寫。
所以 ROM 內部放的通常都是不會被使用者所變動到的資料，比方說:Bios、Bootstrap、 Operating System (作業系統)…等等，
這些資料通常會在開機之後的第一時間被載入 Main Memory(RAM) ，接著傳給 CPU 執行。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PROM(Programmable ROM)(可邊程式唯讀記憶體)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;PROM 與 ROM 的差異就在於: PROM 可以在完成之後再把資料寫入，一樣還是只能寫一次，而且不能改。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;EPROM(Erasable Programmable ROM)(可抹除可編程式唯讀記憶體)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;可以進行的消除的 PROM。
不過修改時必須先將它從電腦上拆下來並用強紫外線來照射，所以必須要有一台專門的機器再才可以進行消除。
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;EEPROM(Electrically Erasable Programmable ROM)(電子抹除式可複寫唯讀記憶體)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;用電壓來進行消除的動作的，這讓它在進行修改時，可以不用從電腦上拆下來，也不用有專門的機器。
改善了 EPROM 所有的缺點，所以當 EEPROM 出現之後，很快就取代了所有的 EPROM。
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;-references-1&#34;&gt;@ References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@leo19866/cpu%E8%88%87%E8%A8%98%E6%86%B6%E9%AB%94-memory-%E7%9A%84%E9%81%8B%E4%BD%9C%E6%A9%9F%E5%88%B6-2e33bd9b0858&#34;&gt;CPU與記憶體(Memory)的運作機制&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-三-memory-hierarchy-記憶體階層-&#34;&gt;&lt;strong&gt;&amp;lt; 三. Memory Hierarchy: 記憶體階層 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;單純討論資料存取(存與取)，其實在電腦領域範疇，有各種存取。&lt;/p&gt;
&lt;p&gt;ex: 在 [一.CPU] 提到的 Register 也是存取，是在記憶體階層的最頂端。
ex: 在 [二.Memory] 提到的 DRAM, SRAM, ROM, Cache, SSD 也都是存取。
ex: Web 領域使用到的 Persistent Cookies, 也會是存在 HHD(Hard Disk Drive/硬碟)，硬碟也是一種存取，他在記憶體階層的底端。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所以可以廣義的說，其實都是記憶體，只是特性、結構、用法有所不同。
而平常溝通常說的記憶體:
我的認知大部分指的是 RAM 或是說 Main Memory。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;記憶體階層的快慢/容量大小:&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%A8%98%E6%86%B6%E9%AB%94%E9%9A%8E%E5%B1%A4&#34;&gt;(Wiki-記憶體階層)&lt;/a&gt;&lt;/p&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
    &lt;img width=&#34;50%&#34; src=&#34;https://i.imgur.com/KLuRrih.png&#34;/&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://kopu.chat/2017/05/06/dram%E3%80%81flash%E8%B2%B4%E5%88%B0%E7%82%B8%EF%BC%8C%E4%BD%A0%E9%82%84%E6%90%9E%E4%B8%8D%E6%87%82%E8%A8%98%E6%86%B6%E9%AB%94%E7%9A%84%E5%B7%AE%E7%95%B0%E5%97%8E%EF%BC%9F/#:~:text=Flash%EF%BC%88%E5%BF%AB%E9%96%83%E8%A8%98%E6%86%B6%E9%AB%94,%E4%B9%9F%E6%AF%94NAND%20Flash%20%E8%B2%B4%E3%80%82&#34;&gt;圖片來源&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;self-checklist&#34;&gt;Self Checklist:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is CPU.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is Memory.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is the difference between Volatile Memory and Non-volatile Memory。&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is the difference between RAM and ROM。&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is Register in CPU.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is the difference between HHD and SSD.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand Memory Hierarchy.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand basic work flow between memory and CPU inside.&lt;/li&gt;
&lt;/ul&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2022/" term="2022" label="2022" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/cpu/" term="cpu" label="cpu" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/memory/" term="memory" label="memory" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/cpu/" term="CPU" label="CPU" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/memory/" term="Memory" label="Memory" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/ram/" term="RAM" label="RAM" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">2021年度回顧</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/17/211224/2021%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%A7/" />
            <id>https://linooohon.com/blog/posts/17/211224/2021%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%A7/</id>
            <updated>2022-08-18T22:35:22&#43;09:00</updated>
            <published>2021-12-24T15:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;這一年發生滿多事，經歷去年退伍後的放空、探索。&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/17_211224/17_211224_無限自由.jpg&#34; width=&#34;50%&#34;/&gt;</summary>
            
                <content type="html">&lt;p&gt;這一年發生滿多事的，經歷去年退伍後的放空、探索。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;程式、攝影、音樂、女友、PyCon、疫情、面試&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- ![https://linooohon.com/blog](/blog/images/17_211224/17_211224.JPG) --&gt;
&lt;img src=&#34;https://linooohon.com/blog/blog/images/17_211224/17_211224_無限自由.jpg&#34; width=&#34;70%&#34; style=&#34;border-radius: 50%;&#34;/&gt;
&lt;p style=&#34;text-align:center; font-size: 14px&#34;&gt;無限自由音樂祭 - 南投 / Nov, 2021&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;2020-5月退伍後：&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;面試內湖培訓工程師 - 失敗。&lt;/li&gt;
&lt;li&gt;申請 Huli 轉職計畫 - 失敗。&lt;/li&gt;
&lt;li&gt;申請 Appworks School 面試後 - 失敗。&lt;/li&gt;
&lt;li&gt;自學作品做的不怎麼樣。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;2020-11/12月:&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;開始在 Build School 學網站開發，.NET、JS 為主。&lt;/li&gt;
&lt;li&gt;凱勛 Boy 被我挖進來一起學，這裡的故事也很瞎，結果他現在也是碼農界的型男🤣 繼續加油吧..有事我們互相幫忙。&lt;/li&gt;
&lt;li&gt;BS / 師大 / 輔大 ，三地跑..不知道自己在想什麼只想著把知識都塞進腦中。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;一月&#34;&gt;一月:&lt;/h3&gt;
&lt;p&gt;2020/9月 為了補基礎知識，自己跑去學校撒錢上課..&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;師大社會人士選讀 / 資料庫系統, 程式設計C語言 - 期末考完，結束。&lt;/li&gt;
&lt;li&gt;輔大社會人士選讀 / 離散數學 - 期末考完, 結束。
&lt;ul&gt;
&lt;li&gt;感謝很罩的交大學長和一位認真的學妹一起討論題目，現在學長可能已經出國深造了，學妹應該也正準備出去。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;人生難得每堂都到，努力拿 A+&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;N2 日檢合格 - 驚嚇。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;二月&#34;&gt;二月:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;每天努力學程式，就沒別的了。&lt;/li&gt;
&lt;li&gt;也是從這個時後從完全不喝咖啡，到有點上癮就是這個階段..我也覺得滿瞎的(我用 3倍券換全家冰美式 140 杯。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;三月&#34;&gt;三月:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;繼續衝，趕專題。&lt;/li&gt;
&lt;li&gt;這裡的日子很開心，一群夥伴一起衝，雖然有人烙跑..? 希望他一切都好。&lt;/li&gt;
&lt;li&gt;邊寫還是邊思索自己快樂嗎。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;四月&#34;&gt;四月:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;BS 專題發表，4 月底開始找工作。&lt;/li&gt;
&lt;li&gt;加入 PyCon TW 開發組，擔任菜鳥組員幫忙開發，很感謝 Matt 讓我加入。&lt;/li&gt;
&lt;li&gt;PyCon TW 原本還有加攝影組，可惜疫情沒實體了。&lt;/li&gt;
&lt;li&gt;跟凱勛說好了 BS 結束要一起去吃隔壁餐廳，但到 2021 尾都還沒去吃 😅。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;五月&#34;&gt;五月:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;開始在 PyCon TW 幫忙解一些小任務。&lt;/li&gt;
&lt;li&gt;找工作說順也順，說不順也不順。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;轉職工程師面試紀錄&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# offer get:
鴻海.可購樂 與部門主管聊得挺好的，
    - 也是剛開始找工作的前期就收到 offer, 那時在等其他公司面試，所以後來也拖到。吸收教訓，以後面試一次給它塞滿，不然公司也不會想等一個菜雞等那麼久..
NEC.統智科技
    - 也是很棒的體驗，報告專題，後來很快收到 offer, 也是因為正在等其他 offer, 所以後來先拒絕了
軒昂 / Innovation Lab, 說因為疫情後來又收回 offer.., 面試拖到後面讓我覺得有點不被信任，考量到之後如果真的進去組內的處境，所以後續就回絕了再面試，但我相信不是 HR 問題, HR 很讚。

所以搞到後面? 我沒工作了哈哈哈哈哈
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;# 自己決定不繼續
干城數碼: 電話相談
毅展實業: ERP / MES 
柏瑞醫
美商 IDTECH
雄獅
CMoney
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;# 沒下文, 無聲卡也體現出社會的現實與冷漠，大家都專注在自己，我可以理解哈哈哈🤧
# 同時也希望答應說不管怎樣會回覆的一定要回覆，不然不要說這種話，很奇怪 😵‍💫
緯德科技: 面一次說不管怎樣都會通知，也沒下文。
捷鵬: 主管其實人挺好得，也沒下文。
Mayo: 到公司面完沒下文。
零壹科技: 到公司面完沒下文。
Shopee: 電話聯絡後沒下文。
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;# 失敗
91APP: 電話語音談話，也是說不管怎樣都會通知，但還是我過了自己去問的才跟我說結果🤤
Rakuten: Codility 被刷掉
Tagtoo: 無聲
TSMC: 無聲
新芽: 有感謝
Ring: 做測驗 感謝，但後來有收到其他職缺資訊，我覺得滿好的
Qualcomm: 無聲
Intel: 無聲
Ａgoda: 無聲
AWS: 無聲
Binance: 無聲
Dell: 無聲
Microsoft: 有回覆說限學生身份
Mercari: 無聲
Line：無聲
StreetVoice: 無聲
Synology: 無聲

我只想看看這些公司怎麼看我，也是意料之中，Yeah! 再接再厲
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;# 忘了
一路發?
欣創?
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最後我去哪? 我去了 Sparkamplify, 那就是另一個故事了..&lt;/p&gt;
&lt;h3 id=&#34;六月&#34;&gt;六月:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;疫情來直接搞一波。&lt;/li&gt;
&lt;li&gt;在 PyCon 持續吸收良多，感謝組員組長。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;七月&#34;&gt;七月:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;開始在 SA 打 code。奮鬥。&lt;/li&gt;
&lt;li&gt;同時間國、高中老友也都進入另一個階段，有準備研究所畢業, 有經歷恐怖事件回鄉發展的，有準備公職的, 有想找機會從新竹來台北打拼的，也有各地跑的海底撈王子😇?&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;八月&#34;&gt;八月:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;繼續打 code。&lt;/li&gt;
&lt;li&gt;PyCon 的合作模式基本熟悉，也可以解一些進階的東西(其實對其他組員來說應該很簡單😳)？被分配到一些適合我難度的任務，感謝組長的任務分配。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;九月&#34;&gt;九月:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;9月底收到晴天霹靂的消息..說實在挺難過的，但也只能繼續撐。&lt;/li&gt;
&lt;li&gt;在這段期間也時常與老朋友聚聚。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;十月&#34;&gt;十月:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;開始幫黃花拍巡演，感謝表妹找我一起玩。&lt;/li&gt;
&lt;li&gt;感謝老友相借 Nikon 相機 &amp;gt;&amp;lt; 也祝他接下來的事情順利。&lt;/li&gt;
&lt;li&gt;PyCon 2021 延到 10 月在 Gather Town 上面辦。&lt;/li&gt;
&lt;li&gt;離不開音樂 Music is my life..?&lt;/li&gt;
&lt;li&gt;首訪台南 TCRC live。&lt;/li&gt;
&lt;li&gt;申請日本語學校簽證，希望不要因為疫情不通過啊..哥..我很久沒見我女朋友了...很慘&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;十一月&#34;&gt;十一月:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;參加音樂祭 - 南投/無限自由，露營挺好的。&lt;/li&gt;
&lt;li&gt;人身第一個刺青, 不明意義have fun / 致 25 歲 :&amp;gt;&lt;/li&gt;
&lt;li&gt;2021年後期跟許多喜歡音樂的人聊天，真心覺得堅持喜歡的事很重要，自己也在反省中?&lt;/li&gt;
&lt;li&gt;KKBOX 找我面試 - 失敗。
&lt;ul&gt;
&lt;li&gt;闖到技術面最後一關失敗，也知道自己的不足，軟體這條路真的不好走(後來才發現他們期望的面向其實不是我擅長的..當初一開始應該先問清楚的。&lt;/li&gt;
&lt;li&gt;這場面試至少也體現出 KKBOX 在選夥伴是很嚴謹且有條理，比起我以前的面試.. 以後會再試試的！&lt;/li&gt;
&lt;li&gt;後來也審視自己在過程中的不足，撇開能力是一板一眼的，我在對答上應該可以更流利，然後提問應該更關注在團隊的運作(問太少。&lt;/li&gt;
&lt;li&gt;被問簡單的 SQL 語法，沒寫出來，剛好那陣子在公司根本沒在寫 SQL 的東西都在整理 monorepo，直接 G，難啊...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;首訪 台中迴響。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;十二月&#34;&gt;十二月:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;參加音樂祭 - 台中/赤聲躁動。&lt;/li&gt;
&lt;li&gt;下背部腰部疼痛加劇..該看醫生了。&lt;/li&gt;
&lt;li&gt;把存款和紅包錢全部湊齊，買 A7C 加一顆 Tamron 28-200，迎接人生第一台全幅數位，這麼小真的太讚, 已破產。&lt;/li&gt;
&lt;li&gt;首訪 彰化福大祿昌。&lt;/li&gt;
&lt;li&gt;台北 Revolver 有去喝過酒，但去看演出幫忙拍照也是第一次。&lt;/li&gt;
&lt;li&gt;首次跟同事去聚餐唱歌，還有退役同事一起? 不好說&lt;/li&gt;
&lt;li&gt;Dann 哥找 BS 校友當 .Net Conference 2021 志工，也很久沒回去，就決定去幫忙記個 hackmd。&lt;/li&gt;
&lt;li&gt;公司聖誕交換禮物, 價錢標籤忘記撕?&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;關於寫軟體&lt;br&gt;
其實在當兵之前，就在想這件事了，也自己有心無心的摸了一下，但也沒啥進展。&lt;br&gt;
也不說太多心路歷程和什麼心得，總之大概就是從 去年 10,11月 開始投入軟體領域的學習，也是我這一年的主軸。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2021 一整年的回顧大概就是長這個樣子，短短的總結就是 &amp;quot;微充實&amp;quot;。&lt;br&gt;
可能有漏了一些東西，暫時回想不起來，之後會補，也可能不會。&lt;br&gt;
待改進的是，&lt;br&gt;
時間分配要再加強。&lt;br&gt;
說好的早睡沒做到，我應該改成早起，這樣就會逼自己早睡吧。&lt;br&gt;
自己感覺還是在低潮，說不上來，就是一種悶悶的感覺。&lt;br&gt;
終究還是不停的失敗，Keep going。&lt;br&gt;
繼續加油吧，期待高潮的來臨。&lt;br&gt;
還有保持健康, 家人平安！&lt;br&gt;
期望 2022 順順的。&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/life/" term="life" label="life" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/life/" term="Life" label="Life" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">觀影節錄</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/16/211221/%E8%A7%80%E5%BD%B1%E7%AF%80%E9%8C%84/" />
            <id>https://linooohon.com/blog/posts/16/211221/%E8%A7%80%E5%BD%B1%E7%AF%80%E9%8C%84/</id>
            <updated>2021-12-22T01:58:13&#43;09:00</updated>
            <published>2021-12-21T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;有感，片段節錄</summary>
            
                <content type="html">&lt;h6 id=&#34;20211221&#34;&gt;/2021.12.21&lt;/h6&gt;
&lt;p&gt;王二說的就是對的&lt;br/&gt;
張三說的就是錯的&lt;br/&gt;
我個人認為這個世界上沒有絕對的對和錯&lt;br/&gt;
只有你追求不一樣的東西&lt;br/&gt;
你比如說有的人追求的就是我開一好車 對吧&lt;br/&gt;
我的車比你好，然後我就開心，每天就開心&lt;br/&gt;
但是有的人追求的比如說有5萬塊錢&lt;br/&gt;
他就想去買一好車&lt;br/&gt;
我有五萬塊錢 我就想去學一直升飛機&lt;br/&gt;
你說誰對誰錯&lt;br/&gt;
這追求的東西都不一樣&lt;br/&gt;
所以說你做的事情也不一樣&lt;br/&gt;
真的是完全沒有對錯&lt;br/&gt;
大家不用特別多的去評判別人我覺得&lt;br/&gt;
因為&lt;br/&gt;
每一個人的生活背景&lt;br/&gt;
每一個人的教育背景&lt;br/&gt;
每一個人經歷的東西都是不一樣的&lt;br/&gt;
我覺得這個世界上就是因為有不同的聲音&lt;br/&gt;
有不同的人才精彩&lt;br/&gt;
這個世界才美麗&lt;br/&gt;
如果你想像一下&lt;br/&gt;
所有世界上的人想法都跟你一樣&lt;br/&gt;
你想什麼 他們也想什麼&lt;br/&gt;
你去做這件事 他們去做這件事&lt;br/&gt;
所有人就像機器人一樣&lt;br/&gt;
你覺得這個世界還精彩嗎 對不對&lt;br/&gt;
就是因為有不同的聲音才精彩&lt;br/&gt;
就是因為有不同的聲音 我們人類才能進步&lt;br/&gt;
我記得以前看了一個史瓦辛格還是誰做的這樣一個演講&lt;br/&gt;
對我觸動也滿大的&lt;br/&gt;
世界上 85% 的人 是不喜歡自己的工作的&lt;br/&gt;
85% 的人去工作的時候&lt;br/&gt;
早晨去工作的時候 就盼著幾點下班&lt;br/&gt;
我幹這個工作就是為了賺錢&lt;br/&gt;
下班趕緊回去幹我自己喜歡的事&lt;br/&gt;
你想想這有多麼的可怕 這太可怕了&lt;br/&gt;
我現在其實做很多事都不太會為明天考慮&lt;br/&gt;
也不是說完全不考慮&lt;br/&gt;
但是很大程度上 我不會為明天所考慮&lt;br/&gt;
恩..因為明天發生什麼 每個人都控制不了&lt;br/&gt;
我們其實人類是非常渺小的&lt;br/&gt;
我們..我個人認為 我們控制不了明天要發生什麼&lt;br/&gt;
就像這個有一首我非常喜歡的歌&lt;br/&gt;
平凡的一天裡唱的那樣&lt;br/&gt;
就是 怎麼唱的 那首歌是&lt;br/&gt;
從來不為明天去憂慮&lt;br/&gt;
因為今夜的風太和煦&lt;br/&gt;
恩 如果你回到宗教裡 也是聖經裡也說過&lt;br/&gt;
明天自有明天的憂慮 不必為明天所憂愁&lt;br/&gt;
活在當下吧&lt;br/&gt;
把自己 我覺得 做自己開心的事&lt;br/&gt;
做自己喜歡的事&lt;br/&gt;
最大程度上 不做自己不開心的事&lt;br/&gt;
我覺得這就好了&lt;br/&gt;
有自己的主見 有自己的 英文叫 critical thinking&lt;br/&gt;
我覺得這就是挺開心的人生了&lt;br/&gt;
今天說得也挺多&lt;br/&gt;
不知道大家有沒有得著&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;
- 節錄自: YouTube - 56BelowTV 零下56
&lt;/p&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/life/" term="life" label="life" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/life/" term="Life" label="Life" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">[Character set &amp; Encoding]Part2. Python 在編碼上的操作與例子</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/15/211212/Character_Encoding/Part2/" />
            <id>https://linooohon.com/blog/posts/15/211212/Character_Encoding/Part2/</id>
            <updated>2022-03-17T00:51:16&#43;09:00</updated>
            <published>2021-12-12T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;上一篇紀錄了編碼與 Unicode 的脈絡與區別，這裡紀錄一下在 Python 上的操作轉換&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/15_211212/15_211212_python字符編碼操作例子.png&#34; width=&#34;70%&#34;/&gt;</summary>
            
                <content type="html">&lt;p&gt;本篇紀錄一下，字符(字串)編碼在 Python 上的實現。&lt;/p&gt;
&lt;h2 id=&#34;前提&#34;&gt;前提:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;基本編碼知識&lt;/li&gt;
&lt;li&gt;理解 ASCII, Unicode, UTF-8 之間的差別&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;basic&#34;&gt;Basic:&lt;/h2&gt;
&lt;h3 id=&#34;1-python3-的字串是以什麼編碼&#34;&gt;1. Python3 的字串是以什麼編碼？&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;- UTF-8(實踐 Unicode)，所以 Python 支持多語言字串
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;嗨Hiおはよう&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 嗨Hiおはよう&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;2-ordstr_-得到對應的-unicode-碼點但是以十進位表示&#34;&gt;2. &lt;code&gt;ord(str_)&lt;/code&gt;: 得到對應的 Unicode 碼點，但是以十進位表示&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 65&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 97&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;林&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 26519&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;用途:
&lt;ol&gt;
&lt;li&gt;HTML Code&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-htmlembedded&#34; data-lang=&#34;htmlembedded&#34;&gt;# 65 -&amp;gt; &amp;amp;#65;
# 97 -&amp;gt; &amp;amp;#97;
# 26519 -&amp;gt; &amp;amp;#26519;
&amp;lt;!-- 使用方式 --&amp;gt;
&amp;lt;p&amp;gt;&amp;amp;#65;&amp;lt;/p&amp;gt; 
&amp;lt;p&amp;gt;&amp;amp;#97;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;amp;#26519;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-formatordstr_-x-得到對應的-unicode-碼點搭配-format-將碼點轉換成十六進位所以會得到-unicode-最普遍使用的十六進位表示碼點&#34;&gt;3. &lt;code&gt;format(ord(str_), &#39;x&#39;)&lt;/code&gt;: 得到對應的 Unicode 碼點，搭配 format(), 將碼點轉換成十六進位，所以會得到 Unicode 最普遍使用的十六進位表示碼點&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 41 -&amp;gt; U+0041&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 61 -&amp;gt; U+0061&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;林&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 6797 -&amp;gt; U+6797&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;🤢&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 1f922 -&amp;gt; U+1f922&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;📸&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 1f4f8 -&amp;gt; U+1f4f8&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;臺&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 81fa -&amp;gt; U+81fa&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;灣&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 7063 -&amp;gt; U+7063&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;用途:
&lt;ol&gt;
&lt;li&gt;得到真正的 Unicode Code Point(主流的十六進位碼 Unicode HEX)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# 41 -&amp;gt; U+0041
# 61 -&amp;gt; U+0061
# 6797 -&amp;gt; U+6797
# 1f922 -&amp;gt; U+1f922
# 1f4f8 -&amp;gt; U+1f4f8
# 81fa -&amp;gt; U+81fa
# 7063 -&amp;gt; U+7063
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;單純印出: &lt;code&gt;\u + 4碼&lt;/code&gt; or &lt;code&gt;超過4碼補零到8碼，並改成大寫U&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt; &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\u0041&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\u0061&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\u6797&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\U0001f922&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\U0001f4f8&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\u81fa&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\u7063&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\u81fa\u7063&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

 &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; A
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; a
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 林
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 🤢
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 📸
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 臺
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 灣
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 臺灣
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;HTML Code&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-htmlembedded&#34; data-lang=&#34;htmlembedded&#34;&gt; # 41 -&amp;gt; &amp;amp;#x41; or &amp;amp;#x0041;
 # 61 -&amp;gt; &amp;amp;#x61; or &amp;amp;#x0061;
 # 6797 -&amp;gt; &amp;amp;#x6797;
 # 1f922 -&amp;gt; &amp;amp;#x1f922;
 # 1f4f8 -&amp;gt; &amp;amp;#x1f4f8;

 &amp;lt;!-- 使用方式 --&amp;gt;
 &amp;lt;p&amp;gt;&amp;amp;#x41;&amp;lt;/p&amp;gt; 
 &amp;lt;p&amp;gt;&amp;amp;#x61;&amp;lt;/p&amp;gt;
 &amp;lt;p&amp;gt;&amp;amp;#x6797;&amp;lt;/p&amp;gt;
 &amp;lt;p&amp;gt;&amp;amp;#x1f922;&amp;lt;/p&amp;gt;
 &amp;lt;p&amp;gt;&amp;amp;#x1f4f8;&amp;lt;/p&amp;gt;

 &amp;lt;!-- 顯示 --&amp;gt;
 A
 a
 林
 🤢
 📸
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;CSS Code&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-htmlembedded&#34; data-lang=&#34;htmlembedded&#34;&gt;# 41 -&amp;gt; \41
# 61 -&amp;gt; \61
# 6797 -&amp;gt; \6797
# 1f922 -&amp;gt; \1f922
# 1f4f8 -&amp;gt; \1f4f8
&amp;lt;!-- 使用方式 --&amp;gt;

&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
   &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
   &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;&amp;gt;
   &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
   &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
   &amp;lt;style&amp;gt;
       .testing:hover:after {
           content: &#39;\1f4f8&#39;
       }
   &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
   &amp;lt;p&amp;gt;&amp;amp;#x41;&amp;lt;/p&amp;gt;
   &amp;lt;p&amp;gt;&amp;amp;#65;&amp;lt;/p&amp;gt;
   &amp;lt;p class=&amp;quot;testing&amp;quot;&amp;gt;&amp;amp;#97;&amp;lt;/p&amp;gt;
   &amp;lt;p&amp;gt;&amp;amp;#26519;&amp;lt;/p&amp;gt;
   &amp;lt;p&amp;gt;&amp;amp;#x1f922;&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-chrint_-給-unicode十進位得到對應字串&#34;&gt;4. &lt;code&gt;chr(int_)&lt;/code&gt;: 給 Unicode十進位，得到對應字串&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;65&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#A&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;97&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# a&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;26519&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 林&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;5-str_encodeencodingrule_-給字串然後取得對應編碼規則的編碼並以-bytes-形式顯示但如果是-ascii-的守備範圍那就不以-bytes-顯示而是直接顯示&#34;&gt;5. &lt;code&gt;str_.encode(encodingrule_)&lt;/code&gt;: 給字串然後取得對應編碼規則的編碼，並以 bytes 形式顯示，但如果是 ASCII 的守備範圍，那就不以 bytes 顯示，而是直接顯示。&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;臺灣&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;臺灣&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;big5&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;b&amp;#39;ABC&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;b&amp;#39;ABC&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;b&amp;#39;ABC&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;bytes&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;b&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\xe8\x87\xba\xe7\x81\xa3&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;b&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\xbb&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\xc6&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;W&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;6-bytes_decodeencodingrule_--給-bytes-然後取得對應編碼規則的字串&#34;&gt;6. &lt;code&gt;bytes_.decode(encodingrule_)&lt;/code&gt; : 給 bytes 然後取得對應編碼規則的字串。&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\xe8\x87\xba\xe7\x81\xa3&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\xbb&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\xc6&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;W&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;big5&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x82\xe0\x82\xb5\x82\xe0\x82\xb5&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;shift-jis&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ABC
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ABC
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;臺灣
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;臺灣
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;もしもし
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;7----coding-encodingrule_---&#34;&gt;7. &lt;code&gt;-*- coding: encodingrule_ -*-&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;此為&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Python2&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;時，申明此文件是以&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`UTF-8`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;編碼&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;基本上在&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Python3&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;已不需要，除非有特殊需求，有不同編碼在專案中應用，才會使用。不然&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Python3&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;就是&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`UTF-8`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;編碼&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;如果&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shebang&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;有出現，那&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;coding&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;就放第二行&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# -*- coding: cp1252 -*-&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;如果想要其他編碼可以自己申明&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;8-只要看到-x-就知道是-byte-的呈現一個-x碼號-就代表-1-byte&#34;&gt;8. 只要看到 &lt;code&gt;\x&lt;/code&gt; 就知道是 byte 的呈現，一個 &lt;code&gt;\x&lt;/code&gt;+&lt;code&gt;碼號&lt;/code&gt; 就代表 1 byte&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;臺灣&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# b&amp;#39;\xe8\x87\xba\xe7\x81\xa3&amp;#39;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 臺 佔 3 bytes \xe8 \x87 \xba&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 灣 佔 3 bytes \xe7 \x81 \xa3&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 所以臺灣共佔 6 bytes&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 那為什麼 6 bytes 請先了解 ASCII, Unicode, UTF-8 之間的關係，就會知道&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;9-rstr_&#34;&gt;9. &lt;code&gt;r&#39;str_&#39;&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;以 r 開頭的字串，可以完整呈現每個字符
ex:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;123\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;123\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;123&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;123&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 會是這樣:&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;123
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;10-特別釐清-unicode-的碼點與-utf-8-的編碼是兩回事看一下在-python-裡的範例分辨差別&#34;&gt;10. 特別釐清: Unicode 的碼點與 UTF-8 的編碼是兩回事，看一下在 Python 裡的範例，分辨差別。&lt;/h3&gt;
&lt;p&gt;(如果還不清楚編碼是什麼，可以先看這篇)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://linooohon.com/blog/blog/posts/14/211206/Character_Encoding字元編碼/Part1&#34;&gt;[Character set &amp;amp; Encoding]Part1.字元編碼 ASCII, Unicode, UCS, UTF&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;依照前面的這些範例，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先來看一下 &lt;code&gt;臺&lt;/code&gt; 的 Unicode 的碼點怎麼獲取?&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;臺&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;unicode_hex_code_point&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unicode_hex_code_point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 印出&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 81fa &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;81fa 就是&lt;code&gt;臺&lt;/code&gt;這個字 在 Unicode 的字符集定義中&lt;code&gt;臺&lt;/code&gt;的碼點 -&amp;gt; U+81fa&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;再來看一下 &lt;code&gt;臺&lt;/code&gt; 的 UTF-8 實現的編碼怎麼獲取&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;臺&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;bytes_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bytes_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 印出&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# e887ba&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;為了比較出差別，我這邊也把編碼過後的&lt;code&gt;臺&lt;/code&gt; 換成 16進位表示法，得到 e887ba
所以可以看出來，同樣都是 16 進位表示，81fa 和 e887ba，完全不一樣，如果能了解這裡的區別，編碼的基本概念我覺得就算清楚了，基本上就是 Unicode 的碼位歸碼位，在 UTF-8 的規則下，還會再進行一次編碼，所以兩者長的不一樣。&lt;/p&gt;
&lt;p&gt;同理，轉二進位比較也不一樣:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;臺&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;unicode_hex_code_point&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ord&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unicode_hex_code_point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 1000000111111010&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;bytes_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# b&amp;#39;\xe8\x87\xba&amp;#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bytes_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 111010001000011110111010&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;11-一些轉換補充&#34;&gt;11. 一些轉換補充&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;字符串轉 bytes, 16進位、2進位表示&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;臺&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;binary_converted&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ba_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytearray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ba_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# bytearray(b&amp;#39;\xe8\x87\xba&amp;#39;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ba_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;binary_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;binary_converted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;binary_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;binary_converted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# e887ba&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;臺&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytearray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytearray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 0b111010000b100001110b10111010&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;十進位數字轉成以二進位表示字串&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{0:b}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{0:b}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;0b1001
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;str&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;1001
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;str&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;1001
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;str&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;學習過程有參考網路資源，如紀錄中有雷同請見諒！&lt;/p&gt;
&lt;h3 id=&#34;12-references&#34;&gt;12. References:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/howto/unicode.html&#34;&gt;Python Docs - Unicode HOWTO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/reference/lexical_analysis.html#literals&#34;&gt;Python Docs - Literals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt; 上一篇 &amp;gt;&lt;/strong&gt;
&lt;a href=&#34;https://linooohon.com/blog/blog/posts/14/211206/Character_Encoding字元編碼/Part1&#34;&gt;[Character set &amp;amp; Encoding]Part1.字元編碼 ASCII, Unicode, UCS, UTF&lt;/a&gt;&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/encoding/" term="encoding" label="encoding" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/python/" term="python" label="python" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/encoding/" term="Encoding" label="Encoding" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/decoding/" term="Decoding" label="Decoding" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/unicode/" term="Unicode" label="Unicode" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/acsii/" term="ACSII" label="ACSII" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/utf/ucs/" term="UTF/UCS" label="UTF/UCS" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/os/" term="OS" label="OS" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/binary/" term="Binary" label="Binary" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/hexadecimal/" term="Hexadecimal" label="Hexadecimal" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/python/" term="Python" label="Python" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">[Character set &amp; Encoding]Part1.字元編碼 ASCII, Unicode, UCS, UTF</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/14/211206/Character_Encoding%E5%AD%97%E5%85%83%E7%B7%A8%E7%A2%BC/Part1/" />
            <id>https://linooohon.com/blog/posts/14/211206/Character_Encoding%E5%AD%97%E5%85%83%E7%B7%A8%E7%A2%BC/Part1/</id>
            <updated>2022-03-17T00:51:09&#43;09:00</updated>
            <published>2021-12-06T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;一直以來對幾個字元編碼相關的名詞都理解得有點模糊，區別不開，所以這次紀錄一下我理解的過程。&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/14_211206/14_211206_ASCII_Unicode_UCS_UTF.png&#34; width=&#34;70%&#34;/&gt;</summary>
            
                <content type="html">&lt;h2 id=&#34;-basic-&#34;&gt;&lt;strong&gt;&amp;lt; Basic &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;用歷史發生順序的角度來理解，我覺得挺好的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;先備知識&#34;&gt;先備知識:&lt;/h3&gt;
&lt;p&gt;電腦無法儲存那些我們人類識別的出來的東西，像是文字(letters), 數字(numbers), 圖片(pictures), 電腦完去無法儲存，電腦從始至終只能儲存bit並且拿來運作，而這個 bit 只會有兩種 value, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt;, 或是任何你認為可以代表這兩種值的名詞。並且電腦是通過「電」來運作，如果把「電」實體化(這裡只是我自己的比喻，專家請不要太認真，我只想幫助自己好理解電腦運作), 實際上「真正的 bit」就好像那些電碎片，時而出現，時而消失。而通常在電腦科學領域，我們常方便性的使用 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;0&lt;/code&gt; 去表現。所以一樣的編碼也是電腦科學領域，我們會常在文章裡看到 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;0&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;要認知的-2-件事實&#34;&gt;要認知的 2 件事實:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;電腦最早是美國那裡發明的，所以當然一開始就只針對英語字母做設定&lt;/li&gt;
&lt;li&gt;但軟體後來不是只有英語母語者在使用，而是世界上所有不同母語的人們做使用&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;那後來是怎麼做的..? 這裡就是重點&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;幾個名詞解釋&#34;&gt;幾個名詞解釋:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;encode: (verb) convert into a coded form.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;code: (noun) a system of words, letters, figures, or other symbols substituted for other words, letters, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;character set, charset: The set of characters that can be encoded. 實際上常用在同義於 &amp;quot;字符集&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;code page: A &amp;quot;page&amp;quot; of codes that map a character to a number or bit sequence. A.k.a. &amp;quot;the table&amp;quot;. 實際上常用在同義於 &amp;quot;字符集&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;string: A string is a bunch of items strung together. A bit string is a bunch of bits, like &lt;code&gt;01010011&lt;/code&gt;. A character string is a bunch of characters, like &lt;code&gt;Hi, there&lt;/code&gt;. 在幾個情況會出現的同義為 &amp;quot;字串/符號/字符/sequence&amp;quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假設目前有十進位數字 99，在不同進位下會長不一樣，但實際上是同一個東西。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Binary(二進位): &lt;code&gt;1100011&lt;/code&gt; in binary&lt;/li&gt;
&lt;li&gt;Octal(八進位): &lt;code&gt;143&lt;/code&gt; in octal&lt;/li&gt;
&lt;li&gt;Decimal(十進位): &lt;code&gt;99&lt;/code&gt; in decimal&lt;/li&gt;
&lt;li&gt;Hexadecimal(十六進位): &lt;code&gt;63&lt;/code&gt; in hexadecimal&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;16進位補充:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 規律為: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F&lt;/span&gt;
10進位 &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; -&amp;gt; 16進位 &lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;
10進位 &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt; -&amp;gt; 16進位 &lt;span class=&#34;m&#34;&gt;09&lt;/span&gt;
10進位 &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; -&amp;gt; 16進位 0A
10進位 &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt; -&amp;gt; 16進位 0F
10進位 &lt;span class=&#34;m&#34;&gt;16&lt;/span&gt; -&amp;gt; 16進位 &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;
10進位 &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; -&amp;gt; 16進位 &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;
10進位 &lt;span class=&#34;m&#34;&gt;26&lt;/span&gt; -&amp;gt; 16進位 1A
10進位 &lt;span class=&#34;m&#34;&gt;32&lt;/span&gt; -&amp;gt; 16進位 &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;
10進位 &lt;span class=&#34;m&#34;&gt;48&lt;/span&gt; -&amp;gt; 16進位 &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;
10進位 &lt;span class=&#34;m&#34;&gt;122&lt;/span&gt; -&amp;gt; 16進位 7A
10進位 &lt;span class=&#34;m&#34;&gt;144&lt;/span&gt; -&amp;gt; 16進位 &lt;span class=&#34;m&#34;&gt;90&lt;/span&gt;
10進位 &lt;span class=&#34;m&#34;&gt;160&lt;/span&gt; -&amp;gt; 16進位 A0
10進位 &lt;span class=&#34;m&#34;&gt;256&lt;/span&gt; -&amp;gt; 16進位 &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-理解方向與順序-&#34;&gt;&lt;strong&gt;&amp;lt; 理解方向與順序 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;名詞似乎有點混亂&#34;&gt;名詞似乎有點混亂:&lt;/h3&gt;
&lt;p&gt;應當從電腦科學的基本講起，當涉及到編碼我們必須了解字符集與編碼是兩件事。&lt;/p&gt;
&lt;p&gt;在討論編碼時，我們可以拆成:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;字符集(字元表/字元庫/字元列表/Character set/Charset/Character repertoire)&lt;/li&gt;
&lt;li&gt;編碼(編碼方式/儲存方案/Encoding/Character encoding)&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;從這兩個面向去理解會比較清楚。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那這是什麼意思呢?&lt;/p&gt;
&lt;p&gt;總體來說就是字符編碼(Character encoding)這件事我們要先知道今天是使用哪個字符集(想像成某種表)(Charset)去讓我們的符號對應表上定義的數字，然後我們再選用哪種編碼方案(Encoding)把表上對應到的數字透過當前編碼方案去儲存到電腦中。&lt;/p&gt;
&lt;h3 id=&#34;討論順序&#34;&gt;討論順序:&lt;/h3&gt;
&lt;ol start=&#34;0&#34;&gt;
&lt;li&gt;不去探討久遠的 EBCDIC&lt;/li&gt;
&lt;li&gt;ASCII 的出現&lt;/li&gt;
&lt;li&gt;Unicode 的出現&lt;/li&gt;
&lt;li&gt;UCS-2, UCS-4&lt;/li&gt;
&lt;li&gt;UTF-8, UTF-16&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;-ascii-的出現-&#34;&gt;&lt;strong&gt;&amp;lt; ASCII 的出現 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;「ASCII」(American Standard Code for Information Interchange)，我覺得要了解編碼，大概可以從這裡開始。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因為要讓電腦儲存並處理文字，所以最早美國出現 ASCII 來解決。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;1-先討論字符集&#34;&gt;1. 先討論字符集:&lt;/h3&gt;
&lt;p&gt;所謂字符集，就好像是用另一種形式呈現同樣的東西，在編碼裡我們常把符號對應到特定數字去代表這個符號，而在 ASCII 的字符集很直覺的把文字轉換成人類日常生活理解的十進位數字。舉例: &amp;quot;A&amp;quot; 變成十進位數字 &lt;code&gt;65&lt;/code&gt;, 把 &amp;quot;B&amp;quot; 變成十進位數字 &lt;code&gt;66&lt;/code&gt;, 把 &amp;quot;a&amp;quot; 變成十進位數字 &lt;code&gt;97&lt;/code&gt;，把 &amp;quot;z&amp;quot; 變成十進位數字 &lt;code&gt;122&lt;/code&gt;，而其實這樣的對應方式就像是有一張表，在表上清楚寫明所有文字對應的十進位數字是什麼，同時這個十進位數字稱作它的碼位(碼點)(像是一種編號)，也可以稱作「ASCII Code」（有些是寫以二進位表示時是 ASCII Code）。&lt;/p&gt;
&lt;p&gt;在 ASCII 有兩種版本:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一種版本 &lt;code&gt;ASCII&lt;/code&gt; : 從十進位數字 0 - 127，總共 128 個&lt;/li&gt;
&lt;li&gt;第二種版本 &lt;code&gt;EASCII&lt;/code&gt;: 從原本的 0 - 127, 往後再加 128 - 255，總共 256 個&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;裡面的十進位數字內容大概像這樣:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;控制字符: 0 - 31 和 127&lt;/li&gt;
&lt;li&gt;可顯示字符(一些常用符號，包括數字符號0到9(非真正十進位數字，因為如果是十進位數字 0 到 9，就不用討論編碼了，直接轉成二進位即可，這邊是圖案文字的 0 到 9)): 32 - 64&lt;/li&gt;
&lt;li&gt;可顯示字符(大寫英文字母 A - Z): 65 - 90&lt;/li&gt;
&lt;li&gt;可顯示字符(一些符號): 91 - 96&lt;/li&gt;
&lt;li&gt;可顯示字符(小寫英文字母 a - z): 97 - 122&lt;/li&gt;
&lt;li&gt;可顯示字符(一些符號): 123 - 126&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再來是追加了後面的第二種版本也稱作 &lt;code&gt;EASCII&lt;/code&gt; (Extended ASCII):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;擴充字符集(Extended Character Set)追加了一些擴充符號: 128 - 255&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;這邊也許會很混亂 &lt;code&gt;ASCII Code&lt;/code&gt; 到底指的是上面說的十進位數字，還是以二進位表示也是 ASCII Code，還是以十六進位表示才算是 ASCII Code, 我覺得這邊只要理解都是同樣的東西，只是表示不同，舉個例子:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;字符 &lt;code&gt;A&lt;/code&gt; 依照 ASCII 的字符集:
&lt;ul&gt;
&lt;li&gt;在2進位會是: &lt;code&gt;01000001&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在10進位會是: &lt;code&gt;65&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在16進位會是: &lt;code&gt;41&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在 HTML 10進位的 Entity Number 會是: &lt;code&gt;&amp;amp;#65;&lt;/code&gt; -&amp;gt; 試著在 charset=UTF-8 (UTF-8 涵蓋 ASCII，後面會說到)的 html page render &lt;code&gt;&amp;lt;p&amp;gt;&amp;amp;#65;&amp;lt;/p&amp;gt;&lt;/code&gt; 你會發現會顯示 A&lt;/li&gt;
&lt;li&gt;在 HTML 16進位的 Entity Number 會是: &lt;code&gt;&amp;amp;#x0041;&lt;/code&gt; -&amp;gt; 也可以試試 &lt;code&gt;&amp;lt;p&amp;gt;&amp;amp;#x0041;&amp;lt;/p&amp;gt;&lt;/code&gt;，也可以顯示 A&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;參考這個截圖會了解:
&lt;img src=&#34;https://linooohon.com/blog/blog/images/14_211206/14_211206_ASCII_Table.png&#34; alt=&#34;ASCII Table, linooohon.com&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以只是表示的問題，有時候當聽到 「A 是 &lt;code&gt;65&lt;/code&gt; 」精確一點要說，A 在 ASCII 的規則下以十進位表示時是 &lt;code&gt;65&lt;/code&gt;, 記得在不同進制下表示就會不一樣。&lt;/p&gt;
&lt;h3 id=&#34;2-再來是編碼方式&#34;&gt;2. 再來是編碼方式:&lt;/h3&gt;
&lt;p&gt;ASCII的編碼方式很簡單，直接把對應的十進位數字轉成二進位交給電腦儲存與處理。
邏輯就像是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A : ASCII Code(Decimal) &lt;code&gt;65&lt;/code&gt; =&amp;gt; Binary &lt;code&gt;01000001&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;B : ASCII Code(Decimal) &lt;code&gt;66&lt;/code&gt; =&amp;gt; Binary &lt;code&gt;01000010&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;a : ASCII Code(Decimal) &lt;code&gt;97&lt;/code&gt; =&amp;gt; Binary &lt;code&gt;01100001&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以基本 128 個的 ASCII Code 對應的二進位範圍會是:
&lt;code&gt;0000 0000&lt;/code&gt; ~ &lt;code&gt;0111 1111&lt;/code&gt; : 可以發現只使用到 7 bits，左邊第一個一定是 &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;擴充款的需要 256 個 ASCII Code 才會讓左邊第 8 bit 為 1。&lt;/p&gt;
&lt;h3 id=&#34;3-ascii-小總結&#34;&gt;3. ASCII 小總結:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;ASCII 是什麼?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Answer: 一個早期出現的編碼規則(包括定義字符集與定義編碼方式)，有一張表定義了符號如何轉換成十進位，基本款是 ASCII Code: 0 - 127，共 128 個符號而已，而編碼方式是把十進位直接轉成二進位最多就只需要 1 byte 去儲存在電腦。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;特徵:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;字符集: 有定義字符集(編碼表)，讓每個符號有對應的 ASCII Code(十進位數字), 128個 或 256個。&lt;/li&gt;
&lt;li&gt;編碼方式: 把 ASCII Code(十進位數字) 直接轉成二進位儲存，範圍是 7 bits 或 8 bits。&lt;/li&gt;
&lt;li&gt;缺點: 支援符號非常有限，只能 Cover 到英語系字母。&lt;/li&gt;
&lt;li&gt;ASCII 是一個同時定義字符集，也定義編碼方式的編碼系統 (之所以這樣說是因為你會發現對於 Unicode 的實踐，後期的 Unicode 就偏向只是字符集，它必須搭配其他編碼方式，我們常用的 UTF-8 就是其中一種編碼方式，後面會說到)。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://sticksandstones.kstrom.com/appen.html&#34;&gt;http://sticksandstones.kstrom.com/appen.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/ASCII/309296&#34;&gt;https://baike.baidu.com/item/ASCII/309296&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/ASCII&#34;&gt;https://zh.wikipedia.org/wiki/ASCII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wibibi.com/info.php?tid=ASCII_Code_Table&#34;&gt;https://www.wibibi.com/info.php?tid=ASCII_Code_Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.w3.org/html5/html-author/charref&#34;&gt;https://dev.w3.org/html5/html-author/charref&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itread01.com/content/1549477827.html&#34;&gt;https://www.itread01.com/content/1549477827.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-unicode-的出現-&#34;&gt;&lt;strong&gt;&amp;lt; Unicode 的出現 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;之所以出現，是經過對 ASCII 的理解，會發現他能支援的符號非常有限，於是後來每個國家都開始對 ASCII 做擴充去支援自己語系，或是設計自己語系的編碼方式，這時候世界就有數不清的不同編碼方式，發生了一個問題那就是當網路愈來愈普及，資訊交流愈來愈頻繁，不同的編碼方式，會造成許多資料轉換的時間成本，溝通成本變高，於是 Unicode 就出現了，他幾乎把全世界的符號都包含進去，它定義了字符集(Character set), 但編碼方式卻有很多種，這個是要釐清的地方，所以當我們說 Unicode編碼，必須要知道我用的是 Unicode 字符集，但編碼方式必須再問清楚是用哪一套編碼方式去處理 Unicode?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Unicode 被廣泛使用之前，一開始是有兩個組織在試著建立全世界統一的字符集，分別是「國際標準化組織(ISO)出的 &lt;code&gt;ISO 10646&lt;/code&gt; 和 「Unicode Consortium」出的 &lt;code&gt;Unicode&lt;/code&gt; ，後來他們也有合作把兩者合併造就現在的 &lt;code&gt;Unicode&lt;/code&gt;, 而 &lt;code&gt;ISO 10646&lt;/code&gt; 還是有單獨存在的，只是後來 &lt;code&gt;Unicode&lt;/code&gt; 比較被廣泛應用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;0-unicode-字符集&#34;&gt;0. Unicode 字符集:&lt;/h3&gt;
&lt;p&gt;在 Unicode 字符集裡，所以符號都可以對應的一個特定數字，這個數字稱為&lt;code&gt;碼點(碼位)(Code Point)&lt;/code&gt;，這跟 ASCII 的 ASCII Code 是同一個概念，只是他們規則不同，在 ASCII 只有 128 個符號要處理，可以直接對應一個約定好的十進位數字就好，但是在 Unicode 因為需要處理全世界所有符號，它的做法是先把它分為17個平面(plane)(就很像上學分班(分群)的概念)，每個平面包含 65536 個碼點(code point)，所有整個 17 個平面的碼點(至今為止有定義的範圍)表示為:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;U+xx0000&lt;/code&gt; ~ &lt;code&gt;U+xxFFFF&lt;/code&gt; ，其中 xx 表示16進制值從 &lt;code&gt;00₁₆ - 10₁₆&lt;/code&gt;，共 17 個平面。&lt;/p&gt;
&lt;h3 id=&#34;1-unicode-是單純字符集還是也包含編碼規則&#34;&gt;1. Unicode 是單純字符集，還是也包含編碼規則?&lt;/h3&gt;
&lt;p&gt;有些人覺得它只是字符集，有些人覺得它也包含對應的編碼規則，以我的理解， Unicode 後來因為 UTF-8 和 UTF-16 的出現(後面會提到)，就比較像是一個字符集，只是在最一開始的時候的確比較像字符集與編碼規則一起(UCS-2, UCS-4 的話)，它的編碼規則的確就像是 ASCII 的編碼規則一樣簡單，直接把對應的 code point(16進位)轉成2進位存到電腦裡，這也就是最一開始的編碼規則 UCS-2(由 ISO 提出)，它的轉換方式是把 code point 都轉成 2 bytes，它涵蓋了 65536 個字符，也是後面會提到的 Unicode 的第一平面(BMP)。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;但 UCS-2 的 code point 為 &lt;code&gt;U+0000&lt;/code&gt; ~ &lt;code&gt;U+FFFF&lt;/code&gt;，共涵蓋 65536 個字符，發現所囊括的字符太少，於是乎後來又有 UCS-4，它的規則就是 code point 一定轉成 4 bytes，這時候也會發現不是每個字都要用到 4 bytes(原本英文字母在 ASCII 用 1 byte 用得好好的), 所以這個編碼規則也挺浪費的，所以之後也出現其他種編碼方式，底下講一下各個實現 Unicode 的編碼方式。&lt;/p&gt;
&lt;h3 id=&#34;2-實踐-unicode編碼-常見出現形式&#34;&gt;2. 實踐 Unicode編碼 常見出現形式:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;以 U+開頭，後面接 16進位 4碼Code Point, 或 6碼Code Point&lt;/li&gt;
&lt;li&gt;以 0x開頭, 後面接 16進位 4碼Code Point, 或 6碼Code Point&lt;/li&gt;
&lt;li&gt;以 \x開頭，後面接 16進位 2碼Code Point，並多個連續出現，一個 &lt;code&gt;\x&lt;/code&gt; 通常就代表是 1 byte&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-實現-unicode-字符集的編碼方式儲存方式&#34;&gt;3. 實現 Unicode 字符集的編碼方式/儲存方式&lt;/h3&gt;
&lt;h4 id=&#34;ucs-2&#34;&gt;UCS-2:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;屬於固定長的編碼格式&lt;/li&gt;
&lt;li&gt;編碼範圍：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;`U+0000` ~ `U+FFFF`
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;等於是字符集與編碼合在一起:
&lt;ul&gt;
&lt;li&gt;字符集: 這時候 Unicode字符集 就是只有 65536 個, &lt;code&gt;U+0000&lt;/code&gt; ~ &lt;code&gt;U+FFFF&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;編碼方式: 這時候的編碼方式也是直接 &lt;code&gt;U+xxxx&lt;/code&gt; , 直接轉二進制儲存&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;UCS-2 相對於其它編碼方式算是最早期實現 Unicode 的編碼方式。
ISO 出的 2 bytes 編碼方式，可以編 65536 個大部分世界常用的字符，他不能包含完整的 Unicode 字符集，也因此後來出現了 &lt;code&gt;UTF-16&lt;/code&gt;，它涵蓋了 UCS-2 可以處理的 Unicode 第一平面(Basic Multilingual Plane，簡稱 BMP) 的 65536 個 code point，但同時也支援其他平面的編碼(Supplementary Planes)，所以可以說 UTF-16 可以完整支援 Unicode 所有碼點的編碼。&lt;/p&gt;
&lt;h4 id=&#34;ucs-4&#34;&gt;UCS-4:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;屬於固定長的編碼格式&lt;/li&gt;
&lt;li&gt;編碼範圍：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;`U+00000000` ~ `U+7FFFFFFF`
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;等於是字符集與編碼合在一起:
&lt;ul&gt;
&lt;li&gt;字符集: 這時候 Unicode字符集就是它定義的 &lt;code&gt;U+00000000&lt;/code&gt; ~ &lt;code&gt;U+7FFFFFFF&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;編碼方式: 這時候的編碼方式也是直接 &lt;code&gt;U+xxxxxxxx&lt;/code&gt; , 直接轉二進制儲存&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因為 UCS-2 只包含第一平面，有所不足而出現。
ISO 出的 4 bytes 編碼方式, 從 &lt;code&gt;U+00000000&lt;/code&gt; ~ &lt;code&gt;U+7FFFFFFF&lt;/code&gt;，可以編 20多億個字符，但後來發現實際使用範圍不會超過 &lt;code&gt;U+10FFFF&lt;/code&gt;，所以後面 &lt;code&gt;UTF-32&lt;/code&gt; 出現了，它就只會到 &lt;code&gt;U+0010FFFF&lt;/code&gt; ，所以可以說 UTF-32 是 UCS-4 的子集，&lt;/p&gt;
&lt;h4 id=&#34;utf-16&#34;&gt;UTF-16:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;屬於可變長的編碼格式
如上面所說，它涵蓋 UCS-2 的 2 bytes 編碼方式，但也支援其餘平面的編碼，所以 UTF-16 的編碼範圍是 2 bytes 或 4 bytes。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;2 bytes 時直接轉轉二進位, 4 bytes 時需像 UTF-8 一樣做編碼轉換:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;規則1. 2 bytes 時直接轉二進位
0x0000 0000 - 0x0000 FFFF	xxxxxxxx xxxxxxxx&lt;/li&gt;
&lt;li&gt;規則2. 4 bytes 時要經過再次編碼
0x0001 0000 - 0x0010 FFFF	110110xx xxxxxxxx 110111xx xxxxxxxx&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;utf-32&#34;&gt;UTF-32:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;屬於固定長的編碼格式
如上面所說，它是 UCS-4 的子集，也就是說它也能涵蓋所有 Unicode 的編碼，但是它的編碼範圍永遠使用 4 bytes，規則就是直接把碼位轉成二進位，不足 4 bytes, 就補滿 0 就對了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ex: A -&amp;gt; &lt;code&gt;U+0041&lt;/code&gt; 以 UTF-32 來說就是 &lt;code&gt;0000 0041&lt;/code&gt; 轉成二進位就是 &lt;code&gt;1000001&lt;/code&gt;
那 UTF-32 下，就會以下面這個形式存進去電腦&lt;/p&gt;
&lt;p&gt;&lt;code&gt;00000000 00000000 00000000 01000001&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;utf-8&#34;&gt;UTF-8:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;屬於可變長的編碼格式
之所以出現，你會發現 UCS-2 支援不足; UCS-4 和 UTF-32 都固定需要 4 bytes 太浪費了; UTF-16 最少也需要 2 bytes，會發現這些編碼對於原本就只需要 1 byte 的 ASCII 編碼的人們而言太浪費空間了，所以 UTF-8 出現了，它兼容 ASCII 的編碼，屬於 ASCII 的編碼就照舊使用 1 byte，超過再來使用 2 bytes 到 4 bytes，所以 UTF-8 的編碼範圍從 1 byte - 4 bytes&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;UTF-8 第一個規則:&lt;/strong&gt;
對於碼點轉換成二進位後只有 1 byte 的符號，編碼方式與 ASCII 一樣&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UTF-8 第二個規則:&lt;/strong&gt;
對於 n bytes 的符號(n &amp;gt; 1)，第1個 byte 的前 n 位都設為 1, 第 n + 1 位設為 0，後面 byte 的前兩位一律都設為 10，最後再把沒有補上的 bit 由碼點轉換後的二進位由最右邊依序補上。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;對應的四個區間如下，基本 UTF-8 會把 code point(16進制) 以 4 bytes(UCS-4, UTF-32 的方式)去看然後來轉換達到伸縮自如的 1 byte - 4 bytes 的彈性空間:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;碼點: &lt;code&gt;0000 0000 ~ 0000 007F&lt;/code&gt;
-&amp;gt; 轉換後為 1 byte，所以會是 &lt;code&gt;0xxxxxxx&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;碼點: &lt;code&gt;0000 0080 ~ 0000 07FF&lt;/code&gt;
-&amp;gt; 轉換後為 2 bytes，所以會是 &lt;code&gt;110xxxxx 10xxxxxx&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;碼點: &lt;code&gt;0000 0800 ~ 0000 FFFF&lt;/code&gt;
-&amp;gt; 轉換後為 3 bytes，所以會是 &lt;code&gt;1110xxxx 10xxxxxx 10xxxxxx&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;碼點: &lt;code&gt;0001 0000 ~ 0010 FFFF&lt;/code&gt;
-&amp;gt; 轉換後為 4 bytes，所以會是 &lt;code&gt;11110xxx 10xxxxxx 10xxxxxx 10xxxxxx&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;可能還有點模糊直接給一個中文字的-utf-8-舉例&#34;&gt;可能還有點模糊：直接給一個中文字的 UTF-8 舉例&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;記得 UTF, UCS 都是在 Unicode 的基礎上&lt;/li&gt;
&lt;li&gt;都用 &lt;code&gt;\u&lt;/code&gt;, &lt;code&gt;U+&lt;/code&gt;, &lt;code&gt;0x&lt;/code&gt;, &lt;code&gt;\x&lt;/code&gt;, 搭配 16 進位&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ex:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;王&lt;/code&gt; 的 code point 是 0x0000 738B&lt;/li&gt;
&lt;li&gt;轉成二進制是: &lt;code&gt;0000 0000 0000 0000 0111 0011 1000 1011&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;並且發現 &lt;code&gt;王&lt;/code&gt; 的 code point 是在第三區間 &lt;code&gt;0000 0800 ~ 0000 FFFF&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;於是寫下第三區間的編碼樣式 &lt;code&gt;1110xxxx 10xxxxxx 10xxxxxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;接著把 step.2 的二進制形式與 step.4 的第三區間編碼樣式融合，填滿叉叉，從右到左&lt;/li&gt;
&lt;li&gt;最後結果為 &lt;code&gt;1110 0111 1000 1110 1000 1011&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;轉成16進制看一下(通常在寫程式都會看到&lt;code&gt;\x&lt;/code&gt;開頭的16進制表示), &lt;code&gt;0xe7 0x8e 0x8b&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;王&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 印出&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# b&amp;#39;\xe7\x8e\x8b&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/14_211206/14_211206_utf8_%E7%8E%8B%E7%AF%84%E4%BE%8B.png&#34; alt=&#34;ASCII Table, linooohon.com&#34;&gt;&lt;/p&gt;
&lt;p&gt;我的姓氏 &amp;quot;林&amp;quot; 的話就會是這樣:
&lt;img src=&#34;https://linooohon.com/blog/blog/images/14_211206/14_211206_utf8_%E6%9E%97%E7%AF%84%E4%BE%8B.png&#34; alt=&#34;ASCII Table, linooohon.com&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;總節&#34;&gt;總節:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;編碼方式都是不經過再次編碼處理，直接從 Code Point 轉成二進位的有:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ASCII&lt;/li&gt;
&lt;li&gt;UCS-2&lt;/li&gt;
&lt;li&gt;UCS-4&lt;/li&gt;
&lt;li&gt;UTF-16 在 2bytes 的時候&lt;/li&gt;
&lt;li&gt;UTF-32 (不夠會補滿到 4 bytes)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;會經過判斷再次編碼調整的有:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UTF-8&lt;/li&gt;
&lt;li&gt;UTF-16 在 4bytes 的時候&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UCS(Universal Character Set), UTF(Unicode/UCS Transformation Format)，兩者其實都是在實踐 Unicode，UCS 的概念其實偏像字符集，因為UCS的編碼就只是直接轉二進位，但廣義來說，也都是一種編碼方式，所以在這篇我都是歸在編碼方式，字符集就維持一種 Unicode，比較細的可以自行研究。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UTF-8 在 2021 年的現在非常常見，因為它是可變長度也無痛兼容 ASCII。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中文在 UTF-8 編碼下需要 3 bytes，所以有時看到三個連續 &lt;code&gt;\x** \x** \x**&lt;/code&gt; 這樣的東西，就可以很快的警覺有可能是處理資料時有中文字！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;而相對來說繁體中文的 &lt;code&gt;Big5編碼&lt;/code&gt; 只需要 2 bytes, 中國的&lt;code&gt;GB編碼&lt;/code&gt; 也只需要 2 bytes&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;補充細節可以自行研究&#34;&gt;補充細節可以自行研究:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;BOM(Byte Order Mark)讓編碼方式可以細分為:
&lt;ul&gt;
&lt;li&gt;UTF-32BE&lt;/li&gt;
&lt;li&gt;UTF-32LE&lt;/li&gt;
&lt;li&gt;UTF-16BE&lt;/li&gt;
&lt;li&gt;UTF-16LE&lt;/li&gt;
&lt;li&gt;UTF-8 No BOM&lt;/li&gt;
&lt;li&gt;UTF-8 with BOM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/14_211206/14_211206_BOM.png&#34; alt=&#34;ASCII Table, linooohon.com&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BOM 可參考這篇還不錯:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ignatius1895.pixnet.net/blog/post/71034743-%E5%AD%97%E5%85%83%E7%B7%A8%E7%A2%BC%E8%88%87%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%28%E4%BA%94%29%EF%BC%9Aunicode%E7%9A%84%E7%B7%A8%E7%A2%BC&#34;&gt;https://ignatius1895.pixnet.net/blog/post/71034743-%E5%AD%97%E5%85%83%E7%B7%A8%E7%A2%BC%E8%88%87%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%28%E4%BA%94%29%EF%BC%9Aunicode%E7%9A%84%E7%B7%A8%E7%A2%BC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;UTF-16 在 4 bytes 的處理有「前導代理」(Leading Surrogate)與「後尾代理」(Trail Surrogate)的規則細節。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;下篇寫一些在 Code 上面的情況與轉換。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;self-checklist&#34;&gt;Self Checklist:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is &lt;code&gt;Encoding&lt;/code&gt;, &lt;code&gt;Character Encoding&lt;/code&gt;, &lt;code&gt;Decoding&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is Binary, Decimal, Hexadecimal, Octal System.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is &lt;code&gt;ASCII&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is the difference between &lt;code&gt;ASCII&lt;/code&gt;, &lt;code&gt;Unicode&lt;/code&gt;, &lt;code&gt;UCS&lt;/code&gt; and &lt;code&gt;UTF&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is the difference between &lt;code&gt;Character set&lt;/code&gt;, &lt;code&gt;Code Point&lt;/code&gt; and &lt;code&gt;Encoding Process&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;references&#34;&gt;References:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;必看:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/&#34;&gt;https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kunststube.net/encoding/&#34;&gt;https://kunststube.net/encoding/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其他:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.chi2ko.com/tool/CJK.htm&#34;&gt;http://www.chi2ko.com/tool/CJK.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html&#34;&gt;http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kevin.hwai.edu.tw/~kevin/material/JAVA/Sample2016/ASCII.htm&#34;&gt;http://kevin.hwai.edu.tw/~kevin/material/JAVA/Sample2016/ASCII.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://utf8everywhere.org/&#34;&gt;http://utf8everywhere.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.hubspot.com/website/what-is-utf-8&#34;&gt;https://blog.hubspot.com/website/what-is-utf-8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/ASCII/309296&#34;&gt;https://baike.baidu.com/item/ASCII/309296&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.binary-code.org/binary/8bit/00111001/&#34;&gt;https://www.binary-code.org/binary/8bit/00111001/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.convertworld.com/zh-hant/numerals/hexadecimal.html&#34;&gt;https://www.convertworld.com/zh-hant/numerals/hexadecimal.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/Unicode%E5%AD%97%E7%AC%A6%E5%B9%B3%E9%9D%A2%E6%98%A0%E5%B0%84&#34;&gt;https://zh.wikipedia.org/wiki/Unicode%E5%AD%97%E7%AC%A6%E5%B9%B3%E9%9D%A2%E6%98%A0%E5%B0%84&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1gZ4y1x7p7?from=search&amp;amp;seid=2657693919162769058&amp;amp;spm_id_from=333.337.0.0&#34;&gt;https://www.bilibili.com/video/BV1gZ4y1x7p7?from=search&amp;amp;seid=2657693919162769058&amp;amp;spm_id_from=333.337.0.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/302200063&#34;&gt;https://www.zhihu.com/question/302200063&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt; 下一篇Part2 &amp;gt;&lt;/strong&gt;
&lt;a href=&#34;https://linooohon.com/blog/blog/posts/15/211212/Character_Encoding/Part2&#34;&gt;[Character set &amp;amp; Encoding]Part1.字元編碼 ASCII, Unicode, UCS, UTF&lt;/a&gt;&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/encoding/" term="encoding" label="encoding" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/encoding/" term="Encoding" label="Encoding" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/decoding/" term="Decoding" label="Decoding" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/unicode/" term="Unicode" label="Unicode" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/acsii/" term="ACSII" label="ACSII" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/utf/ucs/" term="UTF/UCS" label="UTF/UCS" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/os/" term="OS" label="OS" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/binary/" term="Binary" label="Binary" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/hexadecimal/" term="Hexadecimal" label="Hexadecimal" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">[CI/CD]幫 Data Team 設置 GitLab 的 CI/CD</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/13/211124/GitLab_CI-CD/" />
            <id>https://linooohon.com/blog/posts/13/211124/GitLab_CI-CD/</id>
            <updated>2022-03-17T00:50:53&#43;09:00</updated>
            <published>2021-11-24T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;最近在公司開始整理一些 Legacy Code，在標記的同時，也開始設置 Python 版的 Monorepo，這裡紀錄一下目前幫 Data Team 初期設置的 GitLab CI/CD&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/13_211124/13_211124_gitlabcicd.png&#34; width=&#34;20%&#34;/&gt;</summary>
            
                <content type="html">&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/13_211124/13_211124_gitlabcicd.png&#34; alt=&#34;https://linooohon.com/blog&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-需求-&#34;&gt;&lt;strong&gt;&amp;lt; 需求 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;gitlab-cicd&#34;&gt;GitLab CI/CD&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;設置 Data Team monorepo 在 GitLab 的 CI/CD ( 包括 Crawler - Zyte Scrapy 的 Deploy 設置)&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;-注意-&#34;&gt;&lt;strong&gt;&amp;lt; 注意 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;GitLab 需要設定 &lt;code&gt;runner&lt;/code&gt; ( 一般在 local 自己設定也可以啟動，而以目前公司為例，必須進到 AWS EC2 裡設定)。&lt;/li&gt;
&lt;li&gt;為了設定 Python環境，目前我先使用 &amp;quot;Docker&amp;quot; executor 的 runner，如此可以設定目標版本，&lt;code&gt;python:3.9.5&lt;/code&gt;，(還有其他種的 executor 像是 &amp;quot;shell&amp;quot; 等等.. &lt;a href=&#34;https://docs.gitlab.com/runner/executors/&#34;&gt;GitLab Executors&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;runner&lt;/code&gt; 設定時候的 tags 在後來 &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; 裡定義 Jobs 時標註的 tags 雙方要一樣，不然 CI/CD 是不會跑起來的。&lt;/li&gt;
&lt;li&gt;必須讓 docker engine 跑起來，所以也要在 EC2 裡下載 Docker Engine。&lt;/li&gt;
&lt;li&gt;在 CI/CD 的時後，也需要一些環境變數，可以在 GitLab 的 repo 裡的 Settings &amp;gt; CI/CD &amp;gt; Variables 這邊可以設置。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;-以下稍微紀錄重點-&#34;&gt;&lt;strong&gt;&amp;lt; 以下稍微紀錄重點 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;1-gitlab-cicd-須設置-gitlab-ciyml&#34;&gt;1. GitLab CI/CD 須設置 &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一些設定&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;image&lt;/code&gt;: 我 runner 使用的是 docker executor，所以這樣設置&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span class=&#34;c&#34;&gt;# image 的設定就會是:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;python:3.9.5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tags&lt;/code&gt;: 讓 Job 找到 runner 就需要 tags&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;python3.9.5_ci_runner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stages&lt;/code&gt;: 定義 CI/CD 時候 Pipeline 的每個 Job(也就是在 GitLab 上那一個個的圈圈)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 基本會類似像這樣&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stages&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;lint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;deploy crawler&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;before_script&lt;/code&gt;: 這個可以跑在每個 Job 的 &lt;code&gt;script&lt;/code&gt; 之前&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;extends&lt;/code&gt;: 可以放在 Jobs 一起定義 tags 和 image&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;.aws_ci_builder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;python3.9.5_ci_runner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;python:3.9.5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;artifacts&lt;/code&gt;: 可以給下一個 Job 使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;script&lt;/code&gt;: 就跑 script&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;needs&lt;/code&gt; 和 &lt;code&gt;dependencies&lt;/code&gt;: needs 是不管如何都會執行的 Job, 而 dependencies 則顧名思義，它依賴於那個 Job，接下來它才能夠執行。假設有一個 Job 叫做 &lt;code&gt;build&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span class=&#34;c&#34;&gt;# dependencies&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dependencies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果 &lt;code&gt;needs&lt;/code&gt; 需要某個 job 的 artifacts 可以這樣設置:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;needs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;artifacts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;2-docker-的-install&#34;&gt;2. Docker 的 Install&lt;/h3&gt;
&lt;p&gt;下載步驟(以我公司 CentOS 為例)：&lt;/p&gt;
&lt;p&gt;官方推薦 Set up docker&#39;s repositories 的方式下載&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 所以在下載之前要先 Set up 好 Repositories&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1-1. 下載 yum-utils&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum install -y yum-utils

&lt;span class=&#34;c1&#34;&gt;# 之所以下載 yum-utils 是因為我們要使用它的 yum-config-manager 功能&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;1-2. Set up repo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum-config-manager &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --add-repo &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    https://download.docker.com/linux/centos/docker-ce.repo
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;2. 設定完畢後就可以下載 Docker Engine&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;選擇1. 直接下載最新版的 Docker Engine&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum install docker-ce docker-ce-cli containerd.io
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;選擇2. 自行選擇版本&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 先列出版本清單&lt;/span&gt;
yum list docker-ce --showduplicates &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort -r
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 會顯示像這樣&lt;/span&gt;
docker-ce.x86_64    3:20.10.9-3.el7                            docker-ce-test
docker-ce.x86_64    3:20.10.9-3.el7                            docker-ce-stable
docker-ce.x86_64    3:20.10.8-3.el7                            docker-ce-test
docker-ce.x86_64    3:20.10.8-3.el7                            docker-ce-stable
docker-ce.x86_64    3:20.10.7-3.el7                            docker-ce-test
docker-ce.x86_64    3:20.10.7-3.el7                            docker-ce-stable
docker-ce.x86_64    3:20.10.6-3.el7                            docker-ce-test
docker-ce.x86_64    3:20.10.6-3.el7                            docker-ce-stable
docker-ce.x86_64    3:20.10.5-3.el7                            docker-ce-test
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 選擇要裝的版本，然後給他裝下去&lt;/span&gt;
sudo yum install docker-ce-&amp;lt;VERSION_STRING&amp;gt; docker-ce-cli-&amp;lt;VERSION_STRING&amp;gt; containerd.io
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&amp;lt;VERSION_STRING&amp;gt; 要找第二欄的 &lt;code&gt;3:20.10.9-3.el7&lt;/code&gt; 這邊，但不是全部放，只要冒號後面一直到 hyphen 之前就好，舉例: 我要 &lt;code&gt;3:20.10.9-3.el7&lt;/code&gt;，那就會是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;VERSION_STRING&amp;gt; 要替換成 &lt;code&gt;20.10.9&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum install docker-ce-20.10.9 docker-ce-cli-20.10.9 containerd.io
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;3. 啟動 Docker Engine&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo systemctl start docker
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;4. 如果要確認 Docker Engine 有沒有 active，可以下&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl is-active docker
&lt;span class=&#34;c1&#34;&gt;# 如果顯示 active 那就是對了&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果想設置 EC2 runner 啟動的時候 Docker Engine 就啟動，那可以&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; docker.service
sudo systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; containerd.service
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/linux-postinstall/#configure-docker-to-start-on-boot&#34;&gt;官方&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-yml檔的-script-操作&#34;&gt;3. yml檔的 script 操作:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;- 如果 script 是需要互動的輸入 Key 或是 Password 之類的，就可以很簡單的 echo 它:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 以 Zyte Deploy 工具 `shub` 為例 &lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;echo $ZYTE_DEPLOY_API_KEY | shub login&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;- yml 檔裡如果有 script 需要多行&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;    cat &amp;lt;&amp;lt; EOF &amp;gt; example.txt
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;    123
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;    456
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;    EOF&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;- yml 檔裡如果要用 GitLab 的 Environment Variables:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span class=&#34;l&#34;&gt;$變數名&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;p&gt;結束！&lt;/p&gt;
&lt;h3 id=&#34;self-checklist&#34;&gt;Self Checklist:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to setting &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to setting &lt;code&gt;GitLab runner&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to write the basic script.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Basic Docker concept.&lt;/li&gt;
&lt;/ul&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/cicd/" term="cicd" label="cicd" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/data/" term="Data" label="Data" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/gitlab/" term="GitLab" label="GitLab" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/ci/cd/" term="CI/CD" label="CI/CD" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/docker/" term="Docker" label="Docker" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/linux/" term="Linux" label="Linux" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/python/" term="Python" label="Python" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">[Python]Multi-processing 操作方式: fork, multiprocessing, subprocess</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/12/211020/Python_multiprocessing_usage/" />
            <id>https://linooohon.com/blog/posts/12/211020/Python_multiprocessing_usage/</id>
            <updated>2022-03-17T00:51:00&#43;09:00</updated>
            <published>2021-10-20T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;Multi-processing 在 Python 上實作的方式紀錄&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/12_211020/12_211020_python_multiprocessing使用方式.png&#34; width=&#34;50%&#34;/&gt;</summary>
            
                <content type="html">&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/12_211020/12_211020_python_multiprocessing%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F.png&#34; alt=&#34;https://linooohon.com/blog&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-code-example&#34;&gt;&lt;strong&gt;&amp;lt; Code Example&amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;1-os-module-osfork&#34;&gt;1. &lt;code&gt;os&lt;/code&gt; module, os.fork()&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;先從 Unix/Linux 系統的 fork 調用來看，MacOS 是類 Unix 所以 fork 調用是支持的，在 Python 可以直接用 &lt;code&gt;os&lt;/code&gt; module 創建子程序:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;程序 ({os.getpid()}) 開始...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;開始呼叫 os.fork()&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;======================&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;呼叫 os.fork() 後的結果，現在 return : {pid}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;pid == 0, 子程序返回: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;子程序說話: 我是子程序 ({os.getpid()}) 然後我的父程序是 ({os.getppid()}).&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;pid != 0, 父程序返回子程序 pid: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;原本程序說話: 我是程序 ({os.getpid()}) 我創造了子程序 ({pid}).&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;======父程序睡五秒=======&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;========最後一行, 現在是:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;=============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 輸出會像這樣&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;程序 (19810) 開始...
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;開始呼叫 os.fork()
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;======================
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;呼叫 os.fork() 後的結果，現在 return : 19826
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;pid != 0, 父程序返回子程序 pid:  19826
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;原本程序說話: 我是程序 (19810) 我創造了子程序 (19826).
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;======父程序睡五秒=======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;呼叫 os.fork() 後的結果，現在 return : 0
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;pid == 0, 子程序返回:  0
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;子程序說話: 我是子程序 (19826) 然後我的父程序是 (19810).
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;========最後一行, 現在是: 0 =============
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 並在等待一下後，才會出現&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;========最後一行, 現在是: 19826 =============
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 假設我們在呼叫 os.fork() 後 time.sleep(20) 看一下 `ps -f`&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 會發現實際真的有 父程序和子程序這兩個 pid&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;程序 ({os.getpid()}) 開始...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;pid == 0, 子程序返回: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;子程序說話: 我是子程序 ({os.getpid()}) 然後我的父程序是 ({os.getppid()}).&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;pid != 0, 父程序返回子程序 pid: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;原本程序說話: 我是程序 ({os.getpid()}) 我創造了子程序 ({pid}).&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;========最後一行, 現在是:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;=============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 輸出會像這樣&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;程序 (83196) 開始...
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;pid == 0, 子程序返回:  0
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;子程序說話: 我是子程序 (83216) 然後我的父程序是 (83196).
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;========最後一行, 現在是: 0 =============
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;pid != 0, 父程序返回子程序 pid:  83216
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;原本程序說話: 我是程序 (83196) 我創造了子程序 (83216).
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;========最後一行, 現在是: 83216 =============
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;ps -f&lt;/code&gt; :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  UID PID   PPID    C  STIME  TTY        TIME 
  501 83196 11135   0  3:55PM ttys017    0:00.04 
  501 83216 83196   0  3:55PM ttys017    0:00.00 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-multiprocessing-module-實例化-process-啟動一個子程序&#34;&gt;2. &lt;code&gt;multiprocessing&lt;/code&gt; module, 實例化 Process(), 啟動一個子程序&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;雖然 MacOS 有 fork 調用，但在 windows 沒有 fork 調用，那如何做到跨平台，使用 python 的標準函式庫裡的 &lt;code&gt;multiprocessing&lt;/code&gt; 模組就可以支援:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;啟動一個子程序(進程)(process)並等待其結束然後再 print 出 &amp;#34;子程序結束&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;multiprocessing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Process&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# 子程序要做的事&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;child_procss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;跑子程序&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;pid 是:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;主程序&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;child_procss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;print123&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;子程序將要開始&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 加 join 是因為如此的話 可以等待子程序(進程)結束後再繼續往下運行&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;子程序結束&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;主程序 67494
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;子程序將要開始
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;跑子程序 print123 pid 是: 67511
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;子程序結束
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;3-multiprocessing-module-實例化-pool-使用-apply_async-啟動大量子程序&#34;&gt;3. &lt;code&gt;multiprocessing&lt;/code&gt; module, 實例化 Pool(), 使用 apply_async(), 啟動大量子程序&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;同樣也是標準函式庫&lt;code&gt;multiprocessing&lt;/code&gt; 使用裡面的 &lt;code&gt;Pool()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;啟動大量程序(進程)(process), 使用 Pool
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;multiprocessing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pool&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;long_time_task&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;跑任務 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; (&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;)...&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;任務 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; 跑了 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%0.2f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; 秒&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;主程序開始 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;.&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apply_async&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;long_time_task&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;apply_async() 非同步, 正在等待所有子程序從運行直到完畢...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# join 前要加 close&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 加 join 是因為如此的話，可以等待全部子程序(進程)結束後再繼續往下運行&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;所有子程序結束。&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;--close&#34;&gt;- close()&lt;/h4&gt;
&lt;p&gt;close() 必須加，不加的話會 raise error&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;raise ValueError(&amp;quot;Pool is still running&amp;quot;)
ValueError: Pool is still running
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;加了的話意思就是避免其他 Task 再進來這個 Pool, 同時確保所有 Job 做完後，子程序都會關閉。&lt;/p&gt;
&lt;h4 id=&#34;--join&#34;&gt;- join()&lt;/h4&gt;
&lt;p&gt;join() 必須加，為了確保主程序關閉之前，子程序都要跑完，所以加這個。&lt;br/&gt; 不加的話，一旦主程序結束，子程序也就沒了。所以通常前面一會放 close() 或是你想直接終止的時候就會放 terminate()，總之 join() 就是確保等待子程序關閉。&lt;/p&gt;
&lt;h4 id=&#34;--關於-pool&#34;&gt;- 關於 Pool()&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;p = Pool(8)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以發現我設定 &lt;code&gt;p = Pool(8)&lt;/code&gt; 表示設定我這個 Pool 可以同時跑 8 個 process
，如果我不設定 by default 就是當下 CPU 守備範圍內的核心，通常看 CPU 核心就能推估。或著用 python 標準函式庫裡的 module 可以看目前電腦核心數量:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看自己目前 CPU 核心數量:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;multiprocessing&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cpu_amount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multiprocessing&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cpu_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cpu_amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cpu_amount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cpu_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cpu_amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;--multiprocessing-module-pool-裡的其他種使用方式&#34;&gt;- &lt;code&gt;multiprocessing&lt;/code&gt; module, Pool 裡的其他種使用方式:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;map()&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 會確保子程序都結束，才會跑下面一行，也就是阻塞在這&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;阻塞&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 這行會在子程序都結束後才會印出來&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 假設有 return，可直接拿到 因為 map 是 return `list`&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;map_async() : 實現非同步&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map_async&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 不會停在這，也就是說下一行不會等子程序結束&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;不阻塞&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#直接印出來&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 假設有 return，要呼叫 get(), 因為 map_async 是 return `multiprocessing.pool.MapResult`&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map_async&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;pool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;starmap()&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;starmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 這裡的 arg 必須是 iterable, 如果是 list，則裡面的 element 也必須是 iterable, 而 map() 的話 list 裡面不用是 iterable&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;chunksize : 每個子程序可以處理的任務數量&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;chunksize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;callback&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;print_func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pool_outputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;callback&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pool_outputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pool_outputs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map_async&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;print_func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pool_outputs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;maxtasksperchild : 設定每個子程序完成多少任務後，就會再重啟新的子程序&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxtasksperchild&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;4-subprocess-module-subprocesscall&#34;&gt;4. &lt;code&gt;subprocess&lt;/code&gt; module, subprocess.call()&lt;/h3&gt;
&lt;p&gt;ex1:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;subprocess&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$ curl https://www.google.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;curl&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://www.google.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Exit code:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 效果和 `curl https://www.google.com` 一樣&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;ex2:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;subprocess&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$ nslookup www.python.org&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;nslookup&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;www.python.org&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Exit code:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 效果和 `nslookup www.python.org` 一樣&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;5-subprocess-module-subprocesspopen-communicate-輸入輸出&#34;&gt;5. &lt;code&gt;subprocess&lt;/code&gt; module, subprocess.Popen(), communicate(), 輸入輸出&lt;/h3&gt;
&lt;p&gt;ex1:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;subprocess&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$ date -R&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Popen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;-R&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;communicate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Exit code:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;returncode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;ex2:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;subprocess&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$ nslookup&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Popen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;nslookup&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;communicate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;set q=mx&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\t&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;witter.com&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Exit code:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;returncode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;$ nslookup
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt; set q=mx
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  twitter.com
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  exit
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 輸出&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;$ nslookup
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Server:         192.168.1.1
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Address:        192.168.1.1#53
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Non-authoritative answer:
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;twitter.com     mail exchanger = 20 alt2.aspmx.l.google.com.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;twitter.com     mail exchanger = 30 aspmx2.googlemail.com.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;twitter.com     mail exchanger = 10 aspmx.l.google.com.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;twitter.com     mail exchanger = 30 aspmx3.googlemail.com.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;twitter.com     mail exchanger = 20 alt1.aspmx.l.google.com.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Authoritative answers can be found from:
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Exit code: 0
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;6-subprocess-module-subprocessrun-stdout-輸出到檔案&#34;&gt;6. &lt;code&gt;subprocess&lt;/code&gt; module, subprocess.run(), stdout 輸出到檔案&lt;/h3&gt;
&lt;p&gt;subprocess.run() 是建立在 subprocess.Popen() 之上&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;subprocess&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;output.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;-R&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 如此 output.txt 就會產生&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;7-subprocess-module-subprocessrun-stdout-輸出回-subprocesspipe-繼續用&#34;&gt;7. &lt;code&gt;subprocess&lt;/code&gt; module, subprocess.run(), stdout 輸出回 subprocess.PIPE 繼續用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;subprocess&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;-R&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;------&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;------&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;8-subprocess-module-subprocesscheck_output&#34;&gt;8. &lt;code&gt;subprocess&lt;/code&gt; module, subprocess.check_output()&lt;/h3&gt;
&lt;p&gt;subprocess.check_output() 更簡化了 subprocess.run()&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;subprocess&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;-R&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;9-multiprocessing-module-process-搭配-queue-達成不同子程序間的資料流交換&#34;&gt;9. &lt;code&gt;multiprocessing&lt;/code&gt; module, Process() 搭配 Queue() 達成不同子程序間的資料流交換&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;multiprocessing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Queue&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 資料寫進 Queue&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;子程序寫入&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;放 {value} 到 queue...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 從 Queue 拿資料&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;子程序讀取&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;拿到 {value} 來自 queue.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 主程序創造 Queue, 傳給兩個子程序&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pw&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 啟動子程序pw，寫入:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pw&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 啟動子程序pr，讀取:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 等待 pw 結束:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pw&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# pr 程序是 無窮loop，所以等待 pw 結束後，就把它終止:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;terminate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 輸出    &lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;92372 子程序寫入
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;放 A 到 queue...
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;92373 子程序讀取
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;拿到 A 來自 queue.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;放 B 到 queue...
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;拿到 B 來自 queue.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;放 C 到 queue...
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;拿到 C 來自 queue.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以上，結束。
有參考網路一些例子，在這裡針對基本使用統整紀錄一下。&lt;/p&gt;
&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;p&gt;結束！&lt;/p&gt;
&lt;h3 id=&#34;self-checklist&#34;&gt;Self Checklist:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is Multi-processing.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to handle Multi-processing with python code.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Basic concept of Master-Worker Pattern.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to use &lt;code&gt;os&lt;/code&gt; module.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to use &lt;code&gt;subprocess&lt;/code&gt; module.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to use &lt;code&gt;multiprocessing&lt;/code&gt; module.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is &lt;code&gt;fork&lt;/code&gt; in Unix/Linux System.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to use &lt;code&gt;Pool()&lt;/code&gt;, &lt;code&gt;Process()&lt;/code&gt;, &lt;code&gt;Queue()&lt;/code&gt; in &lt;code&gt;multiprocessing&lt;/code&gt; module.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to use &lt;code&gt;map_async()&lt;/code&gt;, &lt;code&gt;apply_async()&lt;/code&gt; in &lt;code&gt;multiprocessing&lt;/code&gt; module.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to use &lt;code&gt;call()&lt;/code&gt;, &lt;code&gt;Popen()&lt;/code&gt;, &lt;code&gt;run()&lt;/code&gt;, &lt;code&gt;check_output()&lt;/code&gt; in &lt;code&gt;subprocess&lt;/code&gt; module.&lt;/li&gt;
&lt;/ul&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/python/" term="python" label="python" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/multiprocessing/" term="Multiprocessing" label="Multiprocessing" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/subprocess/" term="Subprocess" label="Subprocess" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/os/" term="OS" label="OS" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/python/" term="Python" label="Python" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">[PyConTW]關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/11/211011/Nuxtjs_Note/" />
            <id>https://linooohon.com/blog/posts/11/211011/Nuxtjs_Note/</id>
            <updated>2022-03-17T02:46:41&#43;09:00</updated>
            <published>2021-10-11T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;在 PyConTW2021 Dev Team 開發紀錄，關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄&lt;/p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/11_211011/11_211011_PyCon_Nuxt_01.png&#34; /&gt;</summary>
            
                <content type="html">&lt;h4 style=&#34;text-align:center&#34;&gt;
今年 PyCon2021 也圓滿落幕了，小弟第一次參加，非常感謝組員的指導和幫忙，繼續加油，希望自己也能夠成長變成分享的那個人。
&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;在 PyConTW2021 Dev Team 開發紀錄，關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄，不同瀏覽器的差異...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- ![在 PyConTW2021 Dev Team 開發紀錄，關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄](/blog/images/11_211011/11_211011_PyCon_Nuxt_01.png) --&gt;
&lt;h2 id=&#34;-bug-&#34;&gt;&lt;strong&gt;&amp;lt; Bug &amp;gt;:&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;今年在 PyConTW 開發組幫忙開發 2021 Conference 時，發生了一個小Bug。&lt;/p&gt;
&lt;p&gt;「也就是每一頁的 &lt;code&gt;&amp;lt;h1&amp;gt;title&amp;lt;/h1&amp;gt;&lt;/code&gt; 在 &amp;quot;iOS 與 Safari&amp;quot; 都會自動產生換行!」&lt;/p&gt;
&lt;p&gt;但在 html 裡面始終找不到出錯點在哪，因為看起來都非常正常。
且如果從 Chrome 以及其他瀏覽器瀏覽器也不會有問題，所以可以肯定的是，
不同瀏覽器解釋間的差異，造成 iOS 和 Safari 會有換行問題。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那為什麼會換行，是什麼造成的，後來發現與 tag 中夾帶的 text 中的空格有關。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;後來實際去查看渲染過後的 html code 發現 tag 裡的 text 渲染出來會夾帶空格，至於為什麼會有什麼空格，與渲染時 template 的 format 有關係。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/11_211011/11_211011_PyCon_Nuxt_01.png&#34; alt=&#34;在 PyConTW2021 Dev Team 開發紀錄，關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;當 template 是如下的格式時，選染出來的 tag 裡的 text 會夾帶空格(如上)。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/11_211011/11_211011_PyCon_Nuxt_02.png&#34; alt=&#34;在 PyConTW2021 Dev Team 開發紀錄，關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-解決-&#34;&gt;&lt;strong&gt;&amp;lt; 解決 &amp;gt;:&lt;/strong&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;發現問題後，想到的第一個解決方式是:
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;solve1&#34;&gt;solve.1&lt;/h3&gt;
&lt;p&gt;&amp;lt;solve.1&amp;gt; 當我們可以把格式調整成與 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;/&amp;gt;&lt;/code&gt; 相連，如此渲染時， 就不會產生空格。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/11_211011/11_211011_PyCon_Nuxt_03.png&#34; alt=&#34;在 PyConTW2021 Dev Team 開發紀錄，關於在 Nuxt.js 開發時渲染 HTML 的小坑紀錄&#34;&gt;&lt;/p&gt;
&lt;p&gt;接著因為我們開發有固定的 format 格式，所以 &lt;code&gt;solve.1&lt;/code&gt; 的解法，兩個 approach&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以破壞 formatter 規則解決&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;或是&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;縮減 html 字量，直到連在一起的程度&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;solve2&#34;&gt;solve.2&lt;/h3&gt;
&lt;p&gt;&amp;lt;solve.2&amp;gt; 解法是使用 &lt;code&gt;white-space: nowrap&lt;/code&gt;
但這個比較偏硬幹，只能適應特定情況。(ex: title 字數夠少)&lt;/p&gt;
&lt;h2 id=&#34;-後記-&#34;&gt;&lt;strong&gt;&amp;lt; 後記 &amp;gt;:&lt;/strong&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;最後我們選擇了 &lt;code&gt;solve.1&lt;/code&gt; 的縮減 html 字量，也是這個情況想到的最好解法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一開始還真沒想到可以縮減，我竟然沒想到，經過組長 Matt 修了之後，才恍然大悟這件事應該早就要想到...不然我一開始是用 &lt;code&gt;solve.2&lt;/code&gt; 去硬修..&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;從發現問題，到找到關鍵點，這之中的搜索常常是大海撈針，不過也挺酷的，訓練自己搜索資料的能力。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;self-checklist&#34;&gt;Self Checklist:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is &lt;code&gt;white-space&lt;/code&gt; in CSS properties&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand different browser will have different behavior.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Format somehow is possible to cause render problem sometimes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;references&#34;&gt;References:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pycontw/pycontw-2021/pull/123&#34;&gt;PyConTW2021. PR#123&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3.org/TR/css-text-3/#soft-wrap-opportunity&#34;&gt;www.w3.org - Line Breaking and Soft wrap 調查&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3.org/TR/css-text-3/#propdef-white-space&#34;&gt;www.w3.org - White Space and Wrapping 調查&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;!-- &lt;a href=&#34;https://linooohon.com/blog/blog/posts/08/210805/python的yield和scrapy的yield&#34;&gt;Python 觀念(2) yield 是什麼?，那Scrapy 裡的 yield?&lt;/a&gt; --&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/nuxt/" term="nuxt" label="nuxt" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/pycon/" term="PyCon" label="PyCon" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/nuxt/" term="Nuxt" label="Nuxt" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/vue/" term="Vue" label="Vue" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">[Python]關於 Python 的幾種安裝與路徑(Python Install &amp; PATH)</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/10/210915/%E9%97%9C%E6%96%BCPython%E7%9A%84%E5%B9%BE%E7%A8%AE%E5%AE%89%E8%A3%9D%E8%88%87%E8%B7%AF%E5%BE%91%28Python%20Install%20&amp;%20PATH%29/" />
            <id>https://linooohon.com/blog/posts/10/210915/%E9%97%9C%E6%96%BCPython%E7%9A%84%E5%B9%BE%E7%A8%AE%E5%AE%89%E8%A3%9D%E8%88%87%E8%B7%AF%E5%BE%91%28Python%20Install%20&amp;%20PATH%29/</id>
            <updated>2021-11-28T15:19:05&#43;09:00</updated>
            <published>2021-09-15T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;關於 Python 的幾種安裝與路徑(Python Install &amp; PATH)&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/10_210915/10_210915_pythoninstallandpath.png&#34; width=&#34;40%&#34;/&gt;</summary>
            
                <content type="html">&lt;h1 style=&#34;text-align:center&#34;&gt;
關於 Python 的幾種安裝與路徑(Python Install &amp; PATH)
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在幫助公司建立 data monorepo 的過程，決定把 Python 的一些相關安裝和路徑筆記起來。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/10_210915/10_210915_pythoninstallandpath.png&#34; alt=&#34;關於 Python 的幾種安裝與路徑(Python Install &amp; PATH)&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-一-python-on-macos-docs-&#34;&gt;&lt;strong&gt;&amp;lt; 一. Python on MacOS Docs &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;p&gt;Using Python on a Mac &lt;a href=&#34;https://docs.python.org/3/using/mac.html&#34;&gt;Python Docs&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-二-安裝及路徑-&#34;&gt;&lt;strong&gt;&amp;lt; 二. 安裝及路徑 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;--作業系統本身就有的-pythonapple-provided-build-of-python一種&#34;&gt;- 作業系統本身就有的 Python(Apple-provided build of Python):一種&lt;/h3&gt;
&lt;h4 id=&#34;1-apple-provided-build-of-python&#34;&gt;1. Apple-provided build of Python&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Python.framework&lt;/code&gt; folder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Path:&lt;code&gt;/System/Library/Frameworks/Python.framework&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一些 Symlink file 和 一個 Regular file &lt;code&gt;python3&lt;/code&gt; (就我的查看結果)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Path: &lt;code&gt;/usr/bin/python&lt;/code&gt;
&lt;img src=&#34;https://i.imgur.com/ZZRI4Ju.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;By Default, 一般會是 Python 2.7 已經被 Apple 先安裝了，所以上面的檔案才會看起來都是 2 的東西&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;根據 &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;python.org&lt;/a&gt;
&lt;img src=&#34;https://i.imgur.com/9DLDTFE.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但目前開發大都是用 Python3 了, Python2 也不再被 Support，Python3.6 也只 Support 到 2021 年底，所以底下分別歸類一些 Python developer 大多會使用的安裝方式。&lt;/p&gt;
&lt;p style=&#34;color:#fc3503&#34;&gt;注意:&lt;/p&gt;
&lt;p&gt;根據 Python 官方說法，Apple-provided build of Python 是內建 Python 不該去移動修改它，因為它有可能被 MacOS 系統及其他 3 party 所需要。&lt;/p&gt;
&lt;h3 id=&#34;--user-自行安裝user-build-of-python好幾種&#34;&gt;- User 自行安裝(User build of Python):好幾種&lt;/h3&gt;
&lt;h4 id=&#34;1-python-官網下載universal-binary-build-of-pythonpythonorghttpswwwpythonorgdownloads&#34;&gt;1. Python 官網下載(Universal Binary build of Python)&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;python.org&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;下載之後會有的東西:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Python 3.9&lt;/code&gt; folder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Path: &lt;code&gt;/Applications/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;裡面有:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IDLE(Integrated Development and Learning Environment): Python 的整合開發與學習環境，簡單來說就是撰寫 Python 程式的工具，打開後可以在 shell window 寫 Python code&lt;/li&gt;
&lt;li&gt;Python Launcher: 處理執行 python script 的作業&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/using/mac.html#how-to-run-a-python-script&#34;&gt;Refer to 5.1.1: How to run a Python script&lt;/a&gt;&lt;/p&gt;
  &lt;p style=&#34;color: #4455dd&#34;&gt;
  &gt; To run your script from the Finder you have two options:
  &lt;/p&gt;
  &lt;p style=&#34;color: #dd3ddd&#34;&gt;
      1. Drag it to PythonLauncher&lt;br&gt;
      2. Select PythonLauncher as the default application to open your script (or any .py script) through the finder Info window and double-click it. PythonLauncher has various preferences to control how your script is launched. Option-dragging allows you to change these for one invocation, or use its Preferences menu to change things globally.
  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Python.framework&lt;/code&gt; folder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Path: &lt;code&gt;/Library/Frameworks/Python.framework&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;裡面有:
&lt;ul&gt;
&lt;li&gt;Python executable code 和 libraries.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Symlink file:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Path: 在 &lt;code&gt;/usr/local/bin/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;指向 &lt;code&gt;/Library/Frameworks/Python.framework&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;裡面有(假設install 的是 python3.9):
&lt;ul&gt;
&lt;li&gt;2to3:&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/2to3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;2to3-3.9:&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/2to3-3.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;idle3:&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/idle3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;idle3.9:&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/idle3.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pip3:&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/pip3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pip3.9: &lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/pip3.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pydoc3: &lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/pydoc3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pydoc3.9:
&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/pydoc3.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;python3:
&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/python3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;python3-config:
&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/python3-config&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;python3.9:
&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/python3.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;python3.9-config:
&lt;code&gt;../../../Library/Frameworks/Python.framework/Versions/3.9/bin/python3.9-config&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;確認版本:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只要去&lt;code&gt;Python 3.9&lt;/code&gt;folder 打開 IDLE 就可以看出來是 3.x.x。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;移除官方下載的 Python:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同理，移除三樣東西就行，
&lt;ul&gt;
&lt;li&gt;移除 folder &lt;code&gt;/Applications/Python 3.9/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;移除 folder &lt;code&gt;/Library/Frameworks/Python.framework/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;移除 &lt;code&gt;/usr/local/bin/&lt;/code&gt; 底下的所有 Symlink (數個)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-homebrew-安裝&#34;&gt;2. Homebrew 安裝&lt;/h4&gt;
&lt;p&gt;ex: 試著安裝最近 release 的 python3.10:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;brew install python@3.10
&lt;span class=&#34;c1&#34;&gt;# Homebrew 會安裝需要的所有 dependencies&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Homebrew 會裝在 &lt;code&gt;/usr/local/Cellar&lt;/code&gt; 底下，經過查看發現多了很多東西🥲:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ca-certificates&lt;/li&gt;
&lt;li&gt;gdbm&lt;/li&gt;
&lt;li&gt;libnghttp2&lt;/li&gt;
&lt;li&gt;mpdecimal&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:python@3.10&#34;&gt;python@3.10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:python@3.9&#34;&gt;python@3.9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;sqlite&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同時也會在 &lt;code&gt;/usr/local/bin&lt;/code&gt; 建立一些 symlink&lt;/p&gt;
&lt;h4 id=&#34;3-pyenv-安裝&#34;&gt;3. Pyenv 安裝&lt;/h4&gt;
&lt;p&gt;如果使用 Homebrew 安裝 Pyenv 的話，本身 Pyenv 的 source code 也是在 &lt;code&gt;usr/local/Cellar/pyenv/&lt;/code&gt; &lt;a href=&#34;https://github.com/pyenv/pyenv&#34;&gt;source code&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;一開始先-init-source-codehttpsgithubcompyenvpyenvblobmasterlibexecpyenv-init&#34;&gt;一開始先 init &lt;a href=&#34;https://github.com/pyenv/pyenv/blob/master/libexec/pyenv-init&#34;&gt;source code&lt;/a&gt;:&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## 放到 ~/.zshrc 或是 ~/.bash_profile&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PYENV_ROOT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/.pyenv&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PYENV_ROOT&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/bin:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;pyenv init -&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;這裡會修改 PATH 環境變數，加入 ${PYENV_ROOT}/shims/，使得之後指令會先選擇 shims 裡的指令執行，其他詳細的再研讀原始碼。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;重新啟動-shell&#34;&gt;重新啟動 shell:&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;exec &amp;quot;$SHELL&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;pyenv install -v &amp;lt;想要的版本&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;至於使用 Pyenv 安裝 Python 的話，會是在:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~/.pyenv/ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;底下生出來。&lt;/p&gt;
&lt;h5 id=&#34;pyenv-切換-python-版本方式&#34;&gt;pyenv 切換 python 版本方式:&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pyenv global &amp;lt;版本&amp;gt; &lt;span class=&#34;c1&#34;&gt;##全域&lt;/span&gt;
pyenv &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &amp;lt;版本&amp;gt; &lt;span class=&#34;c1&#34;&gt;##此資料夾&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;查看-pyenv-切換有無成功&#34;&gt;查看 pyenv 切換有無成功:&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;pyenv versions
python --version
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;查看-python-路徑&#34;&gt;查看 python 路徑:&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;pyenv which python
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果單純使用 &lt;code&gt;which python&lt;/code&gt; 是看不出來的。會得到 ~/.pyenv/shims，那 shims 裡面的內容其實就是一個接收的人，負責轉換。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shims&lt;/code&gt; folder 主要就是負責接收輸入 pyenv command 時的參數，所以在一開始 init 的時候就有 config 了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pyenv exec&lt;/code&gt;: &lt;code&gt;shims&lt;/code&gt; 會把該帶的參數丟給 &lt;code&gt;pyenv exec&lt;/code&gt; 執行。&lt;a href=&#34;https://github.com/pyenv/pyenv/blob/master/libexec/pyenv-exec&#34;&gt;source code&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; PYENV_VERSION
&lt;span class=&#34;nv&#34;&gt;PYENV_COMMAND_PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;pyenv-which &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PYENV_COMMAND&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;PYENV_BIN_PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PYENV_COMMAND_PATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;%/*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;OLDIFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$IFS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;$&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;scripts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;pyenv-hooks &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$OLDIFS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; script in &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;scripts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[@]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
  &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$script&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;4-conda&#34;&gt;4. Conda&lt;/h4&gt;
&lt;p&gt;可以透過 Anaconda 或是 Miniconda
，我自己是使用 Miniconda&lt;/p&gt;
&lt;h5 id=&#34;第一種-default-path-安裝&#34;&gt;第一種. Default PATH 安裝:&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;conda create --name &amp;lt;環境名&amp;gt; &lt;span class=&#34;nv&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3.7
&lt;span class=&#34;c1&#34;&gt;# e.g.&lt;/span&gt;
conda create --name python3.7 &lt;span class=&#34;nv&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3.7
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;如此 Python 就會被安裝在&lt;code&gt;~/opt/miniconda3/envs/&lt;/code&gt; 底下:
&lt;ul&gt;
&lt;li&gt;PATH: &lt;code&gt;~/opt/miniconda3/envs/python3.7/bin/python&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;第二種-在自己目前所在的-folder-裡安裝-python&#34;&gt;第二種. 在自己目前所在的 folder 裡安裝 Python:&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;conda create --prefix &amp;lt;env名字&amp;gt; &lt;span class=&#34;nv&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;想要裝的python版本&amp;gt;
&lt;span class=&#34;c1&#34;&gt;# e.g.&lt;/span&gt;
conda create --prefix conda_env &lt;span class=&#34;nv&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3.8
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這時就會在當前目錄生出包含 python3.8 的環境:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`root/`
    |___`conda_env/`
            |___`bin/`
            |___`conda-meta/`
            |___`include/`
            |___`lib/`
            |___`share/`
            |___`ssl/`
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;進入環境&#34;&gt;進入環境:&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;conda activate ./conda_env
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;python -V
&lt;span class=&#34;c1&#34;&gt;# 會發現版本已經切換成剛剛的需求 python=3.8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;which python
&lt;span class=&#34;c1&#34;&gt;# 會發現 python 的路徑已經是當前目錄 `conda_env/bin/python`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h6 id=&#34;把目前環境打包成-yml-檔&#34;&gt;把目前環境打包成 yml 檔:&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;conda env export --prefix ./conda_env &amp;gt; environment.yml
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;依照當前-yml-檔把環境建立在當前相同路徑下&#34;&gt;依照當前 yml 檔，把環境建立在當前相同路徑下:&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;conda env create --prefix ./conda_env --file environment.yml
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;依照當前-yml-檔把環境建立在-conda-的-default-path&#34;&gt;依照當前 yml 檔，把環境建立在 Conda 的 Default Path:&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;conda env create --file environment.yml
&lt;span class=&#34;c1&#34;&gt;# OR: conda env create --file &amp;lt;yaml檔名&amp;gt; --name &amp;lt;想建成的環境資料夾名&amp;gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# e.g&lt;/span&gt;
conda env create --file environment.yml --name env_from_yml
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;但是記得 yml 的 name 要修改一下，這會是之後裝在 &lt;code&gt;opt/miniconda3/envs&lt;/code&gt; 底下的 folder 名字。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/opuGaJs.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;self-checklist&#34;&gt;Self Checklist:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to install Python through different ways.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is Environment Variable &lt;code&gt;$PATH&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; The meaning of &lt;code&gt;echo $PATH&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is the difference between &lt;code&gt;pyenv python&lt;/code&gt; and &lt;code&gt;Apple-provided build of Python&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand all the path where python will be placed when download python.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand what is &lt;code&gt;symlink&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand what is &lt;code&gt;IDLE&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand what is &lt;code&gt;Python Launcher&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://josix.tw/pyenv-deep-dive/&#34;&gt;PyConTW DevTeam的大大-Josix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#cloning-an-environment&#34;&gt;Conda Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/using/mac.html#how-to-run-a-python-script&#34;&gt;Python Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/denix-daily/macos%E4%B8%8A%E7%9A%84python%E8%B7%AF%E5%BE%91%E5%95%8F%E9%A1%8C-%E5%AE%89%E8%A3%9D%E6%96%B9%E6%B3%95-a10c01cc42a&#34;&gt;Denis Hsieh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;!-- &lt;a href=&#34;https://linooohon.com/blog/blog/posts/08/210805/python的yield和scrapy的yield&#34;&gt;Python 觀念(2) yield 是什麼?，那Scrapy 裡的 yield?&lt;/a&gt; --&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/python/" term="python" label="python" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/python/" term="Python" label="Python" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/pyenv/" term="Pyenv" label="Pyenv" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/conda/" term="Conda" label="Conda" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">關於 Session 與 Cookie - [ Session篇 ] 紀錄</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/09/210813/session%E7%B4%80%E9%8C%84/" />
            <id>https://linooohon.com/blog/posts/09/210813/session%E7%B4%80%E9%8C%84/</id>
            <updated>2022-03-17T02:45:26&#43;09:00</updated>
            <published>2021-08-13T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;Session 與 Cookie - [ Session ] 篇紀錄&lt;/p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/09_210813/09_210813_session.png&#34; width=&#34;50%&#34;/&gt;</summary>
            
                <content type="html">&lt;h1 style=&#34;text-align:center&#34;&gt;
關於 Session 與 Cookie - &lt; Session篇 &gt; 紀錄
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;前陣子在幫忙開發公司的 Nodejs 專案，在處理上，發現自己對 Cookie 和 Session 的概念還沒有很清晰，所以研究了一下，在此紀錄，也順便分享出來。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/09_210813/09_210813_session.png&#34; alt=&#34;關於 Session 與 Cookie - &lt; Session篇 &gt; 紀錄&#34;&gt;&lt;/p&gt;
&lt;p&gt;雖然我的 Blog 應該是 SEO 差到爆的邊緣 Blog, 不過自己也滿喜歡紀錄的，就邊學邊整理下來，有緣人若看到此篇，歡迎與我討論，如果有錯煩請指教。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;底下的紀錄也參考了諸多篇文章與大大的 Blog, 如有一些雷同的敘述，請見諒 🙏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;要搞懂一個東西，就要不斷問 &amp;quot;為什麼&amp;quot; 和 &amp;quot;如何&amp;quot; 。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-此次紀錄重點-&#34;&gt;&lt;strong&gt;&amp;lt; 此次紀錄重點 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;雖然很多人在解釋 Session 時會與 Cookie 一起解釋，但此篇我想先盡量專注在 Session ，先不與 Cookie 混著談。&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;-什麼是-session-統整-&#34;&gt;&lt;strong&gt;&amp;lt; 什麼是 Session 統整 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;各方解釋&#34;&gt;各方解釋:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;從字本身語義切入&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;具有狀態的一段時間&lt;/li&gt;
&lt;li&gt;上下文&lt;/li&gt;
&lt;li&gt;中文翻譯: &amp;quot;會話&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生活例子: 有始有終的一系列動作/消息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ex: 打電話是從拿起電話撥號到掛斷電話，這中間的一系列過程稱之為一個 session&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;當 Session 與網路協議相關時:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有連接或保持狀態的意思&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;當 Session 在 Web 開發領域時有一些詮釋:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;將 Client端 與 Server端之間交互的過程，抽象為&amp;quot;會話&amp;quot;，進而衍生出 &amp;quot;會話的狀態&amp;quot;(偵測/觀測交互過程的狀態)，也就是說這時的 Session 是一種概念&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;狀態管理的解決方案/機制/實現:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;i. Client端 與 Server端之間保持狀態的 &amp;quot;解決方案(機制)&amp;quot;，也就是說這時後，Session 指的是一種狀態管理的解決方式(機制)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ii. Session 是一種 Server端的機制，Server 使用一種類似於 Hash Table(雜湊表/散列表/哈希表) (也可能就是 Hash Table)的結構來保存訊息，在這 Session 指的也是一種狀態管理的解決方式(機制)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;儲存結構:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Client端 與 Server端之間保持狀態的 &amp;quot;解決方案(機制)的存儲結構&amp;quot;，也就是說這時候，Session 指的是一種狀態管理的解決方式(機制)的 &amp;quot;儲存結構&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;資料(狀態/資訊)本身:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因為 1. 的概念而衍伸出，在建立 2. 的狀態管理的解決機制後我們透過 3. 的儲存結構去把所要儲存的狀態儲存起來，這些狀態有時會看到有人寫直接就說是 Session Information(Session 資訊)。所以有時候人家說 Session 也有可能指的是 Session 資訊本身，&lt;code&gt;Session == Session 資訊 ?&lt;/code&gt; 所以我覺得概念還是要懂，比次溝通才會比較順，默契也比較好，因為技術名詞有時候就是有點曖昧，說到這自己的實力還是不行啊....加油！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-什麼是-session-自我統整-&#34;&gt;&lt;strong&gt;&amp;lt; 什麼是 Session 自我統整 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;所以會發現當我們單純說-session-時其實有太多定義模糊的空間&#34;&gt;所以會發現當我們單純說 Session 時，其實有太多定義模糊的空間。&lt;/h3&gt;
&lt;p&gt;自己統整後，&lt;/p&gt;
&lt;h4 id=&#34;session-的含義可以有以下數種&#34;&gt;Session 的含義可以有以下數種:&lt;/h4&gt;
&lt;h5 id=&#34;1-含義1&#34;&gt;1. 含義1:&lt;/h5&gt;
&lt;p&gt;在平常生活上單單就單字用法就是指具有狀態的一段時間、會議、開會、一次交流。
如果有在跳舞的人可能常聽到 Session 這個字眼，每當聽到這個詞時，可能會是指一次比賽的出場，一次活動，一個round, 一段時間內彼此的跳舞交流時間。&lt;/p&gt;
&lt;h5 id=&#34;2-含義2&#34;&gt;2. 含義2:&lt;/h5&gt;
&lt;p&gt;接下來開始試著慢慢引導到 Web 相關的含義。
Session 與網路協議相關時，有時是「連接」的意思:
舉例1. 比如當你要建立通信的渠道，像是打電話，你要確定對方接了電話通信才開始，這也是 Session 的含義之一。
舉例2. 一樣是建立通信的渠道, 像是寫信，你寫出去時不確定地址對不對，雖然收信人不一定能收到，但僅僅對於發信人來說，他也會認為這個 Session 已經開始了，這也是一種 Session 的表現。&lt;/p&gt;
&lt;h5 id=&#34;3-含義3&#34;&gt;3. 含義3:&lt;/h5&gt;
&lt;p&gt;Session 與網路協議相關時，另一個意思是「保持狀態」的意思:
這個保持狀態指的是，在連接之餘，連接的一方能夠把一系列相關的訊息(狀態/資訊)關聯起來，比如說常去吃的麵攤老闆娘她一眼就能記得上次你忘記帶錢說要這次來再付，也記得你最愛點的海鮮麵，直接就幫你做了，這類「保持狀態」的例子有「一個 TCP session」, 「一個 POP3 session」&lt;/p&gt;
&lt;h5 id=&#34;4-含義4&#34;&gt;4. 含義4:&lt;/h5&gt;
&lt;p&gt;Session 進到 Web App的領域時:
Session 在現今 Web開發領域下，可以指 Client 端與 Server 端之間交互的過程，有時會把這個過程統整成「會話」這個詞，此時的 Session 是一種整體的概念。&lt;/p&gt;
&lt;h5 id=&#34;5-含義5&#34;&gt;5. 含義5:&lt;/h5&gt;
&lt;p&gt;當我們知道 Session 可以指有始有終的一系列動作(狀態/消息)時，ex: 像是打電話從撥號到掛斷的一系列過程。
所以有時看到「在一個 Browser 的會話期間..」是指從瀏覽器視窗打開到關閉的這個期間就叫做一個 Session。&lt;/p&gt;
&lt;h5 id=&#34;6-含義6&#34;&gt;6. 含義6:&lt;/h5&gt;
&lt;p&gt;有時看到「 Client 的一次會話期間..」可以指同個目的的一系列動作，像是從登錄到選購商品到結帳登出，這樣的一個過程可以稱作一個 Session, 同時也可被稱為是在資料處理上的一次 transaction，所以在「 Client 的一次會話期間..」的解釋下，開發者在彼此溝通時要理解這個過程的頭跟尾到底彼此指的一不一樣。因為有時候可能 A 想的只是一次性的某個動作期間，但 B 所想的是好幾個動作合起來的期間。&lt;/p&gt;
&lt;h5 id=&#34;7-含義7&#34;&gt;7. 含義7:&lt;/h5&gt;
&lt;p&gt;所以當我們從含義4, 5, 6 解釋過來會發現，這個交互的過程其實也從一種概念演變成實際運行的機制，也就變成較偏向大家所認知的 Session 定義的其中一種，就是 Client端與 Server端之間保持狀態的「機制(解決方案)」。&lt;/p&gt;
&lt;h5 id=&#34;8-含義8&#34;&gt;8. 含義8:&lt;/h5&gt;
&lt;p&gt;那當有人問說你是「存在 Cookie 還是 Session時?」這句話在我以前剛學程式時，覺得問這樣的一個問題沒什麼，也挺專業的(太無知了..)，但經過我的研讀和查閱，我認為事實是問問題還是必須問的精確一點比較好，此篇不討論 Cookie，Cookie 確實是一個儲存的空間，但存在 Session 就有點不太精確，硬要解釋，大部分都是解釋成實作 Session 這種機制的作法，把資料存在一些可以存資料的地方，像是記憶體(Memory)、快取(Cache)、Cookie、資料庫(Database)，所以當這樣的一個問題出現時，無法去定義此時的 Session 是什麼，我們可以猜測的是也許此刻的 Session 指的是資料放的地方。或是另一個含義像是含義 9。&lt;/p&gt;
&lt;h5 id=&#34;9-含義9&#34;&gt;9. 含義9:&lt;/h5&gt;
&lt;p&gt;根據含義8，有時 Session 也會指實踐 Session 機制時，資料被儲存時本身的資料結構。&lt;/p&gt;
&lt;h5 id=&#34;10-含義10&#34;&gt;10. 含義10:&lt;/h5&gt;
&lt;p&gt;根據含義7, 8, 9，我們可以知道資料(狀態/資訊)本身，也有機會被稱為 Session，當我們說「拿 Session 資料」，雖然比較不會被認為 Session 本身就是資料，但還是要記得有這麼一個可能性。&lt;/p&gt;
&lt;h5 id=&#34;11-含義11&#34;&gt;11. 含義11:&lt;/h5&gt;
&lt;p&gt;不同的語言及框架在實踐 Session 概念時，也會有不同作法，此時的 Session 就會因此而有些各方實作及定義上的差異。&lt;/p&gt;
&lt;h2 id=&#34;-為什麼出現-session-&#34;&gt;&lt;strong&gt;&amp;lt; 為什麼出現 Session &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;各方解釋-1&#34;&gt;各方解釋:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HTTP Stateless:以無狀態角度切入&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由於 Http 為 Stateless protocol(無狀態協議)，但在 Web 領域中，server 時常需要紀錄 User 的狀態，但 Http 是無狀態的，所以就需要某種機制來紀錄識別用戶的狀態，而 Session 就出場了。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我認為合理的簡單解釋:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;解決無狀態，Session 出現幫忙&lt;/li&gt;
&lt;li&gt;根據 &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc2109&#34;&gt;RFC 2109&lt;/a&gt; session 可以指一種交互狀態(關係)，這裡面包括 Client 的 Request 和 Server 的 Response 之間的交互內容，最早會出現，裡面也提及是因為要建立 Stateful，裡面說道:&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;3.  STATE AND SESSIONS

   This document describes a way to create stateful sessions with HTTP
   requests and responses.  Currently, HTTP servers respond to each
   client request without relating that request to previous or
   subsequent requests; the technique allows clients and servers that
   wish to exchange state information to place HTTP requests and
   responses within a larger context, which we term a &amp;quot;session&amp;quot;.  This
   context might be used to create, for example, a &amp;quot;shopping cart&amp;quot;, in
   which user selections can be aggregated before purchase, or a
   magazine browsing system, in which a user&#39;s previous reading affects
   which offerings are presented.

   There are, of course, many different potential contexts and thus many
   different potential types of session.  The designers&#39; paradigm for
   sessions created by the exchange of cookies has these key attributes:

      1.  Each session has a beginning and an end.

      2.  Each session is relatively short-lived.

      3.  Either the user agent or the origin server may terminate a
          session.

      4.  The session is implicit in the exchange of state information.
&lt;/code&gt;&lt;/pre&gt;&lt;p style=&#34;color: #549e76&#34;&gt;
This document describes &lt;span style=&#34;color: #ed61cb&#34;&gt;a way to create stateful sessions with HTTP
   requests and responses.&lt;/span&gt; Currently, HTTP servers respond to each
   client request without relating that request to previous or
   subsequent requests;
&lt;/p&gt;
&lt;p style=&#34;color: #549e76&#34;&gt;
the technique &lt;span style=&#34;color: #ed61cb&#34;&gt;allows clients and servers that
   wish to exchange state information to place HTTP requests and
   responses within a larger context&lt;/span&gt;, which we term a &lt;span style=&#34;color: #e35040&#34;&gt;&#34;session&#34;&lt;/span&gt;.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;更詳細可以參考: &lt;a href=&#34;https://blog.techbridge.cc/2019/08/10/session-and-cookie-rfc/&#34;&gt;Huli大大這篇&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-session-資訊-儲存位置-&#34;&gt;&lt;strong&gt;&amp;lt; Session 資訊 儲存位置 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-記憶體&#34;&gt;1. 記憶體&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;小應用在開發環境時，如果不需要共享狀態的情況下，存記憶體是個方便的方式，但除此之外也沒有什麼好處。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-cookie&#34;&gt;2. Cookie&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;把 Session 資訊存在 Cookie，也就是不是 Server 存狀態了，是 Client 存，所以每次 request 都會直接帶上 Session 資訊，所以不用擔心需要共享狀態的問題，安全性問題的話，按照一般做法一定會做處理(比如說 SignedCookie的作法)等等，真正比較大的問題是資料傳輸的量變大。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-快取-ex-redis&#34;&gt;3. 快取 (ex: Redis)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;這是大部份最常用的方式，特點快，也可以共享狀態，相比存在 Cookie ，當 Session 資訊量大的時候，可以節省網路的傳輸。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-資料庫&#34;&gt;4. 資料庫&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;依需求使用，一般不常出現。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-實踐-session-概念機制的兩種方式-&#34;&gt;&lt;strong&gt;&amp;lt; 實踐 Session 概念(機制)的兩種方式 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Cookie-Based Session (也就是 Client Side Session)&lt;/li&gt;
&lt;li&gt;使用 SessionID (也就是 Server Side Session )&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;所謂 Cookie-based session 指的是，今天要存的資料(狀態)都放在 cookie ，有可能是明文存，也有可能是處理過(編碼、加密)存，但基本上安全性問題，就算放基本上都會加密，缺點是：存太多東西在 Cookie ，會變得太笨重。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;SessionID 的使用方式是，把資料、狀態存在 Server，然後 Server 傳的 Set-cookie 是傳一個 SessionID，這個 SessionID 的做用就是當 Browser 傳過來 Server 時，Server 會去比對這個 SessionID 是不是跟當初一開始發給 Browser 時的紀錄是一樣的，相當於一個 Key，利用這個 SessionID 去換存在 Server 的資料、狀態，如此在 Server 和 Browser 就可以維持狀態紀錄，解決 HTTP Stateless&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RFC 6265 提到關於 SessionID 的例子&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt; RFC 6265 &amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc6265&#34;&gt;rfc6265 (ietf.org)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Using the Set-Cookie header, a server can send the user agent a short string in an HTTP response that the user agent will return in future HTTP requests that are within the scope of the cookie. For example, the server can send the user agent a &amp;quot;session identifier&amp;quot; named SID with the value 31d4d96e407aad42. The user agent then returns the session identifier in subsequent requests.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-實踐-session-概念機制的其他種方式-&#34;&gt;&lt;strong&gt;&amp;lt; 實踐 Session 概念(機制)的其他種方式 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;form 裡面放一個 hidden 的欄位&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;form name=&amp;quot;testform&amp;quot; action=&amp;quot;/xxx&amp;quot;&amp;gt;
&amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;jsessionid&amp;quot; value=&amp;quot;ByOK3vjFD75aPnrF7C2HmdnV6QZcEbzWoWiBYEnLerjQ99zWpBng!-145788764&amp;quot;&amp;gt;
&amp;lt;input type=&amp;quot;text&amp;quot;&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;網址列帶資訊(URL重寫)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;http://...../xxx;jsessionid= ByOK3vjFD75aPnrF7C2HmdnV6QZcEbzWoWiBYEnLerjQ99zWpBng!-145788764
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;http://...../xxx?jsessionid=ByOK3vjFD75aPnrF7C2HmdnV6QZcEbzWoWiBYEnLerjQ99zWpBng!-145788764
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-實踐-session-概念機制最常見做法-&#34;&gt;&lt;strong&gt;&amp;lt; 實踐 Session 概念(機制)最常見做法 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Server 如果需要 session (概念or機制or結構)。看怎麼解釋，但通常大家在說的就是，存某些狀態在 Server。那最常見的就是，Server 它想初始化一個 session，於是它就回傳一個 Set-Cookie 的 Header 到 User Agent, 如果這時候 Browser 決定繼續這個 session 的話，可以回傳 Cookie 這個 Header。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;這也是當初 RFC2109 &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc2109&#34;&gt;rfc2109 (ietf.org)&lt;/a&gt;的片段所描述的，也是我們現在常常在做的事，利用 Cookie 去實現 session 這個功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;接下來再找時間寫 Cookie 及其他相關紀錄&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;self-checklist&#34;&gt;Self Checklist:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;Session&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Understand &lt;code&gt;Session&lt;/code&gt; can means lots of things.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Know how to resolve problem with &lt;code&gt;Session&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/19786827&#34;&gt;https://www.zhihu.com/question/19786827&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.techbridge.cc/2019/08/10/session-and-cookie-rfc/&#34;&gt;https://blog.techbridge.cc/2019/08/10/session-and-cookie-rfc/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc2109&#34;&gt;https://datatracker.ietf.org/doc/html/rfc2109&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fred-zone.blogspot.com/2014/01/web-session.html&#34;&gt;https://fred-zone.blogspot.com/2014/01/web-session.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://iter01.com/194145.html&#34;&gt;https://iter01.com/194145.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.hellojcc.tw/introduce-session-and-cookie/&#34;&gt;https://blog.hellojcc.tw/introduce-session-and-cookie/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.jikexueyuan.com/project/node-lessons/cookie-session.html&#34;&gt;https://wiki.jikexueyuan.com/project/node-lessons/cookie-session.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/6844904073934667790&#34;&gt;https://juejin.cn/post/6844904073934667790&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yken919.pixnet.net/blog/post/45702341&#34;&gt;https://yken919.pixnet.net/blog/post/45702341&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/http/" term="http" label="http" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/session/" term="Session" label="Session" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/web/" term="Web" label="Web" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/cookie/" term="Cookie" label="Cookie" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/http/" term="Http" label="Http" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">[Python]觀念(2) yield, generator?，那 Scrapy 裡的 yield?</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/08/210805/python%E7%9A%84yield%E5%92%8Cscrapy%E7%9A%84yield/" />
            <id>https://linooohon.com/blog/posts/08/210805/python%E7%9A%84yield%E5%92%8Cscrapy%E7%9A%84yield/</id>
            <updated>2021-11-28T15:18:52&#43;09:00</updated>
            <published>2021-08-05T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;繼上篇 Iterator 紀錄，這次對 yield 的概念在此統整一下，同時也追了一下 Scrapy 的 source code&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/08_210805/08_210805_pythonyield_intro.png&#34; /&gt;</summary>
            
                <content type="html">&lt;h1 style=&#34;text-align:center&#34;&gt;
Python 的 yield 是什麼?，Scrapy 裡的 yield?
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;最近研究了一下 yield 的概念，在此統整一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/08_210805/08_210805_pythonyield_intro.png&#34; alt=&#34;Python 的 yield 是什麼?&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-關於-yield-&#34;&gt;&lt;strong&gt;&amp;lt; 關於 yield &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;談到 yield 就會談到 generator，但 generator 是什麼後面解釋！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 python 的定義中，function 中只要出現了 yield（yield expressions），那麼事實上定義的是一個 generator function。
跟一般的 function 不一樣，呼叫 generator function 就是會 return &amp;quot;generator iterator&amp;quot;。&lt;/p&gt;
&lt;h3 id=&#34;所以&#34;&gt;所以,&lt;/h3&gt;
&lt;p&gt;有 yield 的 function 被單純呼叫的時候會 return &amp;quot;generator iterator&amp;quot;，然後這時候還不會執行 function 定義的事情，那什麼時候執行？
大概有兩種執行方式:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;調用 Built-in Function &lt;code&gt;next()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用 for loop (實際 for loop 的步驟也是 magic method &lt;code&gt;__next__()&lt;/code&gt; 在處理)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;例子測試一下&#34;&gt;例子測試一下:&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;確實是 return generator iterator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;happy coding&amp;#34;&lt;/span&gt;
    
    
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_generator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;happy coding&amp;#34;&lt;/span&gt;
    
    
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# happy coding &amp;lt;class &amp;#39;str&amp;#39;&amp;gt;&lt;/span&gt;
    
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_generator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# &amp;lt;generator object get_generator at 0x10c424d60&amp;gt; &amp;lt;class &amp;#39;generator&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-幾個名詞先釐清-&#34;&gt;&lt;strong&gt;&amp;lt; 幾個名詞先釐清 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;p&gt;在 &lt;a href=&#34;https://docs.python.org/3.9/glossary.html#term-generator&#34;&gt;Python Glossary&lt;/a&gt; 裡定義了三個詞&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;generator&lt;/li&gt;
&lt;li&gt;generator iterator&lt;/li&gt;
&lt;li&gt;generator expression&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;generator-generator-iterator-generator-expression&#34;&gt;generator, generator iterator, generator expression&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;裡面寫道 (這裡只先做名詞區分不解釋)：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;generator
&lt;ul&gt;
&lt;li&gt;是一個 function 會回傳 generator iterator。&lt;/li&gt;
&lt;li&gt;而通常 generator 指的是一個大家常說的詞叫做 &lt;code&gt;generator function&lt;/code&gt;，但是在某些文檔裡也有人把它用來指 &lt;code&gt;generator iterator&lt;/code&gt;，&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;generator iterator
&lt;ul&gt;
&lt;li&gt;是一個被 generator function 創造出來的物件。(就我查詢的過程中，在某些文章裡會寫 &lt;code&gt;generator object&lt;/code&gt; 特別指出當下這個 generator 是被創造出來的 object, 而不是 function)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;generator expression
&lt;ul&gt;
&lt;li&gt;是一個 expression 會回傳 iterator。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&#34;color: #d19169&#34;&gt;名詞看到會有點疑惑，但把它搞清楚才是最佳解，以後看別人的文章或是文件，才不會模模糊糊:&lt;/p&gt;
&lt;p&gt;Glossary 對於 generator 的補充:&lt;/p&gt;
&lt;p style=&#34;color: #42bac7&#34;&gt;Usually refers to a generator function, but may refer to a generator iterator in some contexts. In cases where the intended meaning isn’t clear, using the full terms avoids ambiguity.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所以接下來我會用 generator function 和 generator iterator 這兩個來區別 function 與 object。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;關於 Generator 留到後面做解釋&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;現在只要先知道 function 裡有 yield 就是一個會回傳 generator iterator 的 generator function。
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;既然知道 yield 和 generator 的關係了，底下來個例子
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-generatorgenerator-function-例子解釋-&#34;&gt;&lt;strong&gt;&amp;lt; (generator)generator function 例子解釋 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;用這個 function 來理解一下，看到對岸的朋友解釋的文章，覺得挺好的，記錄下來！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;foo function is starting...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;res:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;執行結果:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;starting&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;********************&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;1-g--foo&#34;&gt;1. &lt;code&gt;g = foo()&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;因為 foo() 帶有 yield 所以根據定義，就算呼叫了 foo(), 他也不會開始執行。&lt;/p&gt;
&lt;p&gt;但是這裡他會得到一個生成器物件 &amp;quot;g&amp;quot; (generator iterator)。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;執行結果: 什麼都沒印&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-printnextg&#34;&gt;2. &lt;code&gt;print(next(g))&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;直到調用 next 方法 foo function 才正式開始執行，
先執行 foo 的 print(&#39;foo function is starting...&#39;) 然後進入 while loop，&lt;/p&gt;
&lt;p&gt;這時候遇到 yield，先把它想成 return ，所以這時候 return 一個 4, program(程序)就停了。
這裡很大的重點是，&amp;quot;並沒有把 4 assign(指派/賦值) 給 res&amp;quot;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;print(next(g)) 執行結果:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;next(g): print 了 &#39;foo function is starting...&#39;&lt;/li&gt;
&lt;li&gt;return 了 4, 所以又 print 了 4&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;foo function is starting...
4
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-print10&#34;&gt;3. &lt;code&gt;print(&#39;*&#39;*10)&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這行只是印開心的順便做一些區隔: print 10個 &#39;*&#39;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;print(&#39;*&#39;*10) 執行結果:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;********************
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-printnextg&#34;&gt;4. &lt;code&gt;print(next(g))&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這裡是第二次調用，每次調用會接續上一次停止的地方，也就是正準備把 4 assign(指派/賦值) 給 res 的時候，但注意這邊因為上一次調用 &lt;code&gt;next()&lt;/code&gt; 的最後一個步驟是 return 4 出去，所以這時候 &amp;quot;=&amp;quot; 右邊已經是 None 了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;print(next(g)) 執行結果:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;這時候 None 被 assign 給 res, res 就是 None，所以 print(&#39;res:&#39;, res) -&amp;gt; res: None。&lt;/li&gt;
&lt;li&gt;接著還在 loop 裡，又會跑到 yield 4, 所以 return 4 出來，所以最後還會 print 出 4。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;res: None
4
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;如果最後一行改成這樣-printgsend7&#34;&gt;如果最後一行改成這樣: &lt;code&gt;print(g.send(7))&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;## 改這行&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;7 就會 assign 給 res
所以 print(&#39;res:&#39;, res) -&amp;gt; res: 7&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;執行結果:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;foo function is starting...
4
********************
res: 7
4
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-key-point-&#34;&gt;&lt;strong&gt;&amp;lt; Key Point &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;每次調用 next() 他會記住上次停的地方，這次就會從那裡開始。&lt;/li&gt;
&lt;li&gt;而 generator iterator 也是 iterator 的一種，所以當然想處理 generator iterator 也是有兩種方式：
&lt;ul&gt;
&lt;li&gt;一次次自己調用 next()&lt;/li&gt;
&lt;li&gt;for loop它&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用 send() 可以接續上一次 yield 停住的地方並 assign 給左邊。&lt;/li&gt;
&lt;li&gt;generator 是 iterator 的一種，但 iterator 卻不一定是 generator。這個不難理解，依我自己的看法(這裡只是隨意舉例!)像是陸軍和特種部隊都會一樣的基本能力，但特種部隊擁有陸軍所沒有的特性, 能力(在程式碼這裡就會是: 定義, 功能, 佔用空間等等..)。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;isinstance-可以查看它是不是這裡不多說&#34;&gt;isinstance 可以查看它是不是，這裡不多說&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;也可以用 isinstance，來確認它是不是 Iterable, Iterator, Generator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-python=&#34; data-lang=&#34;python=&#34;&gt;import pandas as pd
import numpy as np
from collections.abc import Iterator, Iterable, Generator

# dic
dic_ = {&#39;name&#39;: &#39;phil&#39;, &#39;phone&#39;: &#39;0933333333&#39;}
print(&amp;quot;===============dic===============&amp;quot;)
print(isinstance(dic_, Iterable))
print(isinstance(dic_, Iterator))
print(isinstance(dic_, Generator))

# list
list_ = [&#39;a&#39;, 1, {&#39;key&#39;: &#39;value&#39;}, (1, 2), {1, 2}]
print(&amp;quot;===============list===============&amp;quot;)
print(isinstance(list_, Iterable))
print(isinstance(list_, Iterator))
print(isinstance(list_, Generator))

# tuple
tuple_ = (&#39;a&#39;, {&#39;key&#39;: &#39;value&#39;}, 2)
print(&amp;quot;===============tuple===============&amp;quot;)
print(isinstance(tuple_, Iterable))
print(isinstance(tuple_, Iterator))
print(isinstance(tuple_, Generator))

# range
range_ = range(1)
print(&amp;quot;===============range===============&amp;quot;)
print(isinstance(range_, Iterable))
print(isinstance(range_, Iterator))
print(isinstance(range_, Generator))

# string
string_ = &#39;a&#39;
print(&amp;quot;===============string===============&amp;quot;)
print(isinstance(string_, Iterable))
print(isinstance(string_, Iterator))
print(isinstance(string_, Generator))

# set
set_ = {&#39;a&#39;, 2, 3, (1, 2)}
print(&amp;quot;===============set===============&amp;quot;)
print(isinstance(set_, Iterable))
print(isinstance(set_, Iterator))
print(isinstance(set_, Generator))

# numpy array
np_array_ = np.array([1, 2, 3, 4])
print(&amp;quot;===============np_array===============&amp;quot;)
print(isinstance(np_array_, Iterable))
print(isinstance(np_array_, Iterator))
print(isinstance(np_array_, Generator))

# dataframe
df_ = pd.read_csv(&amp;quot;1.csv&amp;quot;)
print(&amp;quot;===============dataframe===============&amp;quot;)
print(isinstance(df_, Iterable))
print(isinstance(df_, Iterator))
print(isinstance(df_, Generator))

# bytes
bytes_1 = bytes(1)
print(&amp;quot;===============bytes===============&amp;quot;)
print(isinstance(bytes_1, Iterable))
print(isinstance(bytes_1, Iterator))
print(isinstance(bytes_1, Generator))

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;generator-到底是什麼目的用法再次解析&#34;&gt;Generator 到底是什麼，目的，用法(再次解析):&lt;/h3&gt;
&lt;p&gt;Python 中有一個東西叫做 List Comprehensions, 是 Python 可以簡潔的創造 list 的方式&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# [4, 16, 36, 64, 100]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;列出資料夾底下所有文件和資料夾&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;listdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 是個 list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p style=&#34;color: #d19169&#34;&gt;但是，如果今天我們要的內容很多，list 就會變得非常佔用記憶體，所以當我們要做的事，可以依照某種規則算出來，那我們就可以 loop 整個過程去持續推算下一個元素，這樣就不必創造很大很大的 list, 在 Python 中，這樣邊 loop 邊計算還真的有，就是 Generator(生成器)&lt;/p&gt;
&lt;p&gt;要創建 generator 除了上面有提過的 generator function，這裡再補充一個，只要把 List Comprehensions 改成小括號 &lt;code&gt;()&lt;/code&gt; 就行了。
就是所謂的 generator expression &lt;a href=&#34;https://docs.python.org/3.9/glossary.html#term-generator-expression&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;generator object &amp;lt;genexpr&amp;gt; at 0x106a674a0&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;那當然 generator 直接 print 沒東西，我們就是透過上面提過的 &lt;code&gt;next()&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;100
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Traceback (most recent call last):
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  File &amp;#34;/Users/linpinhung/Desktop/TMPF/06.py&amp;#34;, line 82, in &amp;lt;module&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    print(next(list_))
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;StopIteration
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;但一直用 next()，太麻煩，基本上都用 for loop 實現，且用 for loop 也不需關心 &lt;code&gt;StopIteration&lt;/code&gt;, Python 幫忙解決，這也就是上一篇提過的 Iterator 的特性之一，Generator Iterator 當然也會有 Iterator 的特性。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;100
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;generatorgenerator-iterator與-iterator的差異&#34;&gt;Generator(Generator Iterator)與 Iterator的差異:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;創建 Generator 我們用 &lt;code&gt;generator expression&lt;/code&gt; 或是 &lt;code&gt;generator function&lt;/code&gt; 而不使用 class 創建, 但創建 Iterator 我們用 &lt;code&gt;iter()&lt;/code&gt; 或是自己創建 class 寫 &lt;code&gt;__iter__()&lt;/code&gt;, &lt;code&gt;__next__()&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;Generator 用 yield 關鍵字，Iterator 沒有。&lt;/li&gt;
&lt;li&gt;Generator 在每次 yield 停住的時候會儲存狀態(ex: 變數)，但 Iterator 不會，他就是做 iteration 而已。&lt;/li&gt;
&lt;li&gt;Generator Function 裡可以不只有一個 yield。&lt;/li&gt;
&lt;li&gt;Generator 是 Iterator 的 subclass, 我們可以透過 &lt;code&gt;issubclass()&lt;/code&gt; 證明&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;collections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;types&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;issubclass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;types&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GeneratorType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;abc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;issubclass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;abc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Generator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collections&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;abc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#True&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-scrapy-&#34;&gt;&lt;strong&gt;&amp;lt; Scrapy &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;scrapy-框架裡常用的-yield-會有兩種情況&#34;&gt;Scrapy 框架裡常用的 yield, 會有兩種情況。&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一個是 yield item, 一個是 yield Request&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;自己在工作上有使用 Scrapy 的機會，
而出於好奇也想知道 Scrapy 在這裡怎麼會用 yield,
仔細去追 Scrapy 的 source code，就會發現以 &lt;code&gt;scrapy/crawler.py&lt;/code&gt; 底下的 class CrawlerRunner 為例:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 根據官方文檔&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scrapy&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;twisted.internet&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reactor&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scrapy.crawler&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CrawlerRunner&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scrapy.utils.log&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;configure_logging&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scrapy.utils.project&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_project_settings&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MySpider1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scrapy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Your first spider definition&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MySpider2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scrapy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Your second spider definition&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;configure_logging&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_project_settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CrawlerRunner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crawl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MySpider1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crawl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MySpider2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addBoth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reactor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;reactor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# the script will block here until all crawling jobs are finished&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;最一開始是呼叫了 class CrawlerRunner 的 crawl 方法：
這時後仔細看 source code 往下追，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;scrapy/crawler.py&lt;/code&gt; &lt;a href=&#34;https://github.com/scrapy/scrapy/blob/06f3d12c1208c380f9f1a16cb36ba2dfa3c244c5/scrapy/crawler.py&#34;&gt;source code&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scrapy.core.engine&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ExecutionEngine&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Crawler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;crawl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    
    &lt;span class=&#34;c1&#34;&gt;#(略)&lt;/span&gt;
    
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spider&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_create_spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;engine&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_create_engine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spider&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;engine&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open_spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# (略)&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_create_spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spidercls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_crawler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_create_engine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ExecutionEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# (略)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;追到 &lt;code&gt;scrapy/core/engine.py&lt;/code&gt;&lt;a href=&#34;https://github.com/scrapy/scrapy/blob/06f3d12c1208c380f9f1a16cb36ba2dfa3c244c5/scrapy/core/engine.py&#34;&gt;source code&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Slot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Iterable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;close_if_idle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nextcall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CallLaterOnce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;scheduler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;closing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Deferred&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inprogress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close_if_idle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;close_if_idle&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextcall&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nextcall&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scheduler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scheduler&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;heartbeat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LoopingCall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextcall&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;schedule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# (略)&lt;/span&gt;
    
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ExecutionEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_next_request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slot&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# typing&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spider&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# typing&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;paused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_needs_backout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_next_request_from_scheduler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_needs_backout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;StopIteration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start_requests&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Error while obtaining start requests&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exc_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;extra&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;spider&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crawl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spider_is_idle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;slot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close_if_idle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_spider_idle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其實看到 yield 就了解 generator 會有 next() 的實作，但是還是想親眼見到，所以：
看到第 32 行，找到 next()，也就安心了...
而 Scrapy 本身是在 Twisted 這個 asynchronous networking 的 library 架構下做處理，但這邊我還不是很理解，也不多說，這邊就記錄一下而已！&lt;/p&gt;
&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;self-checklist&#34;&gt;Self Checklist:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;yield&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;generator function&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;generator iterator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Figure out confusing terms&lt;code&gt;generator&lt;/code&gt;, &lt;code&gt;generator function&lt;/code&gt;, &lt;code&gt;generator iterator&lt;/code&gt;, &lt;code&gt;generator object&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Can you tell what is the difference between &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;generator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;next()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;send()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; How to make &lt;code&gt;generator iterator&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3.9/glossary.html#term-generator-expression&#34;&gt;generator expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3.9/glossary.html&#34;&gt;Python Glossary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kancloud.cn/smilesb101/python3_x/296095&#34;&gt;廖雪峰 Python 3.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/citycoddee/python%E9%80%B2%E9%9A%8E%E6%8A%80%E5%B7%A7-6-%E8%BF%AD%E4%BB%A3%E9%82%A3%E4%BB%B6%E5%B0%8F%E4%BA%8B-%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3-iteration-iterable-iterator-iter-getitem-next-fac5b4542cf4&#34;&gt;迭代那件小事：深入了解 Iteration / Iterable / Iterator / &lt;strong&gt;iter&lt;/strong&gt; / &lt;strong&gt;getitem&lt;/strong&gt; / &lt;strong&gt;next&lt;/strong&gt; / yield&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://data-flair.training/blogs/python-generator-vs-iterator/&#34;&gt;Python Generators vs Iterators – Comparison Between Python Iterators and Generators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;!-- &lt;a href=&#34;https://linooohon.com/blog/blog/posts/08/210805/python的yield和scrapy的yield&#34;&gt;Python 觀念(2) yield 是什麼?，那Scrapy 裡的 yield?&lt;/a&gt; --&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/python/" term="python" label="python" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/yield/" term="Yield" label="Yield" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/python/" term="Python" label="Python" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/scrapy/" term="Scrapy" label="Scrapy" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/generator/" term="Generator" label="Generator" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">[Python]觀念(1) - Iteration, Iterable, Iterator</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/07/210727/Python%20%E8%A7%80%E5%BF%B5%281%29%20-%20Iteration,%20Iterable,%20Iterator/" />
            <id>https://linooohon.com/blog/posts/07/210727/Python%20%E8%A7%80%E5%BF%B5%281%29%20-%20Iteration,%20Iterable,%20Iterator/</id>
            <updated>2021-11-28T15:18:44&#43;09:00</updated>
            <published>2021-07-27T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;Python Iteration 如何運行，for loop 本質 - Iteration, Iterable, Iterator&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/07_210727/07_210727_python_iteration.png&#34; width=&#34;40%&#34;/&gt;</summary>
            
                <content type="html">&lt;h1 style=&#34;text-align:center&#34;&gt;
Python 觀念紀錄 - Iteration, Iterable, Iterator
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在此對 Iteration, Iterable, Iterator 的觀念做個紀錄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/07_210727/07_210727_python_iteration.png&#34; alt=&#34;Python 觀念紀錄 - Iteration, Iterable, Iterator&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;了解-iteration-迭代&#34;&gt;了解 Iteration (迭代)&lt;/h2&gt;
&lt;h3 id=&#34;-iteration-&#34;&gt;&lt;strong&gt;&amp;lt; Iteration &amp;gt;&lt;/strong&gt;:&lt;/h3&gt;
&lt;p&gt;是個廣義名詞, 意思是每次去 &amp;quot;遍歷(走訪)&amp;quot; 1 個 object, 對裡面每個 item 做想操作的事的這個過程，ex: 像是在程式碼中操作 loop，我們可以說這個是一種 Iteration。&lt;/p&gt;
&lt;h3 id=&#34;-iterable-iterator兩個名詞必須分清楚-&#34;&gt;&lt;strong&gt;&amp;lt; Iterable, Iterator兩個名詞必須分清楚 &amp;gt;&lt;/strong&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Iterable&lt;/li&gt;
&lt;li&gt;Iterator&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;iterable-可迭代物件&#34;&gt;Iterable (可迭代物件):&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Python 中 Iterable 和 Iterator 有特別意義，先解釋 Iterable。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;python對它的定義&#34;&gt;Python對它的定義:&lt;/h5&gt;
&lt;p&gt;是一個物件，這個物件裡要有 &lt;code&gt;__iter__()&lt;/code&gt; 方法或是 &lt;code&gt;__getitem__()&lt;/code&gt; 方法(要能支持從 0 開始的index)，這兩個其中一個條件達成，它就是定義上的 Iterable。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;為什麼要有這兩個方法，因為 Python 說要成為 Iterable 就必須支持 Iteration Protocol 或是 Sequence Protocol。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;__iter__()&lt;/code&gt; 對應 Iteration Protocol。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;__getitem__()&lt;/code&gt; 對應 Sequence Protocol。&lt;/p&gt;
&lt;h5 id=&#34;特徵&#34;&gt;特徵:&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;是一個物件。&lt;/li&gt;
&lt;li&gt;可以 for loop 遍歷的 objects 它都是定義上 Iterable 的範圍。&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;基本上&#34;&gt;基本上：&lt;/h5&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;當今天迭代的 Iterable 是 String, 那每次就是得到單個字符。&lt;/li&gt;
&lt;li&gt;當今天迭代的 Iterable 是 文件，那每次得到的就是每一行的字符串。&lt;/li&gt;
&lt;li&gt;當今天迭代的 Iterable 是 Dictionary, 那每次得到的就是該次的 Key。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;dic, list, tuple, range, string, set, numpy array, dataframe, bytes 都是 Iterable
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;那-__iter__-和-__getitem__-是什麼&#34;&gt;那 &lt;code&gt;__iter__()&lt;/code&gt; 和 &lt;code&gt;__getitem__()&lt;/code&gt; 是什麼？&lt;/h5&gt;
&lt;p&gt;它們是 Python Magic Methods
&lt;code&gt;__iter__()&lt;/code&gt;: &lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__iter__&#34;&gt;Docs&lt;/a&gt;
&lt;code&gt;__getitem__()&lt;/code&gt;: &lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__getitem__&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;當 &lt;code&gt;__iter__()&lt;/code&gt; 被呼叫時，會 return 一個 Iterator(新的 Iterator)
當 &lt;code&gt;__getitem__()&lt;/code&gt; 在 class 裡被定義, 使用object[index]形式, 就會呼叫該方法:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python=&#34; data-lang=&#34;python=&#34;&gt;class Hi():
    def __init__(self, name):
        self.name = name
    def __getitem__(self, key):
        return &amp;quot;__getitem__ is called&amp;quot;

hi = Hi(&amp;quot;Phil&amp;quot;)
print(hi[2])  

# 輸出:
# __getitem__ is called
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那什麼是 Iterator，接著講：&lt;/p&gt;
&lt;h4 id=&#34;iterator-迭代器&#34;&gt;Iterator (迭代器):&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Iterator: &lt;a href=&#34;https://docs.python.org/3/library/stdtypes.html#iterator-types&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;python-對它的定義&#34;&gt;Python 對它的定義:&lt;/h5&gt;
&lt;p&gt;它是一個物件，這個物件裡要有 &lt;code&gt;__iter__()&lt;/code&gt; 方法和 &lt;code&gt;__next__()&lt;/code&gt; 方法，兩個方法都必須要有，那它就是定義上的 Iterator。&lt;/p&gt;
&lt;h5 id=&#34;特徵-1&#34;&gt;特徵:&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;是一個物件。&lt;/li&gt;
&lt;li&gt;Iterable 其實可以 for loop 是因為 Python 私底下幫忙轉換為 Iterator 然後做處理。&lt;/li&gt;
&lt;li&gt;Iterator 才可以調用 &lt;code&gt;next()&lt;/code&gt;, Iterable 不行。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;而, dic, list, tuple, range, string, set, numpy array, dataframe, bytes 都不是 Iterator
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;從下面程式碼可以發現他們裡面都沒有 &lt;code&gt;__next__()&lt;/code&gt;，所以不會是 Iterator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# dic&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dic_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;phil&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;phone&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;0933333333&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============dic===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dic_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dic_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dic_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# list&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============list===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# tuple&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;tuple_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============tuple===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tuple_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tuple_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tuple_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# range&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;range_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============range===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;range_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;range_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;range_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# string&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============string===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# set&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;set_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============set===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# numpy array&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;np_array_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============np_array===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np_array_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np_array_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np_array_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# dataframe&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;1.csv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============dataframe===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# bytes&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;bytes_1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;===============bytes===============&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__iter__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__getitem__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;hasattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytes_1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__next__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# False&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h5 id=&#34;那如何成為-iterator--iter-next&#34;&gt;那如何成為 Iterator:  &lt;code&gt;iter()&lt;/code&gt;, &lt;code&gt;next()&lt;/code&gt;&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;根據 Iterator 成立的條件，我們如果 call Builtin Function &lt;code&gt;iter()&lt;/code&gt;
裡面帶 Iterable，就可以 return Iterator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;所以&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;iter()&lt;/code&gt; 會 return Iterator&lt;/li&gt;
&lt;li&gt;Iterator 裡有 &lt;code&gt;next()&lt;/code&gt; 所以可以使用 &lt;code&gt;next()&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;next()&lt;/code&gt; 的作用:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Iterator 可以被 &lt;code&gt;next()&lt;/code&gt; 調用，並不斷的返回下一個資料，直到沒有資料的時候，會拋出 StopIteration error, 而這是什麼意思呢？等等再底下有個例子可以解釋。&lt;/p&gt;
&lt;p&gt;在 Python Docs &lt;a href=&#34;https://docs.python.org/3.9/glossary.html#term-iterator&#34;&gt;Glossary&lt;/a&gt; 裡面，寫道，Iterator is an object representing a stream of data，可以看到 Iterator 是代表一個資料流的概念，也就是說程式它本身其實不知道整個長度，像是 &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt; 是一開始就知道長度的，但 Iterator 的概念是&lt;code&gt;流&lt;/code&gt;, 每當我需要的時候，我才通過 &lt;code&gt;next()&lt;/code&gt; 拿到下一個我要的產出(資料), 以我的觀點 Iterator 有點像是一個 被動、懶惰的代表, 我喊它，它才動, 我不喊它, 它永遠都不動，所以他的計算是被動的，只有在需要 return 下一個資料的時候它才會行動(計算)。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ex: 範例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-python=&#34; data-lang=&#34;python=&#34;&gt;ss_ = &amp;quot;abc&amp;quot;
iter_ss_ = iter(ss_)
print(hasattr(iter_ss_, &#39;__iter__&#39;)) # True
print(hasattr(iter_ss_, &#39;__getitem__&#39;)) # False
print(hasattr(iter_ss_, &#39;__next__&#39;)) # True

print(next(iter_ss_))
print(next(iter_ss_))
print(next(iter_ss_))


# 輸出:
&amp;quot;&amp;quot;&amp;quot;
True
False
True
a
b
c
&amp;quot;&amp;quot;&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;底下這裡就會報錯因為不是 Iterator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-python=&#34; data-lang=&#34;python=&#34;&gt;ss_ = &amp;quot;abc&amp;quot;
next(ss_)

# 輸出
&amp;quot;&amp;quot;&amp;quot;
True
False
True
Traceback (most recent call last):
TypeError: &#39;str&#39; object is not an iterator
&amp;quot;&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;-關於-iter-__iter__-next-__next__--&#34;&gt;&lt;strong&gt;&amp;lt; 關於 &lt;code&gt;iter()&lt;/code&gt;, &lt;code&gt;__iter__()&lt;/code&gt;, &lt;code&gt;next()&lt;/code&gt;, &lt;code&gt;__next__()&lt;/code&gt; &amp;gt;&lt;/strong&gt; :&lt;/h3&gt;
&lt;p&gt;最一開始我也搞的滿模糊的，但要理解可以先拆分：&lt;/p&gt;
&lt;h4 id=&#34;built-in-function-iter-next&#34;&gt;Built-in Function: &lt;code&gt;iter()&lt;/code&gt; &lt;code&gt;next()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;iter()&lt;/code&gt;, &lt;code&gt;next()&lt;/code&gt; : Python Built-In Function &lt;a href=&#34;https://docs.python.org/3/library/functions.html&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所謂 Built-In Function, 你只要 call 它，Python 就會照著他原本寫好的劇本去跑。&lt;/p&gt;
&lt;h4 id=&#34;magic-methods-__iter__-__next__&#34;&gt;Magic Methods: &lt;code&gt;__iter__()&lt;/code&gt; &lt;code&gt;__next__()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;__iter__()&lt;/code&gt;, &lt;code&gt;__next__()&lt;/code&gt;: Python Magic Methods(Dunders)&lt;/p&gt;
&lt;p&gt;所謂 Magic Methods, 就是由 class 裡所提供的一些 methods, Python 將這些 methods 特徵弄成前後各兩個底線，而這些 methods 之所以很 magic(自認為..)，是因為..其實我們做的很多事情，都是他們幫我們代勞的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;代勞是什麼意思呢？
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;看一下這個例子:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;#3&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__add__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#3&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 會發現都是 print 出 3&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 當我們用 Int 這個 type 做加法, `+` 和 使用 `__add__()` 是一樣的結果。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;err&#34;&gt;如果我們用&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`help()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;看一下&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Int&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;會發現它所定義的東西就是 `+` 要做的事&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;__add__(self, value, /)
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    Return self+value.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;那意思是我們可以自己客製化-object-修改這個-object-的--的功能&#34;&gt;那意思是我們可以自己客製化 object 修改這個 object 的 &lt;code&gt;+&lt;/code&gt; 的功能&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;CustomPlus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__add__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;__add__ is called &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CustomPlus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__add__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# __add__ is called &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# -1&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# __add__ is called &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# -1&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 可以發現 cp + 2 也是走 class 裡的 __add__() 所以結果就也會變成 -1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;所以結論是&#34;&gt;所以，結論是:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;err&#34;&gt;使用&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`+`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;的背後，其實&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;是去找&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`Int`&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;所定義的 `&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;__add__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;然後叫它做事&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;在-python-中有數不清像--這樣由-__add__-代勞的事情&#34;&gt;在 Python 中有數不清像 &lt;code&gt;+&lt;/code&gt; 這樣由 &lt;code&gt;__add__()&lt;/code&gt; 代勞的事情，&lt;/h4&gt;
&lt;p&gt;詳細可以看 &lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#special-method-names&#34;&gt;Docs 3. Data model 這頁&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;那同理回到主題&#34;&gt;那同理，回到主題:&lt;/h4&gt;
&lt;p&gt;其實 &lt;code&gt;iter()&lt;/code&gt; &lt;code&gt;next()&lt;/code&gt; 是會去找當下的 type 所能使用的 &lt;code&gt;__iter__()&lt;/code&gt;, &lt;code&gt;__next__()&lt;/code&gt; 代勞，白話一點就是 call &lt;code&gt;iter()&lt;/code&gt; &lt;code&gt;next()&lt;/code&gt; 的下一瞬間，Python 就是會設法 call &lt;code&gt;__iter__()&lt;/code&gt;, &lt;code&gt;__next__()&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;一個小結論&#34;&gt;一個小結論:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`iter()`&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`next()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;可以說是等價於&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`__iter__()`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`__next__()`&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;但&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`__iter__()`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`__next__()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;不等於&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`iter()`&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`next()`&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;因為就像上面說的&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;magic&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;可以客製化&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;但&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Built&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Function&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;就是照著劇本走，&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;所以當你把&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`__iter__()`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`__next__()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;改成不照著&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`iter()`&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`next()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;劇本規定的時後，再來使用&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`iter()`&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`next()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;就肯定會報錯&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;看一下底下&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`iter()`&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;的例子&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;用-iter-再舉個例子&#34;&gt;用 &lt;code&gt;iter()&lt;/code&gt; 再舉個例子:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;iter_s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;__iter__s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__iter__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iter_s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__iter__s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 輸出&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;str_iterator&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;str_iterator&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre&gt;&lt;code&gt;這裡沒問題，兩個就是做一樣的事，但如果底下我們自定義呢?
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;這裡自訂義 class Foo:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__iter__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Foo&amp;#34;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__iter__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 輸出不會報錯&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Foo &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;如果改成 &lt;code&gt;iter()&lt;/code&gt; 這時底下這裡就會出錯，因為 &lt;code&gt;iter()&lt;/code&gt; 的劇本就是堅持要拿到 &lt;code&gt;Iterator&lt;/code&gt;, 你給他 &lt;code&gt;str&lt;/code&gt; 就肯定噴錯&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__iter__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Foo&amp;#34;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 輸出會報錯&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Traceback (most recent call last):
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;print(iter(foo))
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;TypeError: iter() returned non-iterator of type &amp;#39;str&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;小結論:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;所有可 for loop 的 object 都是 Iterable。&lt;/li&gt;
&lt;li&gt;所有可作用於 &lt;code&gt;next()&lt;/code&gt; 的 object 都是 Iterator。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt; 這些是 Iterable 不是 Iterator, 但可以使用 &lt;code&gt;iter()&lt;/code&gt; return 一個 Iterator。&lt;/li&gt;
&lt;li&gt;可以自己做 class 做出 Iterator, 本質上 Iterator 可以 for loop 是由 &lt;code&gt;__iter__()&lt;/code&gt; return self, 也就是 return object 自己去實現的，如此才能不斷繼續調用自己的 &lt;code&gt;__next__()&lt;/code&gt; 如果 class 裡只實現 &lt;code&gt;__next__()&lt;/code&gt;，那是不能使用 for loop 的，只能調用 next() 一個一個呼叫。&lt;/li&gt;
&lt;li&gt;那 &lt;code&gt;next()&lt;/code&gt; return 什麼？ 你讓它 return 什麼它就 return 什麼。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;

&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;list&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;int&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;lt;class &amp;#39;dict&amp;#39;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 當然也是可以客製化 class 裡的 `__next__()`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;關於前面提到-for-loop-的概念&#34;&gt;關於前面提到 for loop 的概念:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;for loop 的本質上就是通過不斷調用 &lt;code&gt;next()&lt;/code&gt; 實現的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ex:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;實際上相當於是:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 先得到 Iterator&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#獲得下一個值&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;StopIteration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 遇到 StopIteration 就退出 loop&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;front======&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#獲得下一個值&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;back======&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;StopIteration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 遇到 StopIteration 就退出 loop&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;到底了======&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
        
        
&lt;span class=&#34;c1&#34;&gt;# 如果仔細這樣 print&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;front======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;back======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;front======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;back======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;front======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;back======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;front======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;back======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;front======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;back======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;front======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;到底了======
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 會發現 第 6 次 call next(), 就出現 exception&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;所以 for 語句是如何 loop 的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;先判斷是否為可迭代物件(Iterable)，不是的話直接報錯: TypeError: &#39;xxxx&#39; object is not iterable，是的話調用 &lt;code&gt;__iter__()&lt;/code&gt;，並 return 一個迭代器(Iterator)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;不斷的調用迭代器(Iterato)的 &lt;code&gt;__next__()&lt;/code&gt; 方法，每次都按照順序返回迭代器(Iterator)中的一個值&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;迭代到最後，已經沒有元素了，這時就會拋出 StopIteration，但是這個異常就像上面的例子一樣會做處理，Python 自己會處理掉，不會給 developer 看。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;收尾&#34;&gt;收尾:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Iteration(迭代): 可以指一個概念，輪廓，操作過程，是一個廣義名詞，在程式中的例子有 for loop&lt;/li&gt;
&lt;li&gt;Iterable(可迭代物件): 一個物件，根據 Python 的定義，得出結論:
&lt;ol&gt;
&lt;li&gt;如果可以 for loop 它，就是 Iterable 的範疇&lt;/li&gt;
&lt;li&gt;但 Iterable 可以 for loop 是因為 Python 幫我們把它轉變成 Iterator&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Iterator(迭代器): 一個物件，根據 Python 的定義，得出結論：
&lt;ol&gt;
&lt;li&gt;Python for loop 的原理就是需要 Iterator，然後不斷調用 Iterator 的 &lt;code&gt;__next__()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;產生 Iterator 的方式:
&lt;ul&gt;
&lt;li&gt;iter()&lt;/li&gt;
&lt;li&gt;自己客製化 class&lt;/li&gt;
&lt;li&gt;產生 generator iterator (或是叫做 generator object / generator)(是一種 Iterator，下篇會敘述)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-end&#34;&gt;The End:&lt;/h2&gt;
&lt;h3 id=&#34;-self-checklist-&#34;&gt;&lt;strong&gt;&amp;lt; Self Checklist &amp;gt;&lt;/strong&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;Iteration&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;Iterable&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;Iterator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Can you tell what is the difference between &lt;code&gt;Iterable&lt;/code&gt; and &lt;code&gt;Iterator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;Built-in Function&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain what is &lt;code&gt;Magic Methods&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Explain how Python &lt;code&gt;for loop&lt;/code&gt; works.&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Use &lt;code&gt;hasattr()&lt;/code&gt;, &lt;code&gt;next()&lt;/code&gt;, &lt;code&gt;iter()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-reference-&#34;&gt;&lt;strong&gt;&amp;lt; Reference &amp;gt;&lt;/strong&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__iter__&#34;&gt;Python &lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#object.__getitem__&#34;&gt;Python &lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/library/stdtypes.html#iterator-types&#34;&gt;Python Iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3.9/glossary.html&#34;&gt;Python Glossary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/library/functions.html&#34;&gt;Python Built-In Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#special-method-names&#34;&gt;Python Docs 3. Data model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kancloud.cn/smilesb101/python3_x/296095&#34;&gt;廖雪峰 Python 3.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/citycoddee/python%E9%80%B2%E9%9A%8E%E6%8A%80%E5%B7%A7-6-%E8%BF%AD%E4%BB%A3%E9%82%A3%E4%BB%B6%E5%B0%8F%E4%BA%8B-%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3-iteration-iterable-iterator-iter-getitem-next-fac5b4542cf4&#34;&gt;迭代那件小事：深入了解 Iteration / Iterable / Iterator / &lt;strong&gt;iter&lt;/strong&gt; / &lt;strong&gt;getitem&lt;/strong&gt; / &lt;strong&gt;next&lt;/strong&gt; / yield&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;:&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://linooohon.com/blog/blog/posts/08/210810/python的yield和scrapy的yield&#34;&gt;Python 觀念(2) yield 是什麼?，那Scrapy 裡的 yield?&lt;/a&gt;&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/python/" term="python" label="python" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/python/" term="Python" label="Python" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/iterator/" term="Iterator" label="Iterator" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">[Django] - part1.2: Official Docs Note</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/06/210720/Django-Note/" />
            <id>https://linooohon.com/blog/posts/06/210720/Django-Note/</id>
            <updated>2022-02-24T01:34:32&#43;09:00</updated>
            <published>2021-07-20T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;關於 Django 的官方文件筆記(EN)&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/06_210720/06_210720_django.png&#34; width=&#34;30%&#34;/&gt;</summary>
            
                <content type="html">&lt;h1 style=&#34;text-align:center&#34;&gt;
「Django」part1.2: Official Docs Note(EN)
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;關於 Django 的官方文件筆記(EN)，紀錄起來，讓自己可以快速統整 👐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/06_210720/06_210720_django.png&#34; alt=&#34;關於 Django 的官方文件筆記(EN)&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-intro-&#34;&gt;&lt;strong&gt;&amp;lt; Intro &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&amp;quot;A popular python web framework ! &amp;quot; ----&amp;gt;
&lt;a href=&#34;https://docs.djangoproject.com/en/3.2/intro/tutorial01/&#34;&gt;Django Docs&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-quick-start-&#34;&gt;&lt;strong&gt;&amp;lt; Quick Start &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip install Django
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;1-create-django-project&#34;&gt;1. Create Django Project&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;django-admin startproject mysite
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-run-locally&#34;&gt;2. Run locally&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;http://127.0.0.1:8000/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;cd mysite
python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Changing the port&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# http://127.0.0.1:8080/&lt;/span&gt;
python manage.py runserver &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# http://0.0.0.0:8000/&lt;/span&gt;
python manage.py runserver 0:8000
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-create-app-&#34;&gt;&lt;strong&gt;&amp;lt; Create App &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-create-app-polls&#34;&gt;1. Create App &lt;code&gt;polls&lt;/code&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Under the same path with &lt;code&gt;manage.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;python manage.py startapp polls
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-write-first-view-in-app&#34;&gt;2. Write first View in App&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;In the &lt;code&gt;polls/views.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.shortcuts&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;render&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Create your views here.&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.http&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HttpResponse&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HttpResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, world. You&amp;#39;re at the polls index.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;3-create-urlconf-to-configure-urlpatterns-in-polls&#34;&gt;3. Create URLconf to configure urlpatterns in &lt;code&gt;polls&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Under &lt;code&gt;polls/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create &lt;code&gt;urls.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;In the &lt;code&gt;polls/urls.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.urls&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;views&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;urlpatterns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;views&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;4-point-the-root-urlconf-at-pollsurls-module--setting-in-mysiteurlspy-&#34;&gt;4. Point the root URLconf at &lt;code&gt;polls.urls&lt;/code&gt; module ( Setting in &lt;code&gt;mysite/urls.py&lt;/code&gt; )&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;In the &lt;code&gt;mysite/urls.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.contrib&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;admin&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.urls&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;include&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;urlpatterns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;admin/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;admin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;urls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;polls/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;polls.urls&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;5-run-locally-to-see-polls&#34;&gt;5. Run locally to see &lt;code&gt;polls/&lt;/code&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;http://localhost:8000/polls/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-db-setup-&#34;&gt;&lt;strong&gt;&amp;lt; DB Setup &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;--creates-db-table&#34;&gt;- Creates db table&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;This command looks at the &lt;code&gt;INSTALLED_APPS&lt;/code&gt; setting and creates any necessary database tables according to the database settings in &lt;code&gt;mysite/settings.py&lt;/code&gt; and the database migrations shipped with the app.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;--creating-models&#34;&gt;- Creating models&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;In the &lt;code&gt;polls/models.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.db&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Create your models here.&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;question_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CharField&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pub_date&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DateTimeField&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date published&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;question&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ForeignKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;on_delete&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CASCADE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;choice_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CharField&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;votes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IntegerField&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;--activating-models&#34;&gt;- Activating models&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;We need to include app in project, so we need to reference to its configuration class in the
&lt;code&gt;mysite/settings.py&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;polls.apps.PollsConfig&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.contrib.admin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.contrib.auth&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.contrib.contenttypes&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.contrib.sessions&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.contrib.messages&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.contrib.staticfiles&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;But why is &lt;code&gt;polls.apps.PollsConfig&lt;/code&gt;, it&#39;s because polls configuration file is in &lt;code&gt;polls/apps.py&lt;/code&gt; and the Class is called &lt;code&gt;PollsConfig&lt;/code&gt;, so we need to write &lt;code&gt;polls.apps.PollsConfig&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;--make-migrations&#34;&gt;- Make migrations&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python manage.py makemigrations polls
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Telling Django that you’ve made some changes to your models and that you’d like the changes to be stored as a migration.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# You will see somthing like this.&lt;/span&gt;
Migrations &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;polls&amp;#39;&lt;/span&gt;:
  polls/migrations/0001_initial.py
    - Create model Question
    - Create model Choice
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# And migrations folder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;--get-the-raw-sql-for-the-migration-you-give&#34;&gt;- Get the Raw SQL for the migration you give.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python manage.py sqlmigrate polls 0001
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;--check-for-any-problems-in-project&#34;&gt;- Check for any problems in project&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python manage.py check
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;--create-model-tables-in-daatbase&#34;&gt;- Create model tables in daatbase:&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;So run migrate again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-so-basic-migrate-workflow-is&#34;&gt;&lt;strong&gt;&amp;lt; So, Basic Migrate Workflow is:&amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Change models in &lt;code&gt;models.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Activate models in INSTALLED_APPS&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python manage.py makemigrations&lt;/code&gt; to create migrations for new changes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python manage.py migrate&lt;/code&gt; to apply changes to the database.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;-django-python-shell-&#34;&gt;&lt;strong&gt;&amp;lt; Django python shell &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;--run-this-command-to-enter&#34;&gt;- Run this command to enter:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;python manage.py shell
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;--can-use-django-framework-to-edit-project-add-some-change-in-database-here&#34;&gt;- Can use django framework to edit project, add some change in database here.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;polls.models&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet []&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.utils&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question_text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;What&amp;#39;s new?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pub_date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question_text&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;#34;What&amp;#39;s new?&amp;#34;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pub_date&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# datetime.datetime(2012, 2, 26, 13, 0, 0, 775217, tzinfo=&amp;lt;UTC&amp;gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;What&amp;#39;s up?&amp;#34;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question_text&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;#34;What&amp;#39;s up?&amp;#34;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet [&amp;lt;Question: Question object (1)&amp;gt;]&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Because usually we don&#39;t want &lt;code&gt;Question.objects.all()&lt;/code&gt; to show &lt;code&gt;&amp;lt;QuerySet [&amp;lt;Question: Question object (1)&amp;gt;]&amp;gt;&lt;/code&gt; for us, we want more clear infos for the model object we choose, so we can add &lt;code&gt;__str__()&lt;/code&gt; in models.py class&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;--adding-__str__-method-to-both-question-and-choice-in-pollsmodelspy&#34;&gt;- Adding &lt;code&gt;__str__()&lt;/code&gt; method to both Question and Choice in &lt;code&gt;polls/models.py&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.db&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.utils&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# Here we just return text&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# ...&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__str__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question_text&lt;/span&gt;
    
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;was_published_recently&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pub_date&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;days&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;models&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# ...&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__str__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_text&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;--testing-and-playing-around-with-shell-again&#34;&gt;- Testing and playing around with shell again:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;python manage.py shell
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;polls.models&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet [&amp;lt;Question: What&amp;#39;s up?&amp;gt;]&amp;gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# So now we can see the clear info for what we choose&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet [&amp;lt;Question: What&amp;#39;s up?&amp;gt;]&amp;gt;&lt;/span&gt;


&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question_text__startswith&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;What&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet [&amp;lt;Question: What&amp;#39;s up?&amp;gt;]&amp;gt;&lt;/span&gt;


&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.utils&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;current_year&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pub_date__year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current_year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;Question: What&amp;#39;s up?&amp;gt;&lt;/span&gt;


&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# pk is primary key&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;Question: What&amp;#39;s up?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;was_published_recently&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# True&lt;/span&gt;


&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet []&amp;gt;&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# Create three choices.&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Not much&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;votes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;Choice: Not much&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;The sky&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;votes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;Choice: The sky&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Just hacking again&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;votes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Choice objects have API access to their related Question objects.&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;Question: What&amp;#39;s up?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet [&amp;lt;Choice: Not much&amp;gt;, &amp;lt;Choice: The sky&amp;gt;, &amp;lt;Choice: Just hacking again&amp;gt;]&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 3&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Use double underscores to separate relationships.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Find all Choices for any question whose pub_date is in this year&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Choice&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;question__pub_date__year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current_year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;QuerySet [&amp;lt;Choice: Not much&amp;gt;, &amp;lt;Choice: The sky&amp;gt;, &amp;lt;Choice: Just hacking again&amp;gt;]&amp;gt;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Let&amp;#39;s delete one of the choices. Use delete() for that.&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice_text__startswith&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Just hacking&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;delete&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;So basically, we can use &lt;code&gt;python manage.py shell&lt;/code&gt; to write some python code and also Django framework syntex.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-login-to-django-admin-&#34;&gt;&lt;strong&gt;&amp;lt; Login to Django admin &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;--creating-an-admin-user&#34;&gt;- Creating an admin user&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python manage.py createsuperuser
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;Username: admin
Email address: xxxxxx@xxxx
Password: **********
Password (again): *********
Superuser created successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Go to http://127.0.0.1:8000/admin/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;And enter username and password.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/06_210720/06_210720_django_adminlogin.png&#34; alt=&#34;linooohon@gmail.com&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Will see the Django administration&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/06_210720/06_210720_django_admininterface.png&#34; alt=&#34;linooohon@gmail.com&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;--register-our-own-models-in-django-admin-interface&#34;&gt;- Register our own models in Django admin interface.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;In the &lt;code&gt;polls/admin.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;from django.contrib import admin

# Register your models here.
from .models import Question, Choice
admin.site.register(Question)
admin.site.register(Choice)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;review&#34;&gt;Review:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&amp;quot;Project&amp;quot; and &amp;quot;App&amp;quot;.&lt;/li&gt;
&lt;li&gt;Remember Migration Workflow.&lt;/li&gt;
&lt;li&gt;Using django python shell.&lt;/li&gt;
&lt;li&gt;Create user for django admin interface and login.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.djangoproject.com/en/3.2/intro/tutorial01/&#34;&gt;Django Official Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;!-- &lt;a href=&#34;https://linooohon.com/blog/blog/posts/01「Git 介紹」什麼是 git rebase&#34;&gt;「Flask」02&lt;/a&gt; --&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/python/" term="python" label="python" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/django/" term="django" label="django" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/django/" term="Django" label="Django" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/python/" term="Python" label="Python" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/web/" term="Web" label="Web" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">「Flask」02: Static File handling, Database connection</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/05/210714/%E3%80%8C%E3%80%8CFlask%E3%80%8D02:%20Static%20File%20handling,%20Database%20connection/" />
            <id>https://linooohon.com/blog/posts/05/210714/%E3%80%8C%E3%80%8CFlask%E3%80%8D02:%20Static%20File%20handling,%20Database%20connection/</id>
            <updated>2021-11-28T15:18:11&#43;09:00</updated>
            <published>2021-07-14T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;上次紀錄了 Flask 基本處理，這次紀錄 Static File 和 DB 連線(EN)&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/04_05_210710/04_05_210710_flask_intro.png&#34; width=&#34;30%&#34;/&gt;</summary>
            
                <content type="html">&lt;h1 style=&#34;text-align:center&#34;&gt;
「Flask」02: Static File handling, Database connection
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;前陣子用 Flask 實做了一個 LifePlaylist App 這裡簡單紀錄一下基本的東西，以後回頭更快重拾記憶🤧 -  第二篇&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/04_05_210710/04_05_210710_flask_intro.png&#34; alt=&#34;上次紀錄了 Flask 基本處理，這次&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-intro-&#34;&gt;&lt;strong&gt;&amp;lt; Intro &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&amp;quot;A lightweight Python Web Framework ! &amp;quot; ----&amp;gt;
&lt;a href=&#34;https://flask.palletsprojects.com/en/latest/quickstart/&#34;&gt;Flask Docs&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-handle-static-file-&#34;&gt;&lt;strong&gt;&amp;lt; Handle Static File &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;basic&#34;&gt;Basic:&lt;/h3&gt;
&lt;p&gt;Path: /static/images/01.jpg&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## HTML:&lt;/span&gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/static/images/01.jpg&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span class=&#34;c1&#34;&gt;## Browser:&lt;/span&gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/static/images/01.jpg&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;change-the-path&#34;&gt;Change the path:&lt;/h3&gt;
&lt;p&gt;Path: /views/assets/01.jpg&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__name__, &lt;span class=&#34;nv&#34;&gt;static_folder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;views/assets/&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__name__, &lt;span class=&#34;nv&#34;&gt;static_folder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;images/&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;## or&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__name__, &lt;span class=&#34;nv&#34;&gt;static_folder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./views/assets/&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__name__, &lt;span class=&#34;nv&#34;&gt;static_folder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./images/&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;## HTML:&lt;/span&gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ url_for(&amp;#39;static&amp;#39;, filename=&amp;#39;01.jpg&amp;#39;) }}&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;img src=&amp;#34;01.jpg&amp;#34;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## Browser:&lt;/span&gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/assets/01.jpg&amp;#34;&lt;/span&gt;&amp;gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/images/01.jpg&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;change-the-path-that-show-in-browser&#34;&gt;Change the path that show in browser:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Flask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__name__, &lt;span class=&#34;nv&#34;&gt;static_url_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/Hello&amp;#34;&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;static_folder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;views/assets/&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## HTML:&lt;/span&gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{{ url_for(&amp;#39;static&amp;#39;, filename=&amp;#39;01.jpg&amp;#39;) }}&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span class=&#34;c1&#34;&gt;# &amp;lt;img src=&amp;#34;/Hello/01.jpg&amp;#34;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## Browser:&lt;/span&gt;
&amp;lt;img &lt;span class=&#34;nv&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/Hello/01.jpg&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;But actually image is still under the path &lt;code&gt;views/assets/&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-database-connection-&#34;&gt;&lt;strong&gt;&amp;lt; Database Connection &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;flask-sqlalchemy&#34;&gt;Flask-SQLAlchemy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Also support SQLAlchemy&lt;/li&gt;
&lt;li&gt;Raw SQL / ORM&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Flask-SQLAlchemy: &lt;a href=&#34;https://flask-sqlalchemy.palletsprojects.com/en/2.x/&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;SQLAlchemy: &lt;a href=&#34;https://docs.sqlalchemy.org/en/14/glossary.html#term-2.0-style&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;pip install flask-sqlalchemy
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;from flask_sqlalchemy import SQLAlchemy
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;setting-uri&#34;&gt;Setting URI:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = [DB_TYPE]+[DB_CONNECTOR]://[USERNAME]:[PASSWORD]@[HOST]:[PORT]/[DB_NAME]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;sqlite-eg&#34;&gt;SQLite e.g.:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;app.config&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SQLALCHEMY_DATABASE_URI&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sqlite:////db/testing.db&amp;#34;&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sqlite:///&amp;#34;&lt;/span&gt; + absolute path + name.db&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## folder: /db/&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## db name: testing.db&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## &amp;#39;sqlite:////absolute/path/to/foo.db&amp;#39;&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;## -----------&lt;/span&gt;
import os
&lt;span class=&#34;nv&#34;&gt;basedir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; os.path.abspath&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;os.path.dirname&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__file__&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
def create_sqlite_uri&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;db_name&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sqlite:///&amp;#34;&lt;/span&gt; + os.path.join&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;basedir, db_name&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;mysql-eg&#34;&gt;MySQL e.g.:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Need pymysql&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pip install pymysql
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;app.config&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SQLALCHEMY_DATABASE_URI&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 
mysql+pymysql://&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;user_name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;user_password&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;@&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;HOST&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:3306/&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;db_name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## e.g.&lt;/span&gt;

mysql+pymysql://root:password@localhost:3306/myapp
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;postgresql-eg&#34;&gt;PostgreSQL e.g.:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Need psycopg2-binary&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pip install psycopg2-binary
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;app.config&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SQLALCHEMY_DATABASE_URI&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 
postgresql://&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;user_name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;user_password&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;@&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;HOST&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:5432/&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;db_name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## e.g.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## no password&lt;/span&gt;
postgresql://linpinhung:linpinhung@localhost:5432/app_pro

&lt;span class=&#34;c1&#34;&gt;## HOST should be different depend on where your db is, for example, I set it in Docker, then my HOST will depend on what I configure.&lt;/span&gt;
postgresql://name:name@db:5432/app_docker

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;config&#34;&gt;Config:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;app.config[&#39;SQLALCHEMY_ENGINE_OPTIONS&#39;] = {
    &#39;pool_pre_ping&#39;: True,
    &#39;pool_recycle&#39;: 300,
    &#39;pool_timeout&#39;: 900,
    &#39;pool_size&#39;: 10,
    &#39;max_overflow&#39;: 5,
    .....: ...,
    ....
    ....
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;SQLALCHEMY_ECHO(For debug):
&lt;ul&gt;
&lt;li&gt;Default: False&lt;/li&gt;
&lt;li&gt;If True, print Raw SQL in console&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SQLALCHEMY_RECORD_QUERIES
&lt;ul&gt;
&lt;li&gt;If True, can check query detail&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;from flask_sqlalchemy import get_debug_queries

def after_request(response):
    for query in get_debug_queries():
        print(query.statement) 
        print(query.parameters) 
        print(query.duration)
        print(query.context) 
    return reponse
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;get_debug_queries can also use in other ways.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SQLALCHEMY_TRACK_MODIFICATIONS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mostly set with False.&lt;/li&gt;
&lt;li&gt;Flask recommend using SQLAlchemy events directly &lt;a href=&#34;https://flask-sqlalchemy.palletsprojects.com/en/master/signals/&#34;&gt;Signalling Support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQLALCHEMY_BINDS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For handling multiples database.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;basic-model-fromat&#34;&gt;Basic Model Fromat:&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;model/models.py&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;flask_login&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UserMixin&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sqlalchemy.sql&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Playlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;primary_key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;artist&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;artist_spotify_uri&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;artist_spotify_image_url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;song&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;artist_genres&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DateTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 拿到當下時間&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ForeignKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;user.id&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 拿使用者 id 當 fk&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# user_id = db.Column(db.Integer, db.ForeignKey(&amp;#39;user.id&amp;#39;), nullable=False)  # 拿使用者 id 當 fk&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;test_migrate_col&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;120&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nullable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 預設就是 nullable=True 可以不寫&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;artist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;song&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;artist&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;artist&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;song&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;song&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;
        
        
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UserMixin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;primary_key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;first_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;playlists&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relationship&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Playlist&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# playlists = db.relationship(&amp;#39;Playlist&amp;#39;, backref=&amp;#39;user&amp;#39;)&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;first_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;first_name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;data-manipulationcrud&#34;&gt;Data Manipulation(CRUD):&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Get:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;self.model.query.get(id)
Playlist.query.get(id)
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Get All:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;self.model.query.all()
Playlist.query.all()
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Get with filter:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## method 1&lt;/span&gt;
self.model.query.filter_by&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;**filter_dic&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;.all&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;## method 2&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;my_filters&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;artist&amp;#39;&lt;/span&gt;:&lt;span class=&#34;s1&#34;&gt;&amp;#39;xxxxx&amp;#39;&lt;/span&gt;, &lt;span class=&#34;s1&#34;&gt;&amp;#39;song&amp;#39;&lt;/span&gt;:&lt;span class=&#34;s1&#34;&gt;&amp;#39;xxxxx&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;query&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; session.query&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;self.model&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; attr,value in my_filters.iteritems&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;:
    &lt;span class=&#34;nv&#34;&gt;query&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; query.filter&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt; getattr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;self.model,attr&lt;span class=&#34;o&#34;&gt;)==&lt;/span&gt;value &lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;results&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; query.all&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Delete:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;row = self.get_data(id)
db.session.delete(row)
db.session.commit()
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Insert:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nv&#34;&gt;new_top10_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Dashboard&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;dashboard_artist&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i.artist, &lt;span class=&#34;nv&#34;&gt;dashboard_song&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i.song, &lt;span class=&#34;nv&#34;&gt;artist_spotify_uri&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i.spotify_uri, &lt;span class=&#34;nv&#34;&gt;artist_spotify_image_url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i.spotify_image_url, &lt;span class=&#34;nv&#34;&gt;song_youtube_url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i.youtube_url, &lt;span class=&#34;nv&#34;&gt;artist_genres&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i.genres&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
db.session.add&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;new_top10_data&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
db.session.commit&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;## -----------------&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## Usage:&lt;/span&gt;
   &lt;span class=&#34;c1&#34;&gt;##  Dic: **Dic&lt;/span&gt;
   &lt;span class=&#34;c1&#34;&gt;##  List: *List&lt;/span&gt;
def insert_data&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;self, insert_dic&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:
    &lt;span class=&#34;nv&#34;&gt;new_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; self.model&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;**insert_dic&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    db.session.add&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;new_data&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    db.session.commit&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;review&#34;&gt;Review:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Static File handling try to use &lt;code&gt;url_for&lt;/code&gt; will be better.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static_url_path&lt;/code&gt; can hide the real path.&lt;/li&gt;
&lt;li&gt;DB connection should careful for the &lt;code&gt;path&lt;/code&gt; / &lt;code&gt;host, user, password&lt;/code&gt; / &lt;code&gt;dependencies&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.maxlist.xyz/2019/11/10/flask-sqlalchemy-setting/&#34;&gt;Max行銷誌&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flask-sqlalchemy.palletsprojects.com/en/2.x/&#34;&gt;FlaskSQLAlchemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/seaniap/python-web-flask-%E4%BD%BF%E7%94%A8%E9%9D%9C%E6%85%8B%E6%AA%94%E6%A1%88-ac00e863a470&#34;&gt;Sean Yeh in Python Everywhere -from Beginner to Advanced&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-上一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 上一篇 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://linooohon.com/blog/blog/posts/04/210710/「Flask」01: Basic, Route, Templates, GET, POST&#34;&gt;「Flask」01: Basic, Route, Templates, GET, POST&lt;/a&gt;&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/python/" term="python" label="python" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/flask/" term="flask" label="flask" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/flask/" term="Flask" label="Flask" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/python/" term="Python" label="Python" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/web/" term="Web" label="Web" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">「Flask」01: Basic, Route, Templates, GET, POST</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/04/210710/%E3%80%8CFlask%E3%80%8D01:%20Basic,%20Route,%20Templates,%20GET,%20POST/" />
            <id>https://linooohon.com/blog/posts/04/210710/%E3%80%8CFlask%E3%80%8D01:%20Basic,%20Route,%20Templates,%20GET,%20POST/</id>
            <updated>2021-11-28T15:18:05&#43;09:00</updated>
            <published>2021-07-10T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;前陣子實做了 Flask App 紀錄一下基本處理! (EN)&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/04_05_210710/04_05_210710_flask_intro.png&#34; width=&#34;30%&#34;/&gt;</summary>
            
                <content type="html">&lt;h1 style=&#34;text-align:center&#34;&gt;
「Flask」01: Basic, Route, Templates, GET, POST
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;前陣子用 Flask 實做了一個 LifePlaylist App 這裡簡單紀錄一下基本的東西，以後回頭更快重拾記憶🤧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/04_05_210710/04_05_210710_flask_intro.png&#34; alt=&#34;前陣子實做了 Flask App 紀錄一下基本處理!&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-intro-&#34;&gt;&lt;strong&gt;&amp;lt; Intro &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&amp;quot;A lightweight Python Web Framework ! &amp;quot; ----&amp;gt;
&lt;a href=&#34;https://flask.palletsprojects.com/en/latest/quickstart/&#34;&gt;Flask Docs&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-quick-start-to-run-a-flask-app-&#34;&gt;&lt;strong&gt;&amp;lt; Quick start to run a Flask App &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;install&#34;&gt;Install:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;pip install Flask
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-python-file&#34;&gt;Create python file:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;touch main.py
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;import&#34;&gt;Import:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;from flask import Flask
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-instance&#34;&gt;Create instance:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;app = Flask(__name__)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;route&#34;&gt;Route:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&#39;/&#39;)
def index():
    return &#39;Hi Flask App ! &#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;setting-only-when-you-run-python-file-directly-then-execute-apprun&#34;&gt;Setting only when you run python file directly, then execute &lt;code&gt;app.run()&lt;/code&gt;:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;if __name__ == &#39;__main__&#39;:
    app.run()
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;now-run-flask-app&#34;&gt;Now run Flask App:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;python main.py
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;And Flask Default Port:5000: &lt;code&gt;http://127.0.0.1:5000&lt;/code&gt; will run on local.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi Flask App !&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;-handling-route-&#34;&gt;&lt;strong&gt;&amp;lt; Handling Route &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;example&#34;&gt;Example:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;@app.route&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
def xxxxxx&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;:
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;basic&#34;&gt;Basic:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&#39;/login&#39;)
def login():
    return &#39;This is login page.&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;handling-multiple-routes-with-same-function&#34;&gt;Handling Multiple routes with same function:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&#39;/index&#39;)
@app.route(&#39;/&#39;)
def home():
    return &#39;Welcome Home.&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;routing-parameters&#34;&gt;Routing parameters:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&#39;/&amp;lt;number&amp;gt;&#39;)
def number():
    return f&#39;Your route is /{number} .&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-use-templatejinja2-&#34;&gt;&lt;strong&gt;&amp;lt; Use Template(Jinja2) &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;import-1&#34;&gt;Import:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;from flask import render_template
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-xxxhtml&#34;&gt;Create xxx.html:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mkdir templates
touch templates/welcome.html
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;change-return&#34;&gt;Change return:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&amp;quot;/welcome&amp;quot;)
def home():
    return render_template(&#39;welcome.html&#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;pass-parameters&#34;&gt;Pass parameters：&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&amp;quot;/welcome/&amp;lt;yourname&amp;gt;&amp;quot;)
def home(yourname):
    return render_template(&#39;welcome.html&#39;, yourname=yourname)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;welcomehtml&#34;&gt;welcome.html:&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Use {{}}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Basic:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{{ yourname }}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;List:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{{ list.0 }}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Dict:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{{ Dict.key }}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;If statement:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{% if &amp;lt;xxxx&amp;gt; %}
    Hi, {{ xxxx }}!
{% else %}
    Oops...
{% endif %}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;For loop:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{% for item in &amp;lt;xxxx&amp;gt; %}
    &amp;lt;li&amp;gt;{{ item }}&amp;lt;/li&amp;gt;
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Use base template:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;## Create base.html
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;{% extends &amp;quot;base.html&amp;quot; %}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Put own content(child templates):&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;e.g.: {% block content %}{% endblock %}
e.g.: {% block body %}{% endblock %}
e.g.: {% block custom %}{% endblock %}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-get-post-&#34;&gt;&lt;strong&gt;&amp;lt; GET, POST &amp;gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;import-2&#34;&gt;Import:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;from flask import request
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;setting-route-with-get-method&#34;&gt;Setting route with GET method:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Settting Route:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Remember is &amp;quot;methods&amp;quot; not &amp;quot;method&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;**locals()&lt;/code&gt; can pass all args.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;from flask import Flask, request, render_template

app = Flask(__name__)

@app.route(&#39;/&#39;,methods=[&#39;GET&#39;])
def index():
    q = request.args.get(&#39;q&#39;)
    q2 = request.args.get(&#39;q2&#39;)
    return render_template(&#39;get.html&#39;, **locals())

if __name__ == &#39;__main__&#39;:
    app.run()
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Remember is &amp;quot;templates&amp;quot; not &amp;quot;template&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;templates/get.html&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{{ q }}
{{ q2 }}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Run local and enter URL&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;456&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;## Should appear 123 456&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;setting-route-with-post-method&#34;&gt;Setting route with POST method:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Settting &lt;code&gt;/form&lt;/code&gt; Route:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;from flask import Flask, request, render_template

app = Flask(__name__)

@app.route(&amp;quot;/form&amp;quot;)
def form():
    return render_template(&#39;form.html&#39;)
    
if __name__ == &#39;__main__&#39;:
    app.run()
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Create form.html&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Setting &lt;code&gt;action=&amp;quot;{{url_for(&#39;submit&#39;)}}&amp;quot;&lt;/code&gt; for POST route&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;form method=&amp;quot;POST&amp;quot; action=&amp;quot;{{url_for(&#39;submit&#39;)}}&amp;quot;&amp;gt;
    &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;name&amp;quot; placeholder=&amp;quot;Name&amp;quot;&amp;gt;
    &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;email&amp;quot; placeholder=&amp;quot;Email&amp;quot;&amp;gt;
    &amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;Submit&amp;lt;/button&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Handle &lt;code&gt;/submit&lt;/code&gt; Route:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;@app.route(&amp;quot;/submit&amp;quot;, methods=[&#39;POST&#39;])
def submit():
    name = request.values[&#39;name&#39;]
    email = request.values[&#39;email&#39;]
    return render_template(&#39;submit.html&#39;,**locals())
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Create submit.html&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;body&amp;gt;
    {{ name }}
    {{ email }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Run local and enter URL&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;## Should appear form, fill out name and email, then submit.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## Should go to `http://127.0.0.1:5000/submit`, and show name and email.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;handle-both-get-and-post-with-one-route&#34;&gt;Handle both GET and POST with one route:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;from flask import Flask, request, render_template
from flask import redirect, url_for

@app.route(&amp;quot;/form&amp;quot;, methods=[&amp;quot;POST&amp;quot;,&amp;quot;GET&amp;quot;])
def form():
    if request.method == &amp;quot;POST&amp;quot;:
        name = request.form[&#39;name&#39;]
        email = request.form[&#39;email&#39;]
        return redirect(url_for(&#39;submit&#39;,**locals()))
    else:
        return render_template(&#39;form.html&#39;)

@app.route(&amp;quot;/submit&amp;quot;, methods=[&#39;POST&#39;])
def submit():
    name = request.values[&#39;name&#39;]
    email = request.values[&#39;email&#39;]
    return render_template(&#39;submit.html&#39;,**locals())
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-the-end-&#34;&gt;&lt;strong&gt;&amp;lt; The End &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;review&#34;&gt;Review:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Remember Route Method settings is &amp;quot;methods&amp;quot; not &amp;quot;method&amp;quot;.&lt;/li&gt;
&lt;li&gt;Remember folder name is &amp;quot;templates&amp;quot; not &amp;quot;template&amp;quot;.&lt;/li&gt;
&lt;li&gt;Jinja2 syntax ?&lt;/li&gt;
&lt;li&gt;**locals() ?&lt;/li&gt;
&lt;li&gt;redirect &amp;amp; url_for ?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jinja.palletsprojects.com/en/3.0.x/templates/?highlight=enabled%20line&#34;&gt;Jinja2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flask.palletsprojects.com/en/latest/quickstart/&#34;&gt;Flask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/seaniap/tagged/flask&#34;&gt;Sean Yeh in Python Everywhere -from Beginner to Advanced&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-next-下一篇-&#34;&gt;&lt;strong&gt;&amp;lt; Next 下一篇 &amp;gt;&lt;/strong&gt;:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://linooohon.com/blog/blog/posts/05/210714/「「Flask」02: Static File handling, Database connection&#34;&gt;「Flask」02: Static File handling, Database connection&lt;/a&gt;&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/python/" term="python" label="python" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/flask/" term="flask" label="flask" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/flask/" term="Flask" label="Flask" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/python/" term="Python" label="Python" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/web/" term="Web" label="Web" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">02「Git 介紹」git rebase -i</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/03/210620/02%E3%80%8CGit%20%E4%BB%8B%E7%B4%B9%E3%80%8Dgit%20rebase%20-i/" />
            <id>https://linooohon.com/blog/posts/03/210620/02%E3%80%8CGit%20%E4%BB%8B%E7%B4%B9%E3%80%8Dgit%20rebase%20-i/</id>
            <updated>2021-11-28T15:17:24&#43;09:00</updated>
            <published>2021-06-20T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;Git 第二篇, git rebase -i 互動模式&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/03_210620/03_210620_git_rebase_2.png&#34; width=&#34;60%&#34;/&gt;</summary>
            
                <content type="html">&lt;h1 style=&#34;text-align:center&#34;&gt;
「Git 介紹」Ch2: git rebase 互動模式 - git rebase -i
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;上次提到 &lt;code&gt;git rebase&lt;/code&gt; 的使用時機，這次介紹一下 &lt;code&gt;git rebase -i&lt;/code&gt; 互動模式!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/03_210620/03_210620_git_rebase_2.png&#34; alt=&#34;Git 第二篇, git rebase -i 互動模式&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;what-什麼是-git-rebase--i&#34;&gt;(What?) 什麼是 git rebase -i&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Git rebase 提供的全家餐，輸入魔法&lt;code&gt;-i&lt;/code&gt;, 搭配 commit ID, 神力再現。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;how-git-rebase--i-的幾種操作&#34;&gt;(How?) git rebase -i 的幾種操作&lt;/h1&gt;
&lt;h2 id=&#34;1情境&#34;&gt;1.情境:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;假設現在自己分支多了 3 個 commit 準備要合回去主分支，在合回去之前，想對自己的 commit 先做些整理，這時候 &lt;code&gt;git rebase -i&lt;/code&gt; 就派上用場了。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell=bash&#34; data-lang=&#34;shell=bash&#34;&gt;# 目前的三個 commit, commit ID 先用 aaaaaaa, bbbbbbb, ccccccc 代替, a 是第一個 commit, b 是第二個, c 是第三個
ccccccc commit-msg
bbbbbbb commit-msg
aaaaaaa commit-msg
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;2-流程&#34;&gt;2. 流程:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;進入互動模式&lt;/li&gt;
&lt;li&gt;執行這次想做的修改&lt;/li&gt;
&lt;li&gt;如果有衝突的話，需要解決&lt;/li&gt;
&lt;li&gt;完成操作&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3-進入git-rebase--i-commit-id&#34;&gt;3. 進入，&lt;code&gt;git rebase -i &amp;lt;commit ID&amp;gt;&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;解釋: 代表我現在想進入 interactive rebase 的模式來做些事情，那我要處理哪些 commit 呢? 就是 -i 後面輸入的 &lt;code&gt;&amp;lt;commit ID&amp;gt;&lt;/code&gt; 之後的所有 commit 我可能需要處理。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;所以這行指令就是，我想進入互動模式處理 &lt;code&gt;&amp;lt;commit ID&amp;gt;&lt;/code&gt; 之後的 commit (不包括輸入的 commit ID 的 commit 好饒舌?..)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;4-進來後注意順序&#34;&gt;4. 進來後，注意順序:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一進來互動模式時，最新的 commit 是在最下面！&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell=bash&#34; data-lang=&#34;shell=bash&#34;&gt;# 像是這樣
# 上面最舊
pick aaaaaaa commit-msg #1
pick bbbbbbb commit-msg #2
pick ccccccc commit-msg #3
# 下面最新
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;5-手法&#34;&gt;5. 手法:&lt;/h2&gt;
&lt;h3 id=&#34;pick---預設值&#34;&gt;&lt;code&gt;pick&lt;/code&gt; - 預設值&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用: 意思是保留這個 commit&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;squash---合併&#34;&gt;&lt;code&gt;squash&lt;/code&gt; - 合併&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用: 合併多個 commit&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pick aaaaaaa commit-msg #1
squash bbbbbbb commit-msg #2
pick ccccccc commit-msg #3
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;把 pick 改成 squash。如此,
&lt;code&gt;bbbbbbb&lt;/code&gt; 會與前一個 commit &lt;code&gt;aaaaaaa&lt;/code&gt; 合併。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;reword---修改訊息&#34;&gt;&lt;code&gt;reword&lt;/code&gt; - 修改訊息&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用: 修改 commit message&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pick aaaaaaa commit-msg #1
reword bbbbbbb commit-msg #2
reword ccccccc commit-msg #3
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;如此便能修改 commit message&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;drop---丟掉&#34;&gt;&lt;code&gt;drop&lt;/code&gt; - 丟掉&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用: 丟掉這個 commit&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pick aaaaaaa commit-msg #1
drop bbbbbbb commit-msg #2
pick ccccccc commit-msg #3
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;如此 &lt;code&gt;bbbbbbb&lt;/code&gt; 這個 commit 便會被丟掉。
也可以直接刪掉那一行，也可以達成丟掉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;edit---修改內容&#34;&gt;&lt;code&gt;edit&lt;/code&gt; - 修改內容&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用: 我要這個 commit 但到這裡的時候停一下，我要修改一下。
修改完後指令接著做:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;git add xxxx
git commit --amend --no-edit
# --no-edit 是不修改 commit 訊息
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;fixup---也是合併&#34;&gt;&lt;code&gt;fixup&lt;/code&gt; - 也是合併&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用:  也是合併，但捨棄這個 commit message。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;替換-commit-順序&#34;&gt;&lt;code&gt;替換 commit 順序&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;就直接換就好哈哈哈哈&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pick aaaaaaa commit-msg #1
pick ccccccc commit-msg #3
pick bbbbbbb commit-msg #2
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;6-一些會遇到的基本流程&#34;&gt;6. 一些會遇到的基本流程：&lt;/h2&gt;
&lt;h3 id=&#34;修改-commit-message&#34;&gt;修改 commit message。&lt;/h3&gt;
&lt;h3 id=&#34;遇到衝突&#34;&gt;遇到衝突:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;解決衝突 
git add xxxxxxxx
git rebase --continue
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;放棄這次-rebase回到之前的狀態&#34;&gt;放棄這次 rebase，回到之前的狀態。&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git rebase --abort
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;小心使用-慎用如果有衝突這個會丟掉整個-commit很容易出事&#34;&gt;小心使用, 慎用。如果有衝突，這個會丟掉整個 commit，很容易出事。&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git rebase --skip
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;the-end&#34;&gt;The End:&lt;/h2&gt;
&lt;h3 id=&#34;review&#34;&gt;Review:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git rebase -i&lt;/code&gt; 所做的更動，commit ID 的 SHA-1值是會變的，也就是說與人協作時要注意目前做的動作會不會影響他人。&lt;/li&gt;
&lt;li&gt;善用 &lt;code&gt;git rebase -i&lt;/code&gt; 整理自己的 commit 紀錄。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase -i&lt;/code&gt; 時, 遇到衝突會一個一個停下來讓我們解決。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase --skip&lt;/code&gt; 危險！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase --abort&lt;/code&gt; 當作什麼事都沒發生。&lt;/li&gt;
&lt;li&gt;最後, &lt;code&gt;git rebase -i &amp;lt;commit ID&amp;gt;&lt;/code&gt; 安心服用，熟能生巧。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/docs/git-rebase&#34;&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learngitbranching.js.org/?locale=zh_TW&#34;&gt;Git Branching!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitbook.tw/chapters/rewrite-history/merge-multiple-commits-to-one-commit.html&#34;&gt;高見龍-為你自己學 Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;上一篇&#34;&gt;上一篇:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://linooohon.com/blog/blog/posts/02/210615/01「Git 介紹」什麼是 git rebase&#34;&gt;01「Git 介紹」什麼是 git rebase&lt;/a&gt;&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/git/" term="git" label="git" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/git/" term="Git" label="Git" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">01「Git 介紹」什麼是 git rebase</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/02/210615/01%E3%80%8CGit%20%E4%BB%8B%E7%B4%B9%E3%80%8D%E4%BB%80%E9%BA%BC%E6%98%AF%20git%20rebase/" />
            <id>https://linooohon.com/blog/posts/02/210615/01%E3%80%8CGit%20%E4%BB%8B%E7%B4%B9%E3%80%8D%E4%BB%80%E9%BA%BC%E6%98%AF%20git%20rebase/</id>
            <updated>2021-11-28T15:17:17&#43;09:00</updated>
            <published>2021-06-15T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;最近又整理了一下自己對 git 的概念，分享一下&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/02_210615/02_210615_git_rebase.png&#34; width=&#34;70%&#34;/&gt;</summary>
            
                <content type="html">&lt;h1 style=&#34;text-align:center&#34;&gt;
「Git 介紹」Ch1: 什麼是 git rebase
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;最近自己對 git 的概念又整理了一下，先來介紹一下 git rebase&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/02_210615/02_210615_git_rebase.png&#34; alt=&#34;Git 介紹」Ch1: 什麼是 git rebase&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;一-what-git-rebase-可以做什麼-&#34;&gt;一. (What?) git rebase 可以做什麼 ?&lt;/h2&gt;
&lt;h3 id=&#34;除了-git-merge-的另一種選擇&#34;&gt;除了 &lt;code&gt;git merge&lt;/code&gt; 的另一種選擇&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;merge 的常見三種方式: &lt;code&gt;git rebase&lt;/code&gt;, &lt;code&gt;git merge&lt;/code&gt;, &lt;code&gt;git cherry-pick&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;一般做 merge 常見大概會有 rebase、merge、cherry-pick，這篇只先針對 rebase 做分享，rebase 可以做的事情算是滿多的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;與 git merge 的差別 ?
&lt;ul&gt;
&lt;li&gt;最主要在使用 &lt;code&gt;git merge&lt;/code&gt; 的時候，如果你有注意，其實都會再產生一個做 merge 這件事情的 commit，在 &lt;code&gt;git log --graph --all&lt;/code&gt; 線圖上就不會是線性，線會轉彎然後合起來，最常見的情況是會產生小耳朵(小耳朵link)。然而在使用 &lt;code&gt;git rebase&lt;/code&gt; 做 merge 時，它會是用接點的方式接在前面，rebase 顧名思義，重新定義 base(它的根)，而當然實際 git 的實作， 不是單純拿原本的 commit 接上去，其實是複製了一份過去，SHA-1 值也是重新產生，是會改變的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;有一個狀況-git-merge-還是會保持一條線&#34;&gt;有一個狀況 git merge 還是會保持一條線&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;(除非parent branch 的 commit 始終包含在 child branch 裡，parent branch 從來沒變更過，現在要把 parent 的進度更新成 child 的進度，這時候的 merge 會走 ff(fast-forward)，也就是說不會產生額外的 commit，但這裡不討論這個，先假設 branch 間已經有分歧了，也是合作比較常見的狀況)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果在上述情況下 git merge 不想走 ff 可以 &lt;code&gt;git merge --no-ff&lt;/code&gt; 這樣一定會產生一個 commit， git 會請你再留一個 commit message。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;二-以下分享-git-rebase-git-merge-的差異&#34;&gt;二. 以下分享 &lt;code&gt;git rebase&lt;/code&gt;, &lt;code&gt;git merge&lt;/code&gt; 的差異&lt;/h2&gt;
&lt;h3 id=&#34;-先來看-git-merge接下來藉由圖片和實例讓大家參考&#34;&gt;Ⅰ. 先來看 &lt;code&gt;git merge&lt;/code&gt;，接下來藉由圖片和實例讓大家參考:&lt;/h3&gt;
&lt;p&gt;如果是 &lt;code&gt;git merge&lt;/code&gt; 的情況:
&lt;img src=&#34;https://i.imgur.com/3Jb3U5g.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;center&gt;&#34;圖1(Sourcetree)&#34;&lt;/center&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ElOabeG.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;center&gt;&#34;git log --graph --all --oneline 也是一樣的&#34;&lt;/center&gt;
&lt;ul&gt;
&lt;li&gt;目前我在 &lt;code&gt;master&lt;/code&gt; 加了 &lt;code&gt;add 01 project&lt;/code&gt; commit 接著在 &lt;code&gt;master&lt;/code&gt; commit 完後，建了一個分支 &lt;code&gt;add-02project&lt;/code&gt;，並 commit 了三次，停在 &lt;code&gt;feat: add 02.js&lt;/code&gt;，接著我繼續從 &lt;code&gt;add-02project&lt;/code&gt; 分支建了 &lt;code&gt;add-03project&lt;/code&gt; 分支，並 commit 一次 &lt;code&gt;feat: add 03.html&lt;/code&gt; ，然後我回頭從 &lt;code&gt;master&lt;/code&gt; 建 &lt;code&gt;add-04project&lt;/code&gt; 分支 commit 一次 &lt;code&gt;feat: add 04.html&lt;/code&gt;，以上都只是我亂建的不重要，只是為了講解一下。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;接下來重點是我想讓 &lt;code&gt;add-04project&lt;/code&gt; branch 與 &lt;code&gt;add-03project&lt;/code&gt; branch 做 merge，&lt;br&gt;這裡如果我先做 &lt;code&gt;git merge&lt;/code&gt;：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;目前 HEAD 在 add-04project，下指令&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ git merge add-03project
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;意思是 : merge branch &lt;code&gt;add-03project&lt;/code&gt; into branch &lt;code&gt;add-04project&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接著，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/AXL1adk.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;center&gt;&#34;圖2&#34;&lt;/center&gt;
&lt;blockquote&gt;
&lt;p&gt;你會看到線圖產生變化，多了一個 commit &lt;code&gt;cbcfe7b&lt;/code&gt;  是 for merge 的，然後線圖也還是原本的線，只是接在一起了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;-那現在來看如果使用-git-rebase&#34;&gt;Ⅱ. 那現在來看如果使用 &lt;code&gt;git rebase&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;原本的情況和圖1一樣，HEAD 一樣在 &lt;code&gt;add-04project&lt;/code&gt; branch :
&lt;img src=&#34;https://i.imgur.com/3Jb3U5g.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&#34;圖1&#34;&lt;/center&gt;
&lt;p&gt;在這裡下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git rebase add-03project
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;字面意思是請幫我把我當前的 branch 的根換成 &lt;code&gt;add-03project&lt;/code&gt; branch，所以實際上它會把當前 branch 進度複製接到 &lt;code&gt;add-03project&lt;/code&gt; branch 上，這時候會呈現如下:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/WsdMcBl.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;center&gt;&#34;圖3&#34;&lt;/center&gt;
&lt;ul&gt;
&lt;li&gt;會發現變成一條線了，且 &lt;code&gt;add-04project&lt;/code&gt; commit 內容也都在，但 SHA-1 會重新計算。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三-rebase-反悔了怎麼辦&#34;&gt;三. rebase 反悔了怎麼辦：&lt;/h2&gt;
&lt;h3 id=&#34;git-reset---hard-sha-1值&#34;&gt;&lt;code&gt;git reset --hard &amp;lt;SHA-1值&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;記得在使用 git rebase 的時候，如果反悔了剛剛的操作，不能用 &lt;code&gt;git reset --hard HEAD^&lt;/code&gt; 做相對路徑切換， 它是不會切回原樣的，要記得直接用絕對路徑切換，下 &lt;code&gt;git reflog&lt;/code&gt; 看想切回去的地方，然後下 &lt;code&gt;git reset --hard &amp;lt;SHA-1值&amp;gt;&lt;/code&gt; 也就是直接放 commit ID，或著是 reflog 上的 HEAD@{x}，&lt;code&gt;git reset --hard HEAD@{x}&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;
$ git reset --hard &amp;lt;SHA-1值&amp;gt;  &lt;span class=&#34;c1&#34;&gt;#找你想要回去的點&lt;/span&gt;
$ git reset --hard HEAD@&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;#找你想要回去的點&lt;/span&gt;
$ git reset --hard ORIG_HEAD  &lt;span class=&#34;c1&#34;&gt;#反悔離當下最近的危險操作點&lt;/span&gt;

&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;要注意的是 ORIG_HEAD 是在危險操作時紀錄上一個點，如果沒有在操作過後的當下馬上使用 git reset --hard ORIG_HEAD
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;ORIG_HEAD 很有可能會被蓋過去就不能用了，這時後就要使用其他兩個指令，可以自己選想回去的地方
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;四-git-rebase--i-會進入-rebase-的互動模式之後分享一下&#34;&gt;四. &lt;code&gt;git rebase -i&lt;/code&gt; (會進入 rebase 的互動模式，之後分享一下)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;我把它稱作小小時光機，但就像 &lt;a href=&#34;https://www.imdb.com/title/tt0088763/&#34;&gt;Back to the Future&lt;/a&gt; 演的那樣，很酷也容易不小心出問題。&lt;/li&gt;
&lt;li&gt;可以做滿多事，但也要注意有時會更動到歷史紀錄，在多人協作專案，更是要小心操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;五-why-為什麼需要-git-rebase&#34;&gt;五. (Why?) 為什麼需要 git rebase&lt;/h2&gt;
&lt;h3 id=&#34;先說結論&#34;&gt;先說結論：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;直接先說我自己認為的結論，&lt;code&gt;git rebase&lt;/code&gt; 只是工具，不管是 git merge、git rebase 還是其他 git 指令，其實都是因應情況、團隊開發模式等情況下，去做合理使用，只要在合適的情況使用 rebase 我相信是沒問題的，使用 rebase 有時可以讓專案的進度 (commit 顆粒) 更清晰。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;那什麼是合適的情況--&#34;&gt;那什麼是合適的情況 ? :&lt;/h3&gt;
&lt;p&gt;以下情況我根據自身經驗認為會使用或是可以使用:&lt;/p&gt;
&lt;h4 id=&#34;1-遠端-mastermain-branch-的-code-進度更新了-這時候自己的分支開發了一個功能準備推上去可以使用-rebase-讓自己的-branch-進度更新最後再推上去自己的分支&#34;&gt;1. 遠端 master(main) branch 的 code 進度更新了， 這時候自己的分支開發了一個功能，準備推上去，可以使用 &lt;code&gt;rebase&lt;/code&gt; 讓自己的 branch 進度更新，最後再推上去自己的分支&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ git fetch upstream
$ git rebase upstream/master
$ git push origin 自己的 branch
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-同理更新自己的-fork-repo&#34;&gt;2. 同理更新自己的 fork repo:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ git checkout master
$ git fetch upstream
$ git rebase upstream/master
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-整理-git-歷史紀錄可以修改合併變更刪除等等&#34;&gt;3. 整理 git 歷史紀錄，可以修改、合併、變更、刪除等等..&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# 使用互動模式
$ git rebase -i &amp;lt;SHA-1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;the-end&#34;&gt;The End:&lt;/h2&gt;
&lt;h3 id=&#34;review&#34;&gt;Review:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git rebase&lt;/code&gt; 與 &lt;code&gt;git merge&lt;/code&gt; 的差異&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase&lt;/code&gt; 反悔如何處理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase&lt;/code&gt; 使用時機的取捨&lt;/li&gt;
&lt;li&gt;在團隊協作中善用工具，follow 大家的共識&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/docs/git-rebase&#34;&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learngitbranching.js.org/?locale=zh_TW&#34;&gt;Git Branching!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wangyufeng.org/2020/03/15/post-20200315/&#34;&gt;王雨峰的博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitbook.tw/chapters/branch/merge-with-rebase.html&#34;&gt;高見龍-為你自己學 Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;next-下一篇&#34;&gt;Next 下一篇:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://linooohon.com/blog/blog/posts/03/210620/02「Git 介紹」git rebase -i&#34;&gt;02「Git 介紹」git rebase -i&lt;/a&gt;&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/git/" term="git" label="git" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/git/" term="Git" label="Git" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Hi Blog, YUI - TOKYO</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/01/210503/first-post/" />
            <id>https://linooohon.com/blog/posts/01/210503/first-post/</id>
            <updated>2022-02-24T01:24:35&#43;09:00</updated>
            <published>2021-05-03T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;Blog. 你好，多多指教&lt;/p&gt; &lt;img width=&#34;50%&#34; src=&#34;https://linooohon.com/blog/blog/images/01_210503/01_210503_firstpost.jpg&#34; /&gt;</summary>
            
                <content type="html">&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/01_210503/01_210503_firstpost.jpg&#34; alt=&#34;Hi Blog, YUI - TOKYO&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;try-to-share-the-things-i-experienced-and-some-of-my-ideas-on-this-platform-thanks&#34;&gt;Try to share the things I experienced and some of my ideas on this platform, thanks!&lt;/h5&gt;
&lt;h5 id=&#34;so&#34;&gt;So,&lt;/h5&gt;
&lt;h5 id=&#34;for-the-first-post-of-the-new-site-im-going-to-share-the-lyrics-of-the-songs-that-i-really-love-recently&#34;&gt;for the first post of the new site, I&#39;m going to share the lyrics of the songs that I really love recently.&lt;/h5&gt;
&lt;p&gt;&lt;em&gt;YUI - TOKYO&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;住みなれた　この部屋を　出てゆく日が来た   離開這住慣了的房間的日子到了
新しい旅だちに　まだ戸惑ってる           面對全新的旅程 我仍然感到迷茫
駅まで向かうバスの中 友達にメールした     在駛向車站的公車上 傳了簡訊給朋友

朝のホームで　電話もしてみた    早上打了通電話回家 但總覺得哪裡不太對勁
でもなんか　違う気がした

古いギターをひとつ持ってきた  帶著一把舊吉他 照片全留在家裡
写真は全部　置いてきた

何かを手放して　そして手にいれる   都要放棄一些才能因而得到一些 是個循環吧?
そんな繰り返しかな?

つよがりは　いつだって　夢に続いてる    逞強在不知不覺中蔓延到夢中
臆病になったら　そこで途切れるよ        如果膽怯的話 那麼夢想會在這裡中斷的

走りだした電車の中  少しだけ泣けてきた  在向前急駛的電車中 稍微哭了出來

窓の外に続いてる　この町は  窗外的景色依舊是這個城鎮 希望不要改變阿
かわらないでと願った

古いギターをアタシにくれたひと     送我這把舊吉他的人跟我說 東京是很可怕的
東京は怖いって言ってた

答えを探すのは　もうやめた     放棄去尋找他所說的答案 就當是他說錯了吧
間違いだらけでいい

赤い夕焼けがビルに途切れた　　　赤紅的夕陽被大樓截斷 我忍住了淚水
涙をこらえても

次の朝がやってくるたびごとに　　隨著下一個清晨來臨　還是會有迷惑產生對吧
迷うことだってあるよね?

正しいことばかり選べない　不可能永遠都選到最正確的選擇　這點我至少是明白的
それくらいわかってる


Today I have to leave this old room of mine.
I&#39;m still unsure about this new journey.

On the bus ride to the train station,
I text-messaged my friends.

At the station I tried calling someone,
But something felt different about it all.
All I brought with me was an old guitar,
Leaving the rest of my old life behind.

I take something and I get something,
I ponder that cycle in my heart.

I always try to hide my fears in my dreams.
When get afraid, I can&#39;t seem to do anything.

I got on the train, it rushed away,
And I slowly started to cry.

Life in my town continued on outside.
I prayed that it&#39;d never change.
The man who gave me my old guitar
Told me Tokyo is a scary place.

I&#39;ve stopped looking for all the answers.
It&#39;s okay to have some flaws.

Those grey skyscrapers blocked the setting sun.
Even if I endure these tears today,
Won&#39;t tomorrow&#39;s cold morning hold more doubt?

I can&#39;t choose the right thing,
At least I know that much.

&lt;/code&gt;&lt;/pre&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2021/" term="2021" label="2021" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/life/" term="life" label="life" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/music/" term="music" label="music" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/life/" term="Life" label="Life" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/music/" term="Music" label="Music" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">旅途告終，隨筆手記</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/00/old/190906/20190906%E6%97%85%E9%80%94%E5%91%8A%E7%B5%82%E9%9A%A8%E7%AD%86%E6%89%8B%E8%A8%98/" />
            <id>https://linooohon.com/blog/posts/00/old/190906/20190906%E6%97%85%E9%80%94%E5%91%8A%E7%B5%82%E9%9A%A8%E7%AD%86%E6%89%8B%E8%A8%98/</id>
            <updated>2021-12-08T12:18:40&#43;09:00</updated>
            <published>2019-09-06T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;寫在 19 年 9 月，らい家&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/00_old/00_old_190906_旅途告終隨筆手記_鎌倉pic.jpg&#34; width=&#34;50%&#34;/&gt;</summary>
            
                <content type="html">&lt;h6 id=&#34;201996-旅途告終隨筆手記&#34;&gt;/2019.9.6 旅途告終，隨筆手記&lt;/h6&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/00_old/00_old_190906_%E6%97%85%E9%80%94%E5%91%8A%E7%B5%82%E9%9A%A8%E7%AD%86%E6%89%8B%E8%A8%98_%E9%8E%8C%E5%80%89pic.jpg&#34; alt=&#34;https://linooohon.com/blog&#34;&gt;&lt;/p&gt;
&lt;p style=&#34;text-align:center;&#34;&gt;鎌倉 - Kamakura, Japan / 2019 /うた&lt;p&gt;
---
&lt;p&gt;
旅程即將到達尾聲&lt;br/&gt;
就像去年夏天那樣&lt;br/&gt;
剛從國外打工回來&lt;br/&gt;
大家都說多出去看看好像會變得不一樣&lt;br/&gt;
眼所及 耳所聞 形形色色的人們&lt;br/&gt;
大至景 小至每每嘆息那景的一瞬間&lt;br/&gt;
因為喜歡那靜觀的時刻&lt;br/&gt;
都會不由自主的拿起手機屏氣錄下約10秒&lt;br/&gt;
讓自己可以一再重回那當下&lt;br/&gt;
那當下的顏色 溫度 人們 聲音和自己的心情&lt;br/&gt;
我不知道自己有沒有因爲這些過去的旅程&lt;br/&gt;
而變得不一樣&lt;br/&gt;
甚至更現實的是換來前途一片光明的賺錢人生&lt;br/&gt;
其實我真的不知道&lt;br/&gt;
大概有99趴的機率在回去當兵完後&lt;br/&gt;
又回到那個輪迴 找工作 工作 再工作 養活自己 養活家人&lt;br/&gt;
做著看似自己還可以接受的工作而努力著&lt;br/&gt;
才剛畢業就深感自己在社會上已經慢別人一步還什麼的 總有股無形的壓力逼你賺錢&lt;br/&gt;
北京高峰時地鐵的擁擠&lt;br/&gt; 
日本地鐵上下班時滿載&lt;br/&gt;
卻還是寧靜到有點不透氣&lt;br/&gt;
都使我感到徬徨&lt;br/&gt;
此時此刻只有文字能帶給我一顆定心丸&lt;br/&gt;
陳綺貞的歌使我下筆能更深刻&lt;br/&gt;
儘管是在旅遊 有時うた和らい或是誰問我是不是累了為何臉上看不到一點愉悅&lt;br/&gt;
我也答不上來 就是對未來的恐慌吧&lt;br/&gt;
希望8號的颱風不會讓我離不開東京&lt;br/&gt;
更希望明天的旅遊能順利 不下雨&lt;br/&gt;
最後要謝謝我爸媽的付出&lt;br/&gt;
才能讓我一路上遇到一堆好人&lt;br/&gt;
看得愈多 就自知自己有多不足&lt;br/&gt;
提醒自己別片面主觀猛然的說出道理結論&lt;br/&gt;
客觀 客觀 客觀 闡述所聽聞的任何事&lt;br/&gt;
謙虛且有脈絡的表達自己的想法&lt;br/&gt;
該回去陪你們了！&lt;br/&gt;
我會加油的&lt;br/&gt;
-&lt;br/&gt;
2019.9.6 らいの家&lt;br/&gt;
哦對期待回去洗底片～&lt;br/&gt;
&lt;/p&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2019/" term="2019" label="2019" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/life/" term="life" label="life" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/life/" term="Life" label="Life" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/journey/" term="Journey" label="Journey" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/beijing/" term="Beijing" label="Beijing" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/japan/" term="Japan" label="Japan" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">初探北京</title>
            <link rel="alternate" type="text/html" href="https://linooohon.com/blog/posts/00/old/190706/20190706%E5%88%9D%E6%8E%A2%E5%8C%97%E4%BA%AC/" />
            <id>https://linooohon.com/blog/posts/00/old/190706/20190706%E5%88%9D%E6%8E%A2%E5%8C%97%E4%BA%AC/</id>
            <updated>2021-12-08T12:18:25&#43;09:00</updated>
            <published>2019-07-06T18:36:14&#43;08:00</published>
            <author>
                    <name>mitsukuchiph.</name>
                    <uri>https://linooohon.com</uri>
                    <email>linooohon@gmail.com</email>
                    </author>
            <summary type="html">&lt;p align=&#34;center&#34;&gt;空氣、人、標語&lt;/p&gt; &lt;img src=&#34;https://linooohon.com/blog/blog/images/00_old/00_old_190706_初探北京.jpg&#34; width=&#34;50%&#34;/&gt;</summary>
            
                <content type="html">&lt;h6 id=&#34;201976-初探北京&#34;&gt;/2019.7.6 初探北京&lt;/h6&gt;
&lt;p&gt;&lt;img src=&#34;https://linooohon.com/blog/blog/images/00_old/00_old_190706_%E5%88%9D%E6%8E%A2%E5%8C%97%E4%BA%AC.jpg&#34; alt=&#34;https://linooohon.com/blog&#34;&gt;&lt;/p&gt;
&lt;p style=&#34;text-align:center;&#34;&gt;天安門廣場 - Beijing, China / 2019&lt;p&gt;
---
&lt;p&gt;
前一天大夥兒一點多入眠&lt;br/&gt;
五點多又不情願的懶洋洋起床&lt;br/&gt;
為的是趕上今天六點集合&lt;br/&gt;
去萬里長城的大巴&lt;br/&gt;
一上車幾乎睡成一片&lt;br/&gt;
下一次再張開眼 也過了快一個小時&lt;br/&gt;
到達從小到大一直聽到的那個&lt;br/&gt;
很長很長很長的長城&lt;br/&gt;
步行到入口處 ㄧ團團的民眾 等著進場&lt;br/&gt;
我想這裡的每個早晨都一直這麼熱鬧吧&lt;br/&gt;
孩子跑得跑 領隊喊來喊去 還有&lt;br/&gt;
一旁站得堅挺的兩個武警&lt;br/&gt;
加上一位特別帥的白襯衫黑西裝褲人士&lt;br/&gt;
眼看八方 提醒著民眾不要坐在欄杆上&lt;br/&gt;
有時候想拍他們的人 也會被制止&lt;br/&gt;
進去後 可能是與想像中的樣子一樣&lt;br/&gt;
沒有特別的驚喜感 腳因為坡特別的酸&lt;br/&gt;
好險前一天下過雨 今天也陰陰的&lt;br/&gt;
風吹起來特別涼爽 一點都不熱&lt;br/&gt;
走在路上發現一團一團&lt;br/&gt;
好像被規定在長城上唱著我的祖國&lt;br/&gt;
一些聽不懂的迷樣之歌 的可愛小朋友&lt;br/&gt;
看起來像他們的老師的人 邊錄著影邊說著&lt;br/&gt;
大聲一點、歌詞沒記熟&lt;br/&gt;
那些小朋友看起來很純真&lt;br/&gt;
臉上帶了點新奇感與害羞&lt;br/&gt;
還有來自中國各地的 阿姨 叔叔 阿罵 阿公&lt;br/&gt;
有時聊著天 有時坐在那說著好累&lt;br/&gt;
有時用好奇的眼光看著我們&lt;br/&gt;
可能是我們被規定要穿著的制服&lt;br/&gt;
也可能是我們的口音&lt;br/&gt;
在長城上看著每顆磚塊上被刻上的各種字&lt;br/&gt;
我忽然想到 名留青史這件事&lt;br/&gt;
是不是 名 這個字 就是很多人在追尋的&lt;br/&gt;
蓋萬里長城是不是也是想在後來的歷史上留點什麼 嚴苛的施工責任&lt;br/&gt;
讓那些曾經蓋過這城的每個工人們&lt;br/&gt;
不敢偷懶 不敢偷甲步的亂蓋&lt;br/&gt;
我何其有幸生在這個世代&lt;br/&gt;
以觀光的心態走在長城上&lt;br/&gt;
靜觀壯麗的樹林 遠眺再更遠的長城&lt;br/&gt;
每位工人當初都被蓋上姓名 為每塊磚負責現在卻鮮少人知道這些施工者是誰&lt;br/&gt;
可能大家都無法真正的知道&lt;br/&gt;
什麼是名 什麼是名留青史&lt;br/&gt;
什麼是不好的生活&lt;br/&gt;
而想像中的好生活又是如何&lt;br/&gt;
我也還在邊活著 邊更認識自己一些&lt;br/&gt;
來北京也過了兩個禮拜多&lt;br/&gt;
去過夜店 去過三里屯&lt;br/&gt;
去了頤和園 也去了天壇&lt;br/&gt;
開始了解各種app的介面&lt;br/&gt;
辦了健身房的月卡 也漸熟悉的點著外賣&lt;br/&gt;
食物特別鹹和油之外 其他都還行&lt;br/&gt;
我比較喜歡這裡的夏天&lt;br/&gt;
因為太乾 不容易流汗&lt;br/&gt;
還有&lt;br/&gt;
遇到一群好室友&lt;br/&gt;
-&lt;br/&gt;
北京手記&lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;微信沒什麼好友就可以這樣亂發哈哈哈哈&lt;/p&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/2019/" term="2019" label="2019" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/categories/life/" term="life" label="life" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/life/" term="Life" label="Life" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/journey/" term="Journey" label="Journey" />
                            
                        
                            
                            
                            
                                <category scheme="https://linooohon.com/blog/tags/beijing/" term="Beijing" label="Beijing" />
                            
                        
                    
                
            
        </entry>
    
</feed>
